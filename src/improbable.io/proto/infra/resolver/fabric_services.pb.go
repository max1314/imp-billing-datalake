// Code generated by protoc-gen-go. DO NOT EDIT.
// source: infra/resolver/fabric_services.proto

package improbable_infra

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	deployment "improbable.io/proto/improbable/platform/deployment"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ResolveServiceRequest struct {
	Deployment           *deployment.DeploymentId `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
	Service              string                   `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ResolveServiceRequest) Reset()         { *m = ResolveServiceRequest{} }
func (m *ResolveServiceRequest) String() string { return proto.CompactTextString(m) }
func (*ResolveServiceRequest) ProtoMessage()    {}
func (*ResolveServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4ddcdbf70ad5abc, []int{0}
}

func (m *ResolveServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResolveServiceRequest.Unmarshal(m, b)
}
func (m *ResolveServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResolveServiceRequest.Marshal(b, m, deterministic)
}
func (m *ResolveServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResolveServiceRequest.Merge(m, src)
}
func (m *ResolveServiceRequest) XXX_Size() int {
	return xxx_messageInfo_ResolveServiceRequest.Size(m)
}
func (m *ResolveServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResolveServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResolveServiceRequest proto.InternalMessageInfo

func (m *ResolveServiceRequest) GetDeployment() *deployment.DeploymentId {
	if m != nil {
		return m.Deployment
	}
	return nil
}

func (m *ResolveServiceRequest) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

type ResolveModuleRequest struct {
	Deployment           *deployment.DeploymentId `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
	Module               string                   `protobuf:"bytes,2,opt,name=module,proto3" json:"module,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ResolveModuleRequest) Reset()         { *m = ResolveModuleRequest{} }
func (m *ResolveModuleRequest) String() string { return proto.CompactTextString(m) }
func (*ResolveModuleRequest) ProtoMessage()    {}
func (*ResolveModuleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4ddcdbf70ad5abc, []int{1}
}

func (m *ResolveModuleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResolveModuleRequest.Unmarshal(m, b)
}
func (m *ResolveModuleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResolveModuleRequest.Marshal(b, m, deterministic)
}
func (m *ResolveModuleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResolveModuleRequest.Merge(m, src)
}
func (m *ResolveModuleRequest) XXX_Size() int {
	return xxx_messageInfo_ResolveModuleRequest.Size(m)
}
func (m *ResolveModuleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResolveModuleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResolveModuleRequest proto.InternalMessageInfo

func (m *ResolveModuleRequest) GetDeployment() *deployment.DeploymentId {
	if m != nil {
		return m.Deployment
	}
	return nil
}

func (m *ResolveModuleRequest) GetModule() string {
	if m != nil {
		return m.Module
	}
	return ""
}

type ResolveServiceResponse struct {
	Endpoint             []string `protobuf:"bytes,1,rep,name=endpoint,proto3" json:"endpoint,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResolveServiceResponse) Reset()         { *m = ResolveServiceResponse{} }
func (m *ResolveServiceResponse) String() string { return proto.CompactTextString(m) }
func (*ResolveServiceResponse) ProtoMessage()    {}
func (*ResolveServiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4ddcdbf70ad5abc, []int{2}
}

func (m *ResolveServiceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResolveServiceResponse.Unmarshal(m, b)
}
func (m *ResolveServiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResolveServiceResponse.Marshal(b, m, deterministic)
}
func (m *ResolveServiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResolveServiceResponse.Merge(m, src)
}
func (m *ResolveServiceResponse) XXX_Size() int {
	return xxx_messageInfo_ResolveServiceResponse.Size(m)
}
func (m *ResolveServiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResolveServiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResolveServiceResponse proto.InternalMessageInfo

func (m *ResolveServiceResponse) GetEndpoint() []string {
	if m != nil {
		return m.Endpoint
	}
	return nil
}

type ResolveModuleResponse struct {
	Endpoint             []string `protobuf:"bytes,1,rep,name=endpoint,proto3" json:"endpoint,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResolveModuleResponse) Reset()         { *m = ResolveModuleResponse{} }
func (m *ResolveModuleResponse) String() string { return proto.CompactTextString(m) }
func (*ResolveModuleResponse) ProtoMessage()    {}
func (*ResolveModuleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4ddcdbf70ad5abc, []int{3}
}

func (m *ResolveModuleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResolveModuleResponse.Unmarshal(m, b)
}
func (m *ResolveModuleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResolveModuleResponse.Marshal(b, m, deterministic)
}
func (m *ResolveModuleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResolveModuleResponse.Merge(m, src)
}
func (m *ResolveModuleResponse) XXX_Size() int {
	return xxx_messageInfo_ResolveModuleResponse.Size(m)
}
func (m *ResolveModuleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResolveModuleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResolveModuleResponse proto.InternalMessageInfo

func (m *ResolveModuleResponse) GetEndpoint() []string {
	if m != nil {
		return m.Endpoint
	}
	return nil
}

func init() {
	proto.RegisterType((*ResolveServiceRequest)(nil), "improbable.infra.ResolveServiceRequest")
	proto.RegisterType((*ResolveModuleRequest)(nil), "improbable.infra.ResolveModuleRequest")
	proto.RegisterType((*ResolveServiceResponse)(nil), "improbable.infra.ResolveServiceResponse")
	proto.RegisterType((*ResolveModuleResponse)(nil), "improbable.infra.ResolveModuleResponse")
}

func init() {
	proto.RegisterFile("infra/resolver/fabric_services.proto", fileDescriptor_e4ddcdbf70ad5abc)
}

var fileDescriptor_e4ddcdbf70ad5abc = []byte{
	// 350 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x92, 0xd1, 0x4a, 0xf3, 0x30,
	0x1c, 0xc5, 0xe9, 0xbe, 0x8f, 0xb9, 0x45, 0x14, 0x09, 0x4e, 0x46, 0x6f, 0x56, 0x8a, 0xb8, 0xc2,
	0x5c, 0x02, 0x9b, 0xf8, 0x00, 0x43, 0x04, 0x2f, 0xbc, 0xa9, 0xde, 0x6b, 0xda, 0x66, 0x5b, 0xb0,
	0xed, 0xbf, 0x26, 0xd9, 0x86, 0x2f, 0x21, 0xf8, 0x82, 0x0e, 0xf6, 0x24, 0x42, 0xda, 0xb5, 0xdb,
	0x54, 0x76, 0xe5, 0x5d, 0xda, 0x9c, 0x73, 0xfe, 0xbf, 0x24, 0x07, 0x9d, 0x8b, 0x74, 0x2c, 0x19,
	0x95, 0x5c, 0x41, 0x3c, 0xe7, 0x92, 0x8e, 0x59, 0x20, 0x45, 0xf8, 0xa4, 0xb8, 0x9c, 0x8b, 0x90,
	0x2b, 0x92, 0x49, 0xd0, 0x80, 0x4f, 0x44, 0x92, 0x49, 0x08, 0x58, 0x10, 0x73, 0x62, 0x0c, 0xf6,
	0xf5, 0x44, 0xe8, 0xe9, 0x2c, 0x20, 0x21, 0x24, 0x34, 0x59, 0x08, 0xfd, 0x02, 0x0b, 0x3a, 0x81,
	0xbe, 0x91, 0xf7, 0xe7, 0x2c, 0x16, 0x11, 0xd3, 0x20, 0x15, 0x2d, 0x97, 0x79, 0x92, 0xdd, 0xab,
	0x92, 0x68, 0x16, 0x33, 0x3d, 0x06, 0x99, 0xd0, 0x88, 0x67, 0x31, 0xbc, 0x25, 0x3c, 0xd5, 0x54,
	0x4d, 0x99, 0xe4, 0x51, 0x2e, 0x76, 0x3f, 0x2c, 0xd4, 0xf2, 0x73, 0xb2, 0x87, 0x1c, 0xc8, 0xe7,
	0xaf, 0x33, 0xae, 0x34, 0x7e, 0x44, 0xa8, 0x32, 0xb5, 0x2d, 0xc7, 0xf2, 0x0e, 0x07, 0x97, 0x64,
	0x83, 0x72, 0x9d, 0x4d, 0x2a, 0x19, 0xb9, 0x29, 0x97, 0x77, 0xd1, 0xa8, 0xbe, 0x5a, 0x76, 0x6a,
	0x8e, 0xe5, 0x6f, 0xe4, 0x60, 0x17, 0x1d, 0x14, 0x07, 0x6f, 0xd7, 0x1c, 0xcb, 0x6b, 0x8e, 0x1a,
	0xab, 0x65, 0xe7, 0x3f, 0xaa, 0x91, 0x9e, 0xbf, 0xde, 0x70, 0xdf, 0x2d, 0x74, 0x5a, 0x30, 0xdd,
	0x43, 0x34, 0x8b, 0xff, 0x18, 0xc9, 0x41, 0xf5, 0xc4, 0x8c, 0xf9, 0x46, 0x54, 0xfc, 0x77, 0xaf,
	0xd0, 0xd9, 0xee, 0x1d, 0xa9, 0x0c, 0x52, 0xc5, 0xb1, 0x8d, 0x1a, 0x3c, 0x8d, 0x32, 0x10, 0x86,
	0xe7, 0x9f, 0xd7, 0xf4, 0xcb, 0x6f, 0x77, 0x58, 0xde, 0xec, 0xfa, 0x14, 0xfb, 0x4d, 0x83, 0x4f,
	0x0b, 0xb5, 0x6e, 0x4d, 0x41, 0xaa, 0x51, 0xa6, 0x36, 0x38, 0x44, 0xc7, 0xdb, 0x10, 0xb8, 0x4b,
	0x76, 0x3b, 0x43, 0x7e, 0x7c, 0x4a, 0xdb, 0xdb, 0x2f, 0x2c, 0xd0, 0x9e, 0xd1, 0xd1, 0x16, 0x33,
	0xbe, 0xf8, 0xd5, 0xba, 0xf5, 0x34, 0x76, 0x77, 0xaf, 0x2e, 0x9f, 0x10, 0xd4, 0x4d, 0xef, 0x86,
	0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xa5, 0x1c, 0x70, 0xfd, 0x16, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FabricServiceResolverClient is the client API for FabricServiceResolver service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FabricServiceResolverClient interface {
	ResolveService(ctx context.Context, in *ResolveServiceRequest, opts ...grpc.CallOption) (*ResolveServiceResponse, error)
	ResolveModule(ctx context.Context, in *ResolveModuleRequest, opts ...grpc.CallOption) (*ResolveModuleResponse, error)
}

type fabricServiceResolverClient struct {
	cc grpc.ClientConnInterface
}

func NewFabricServiceResolverClient(cc grpc.ClientConnInterface) FabricServiceResolverClient {
	return &fabricServiceResolverClient{cc}
}

func (c *fabricServiceResolverClient) ResolveService(ctx context.Context, in *ResolveServiceRequest, opts ...grpc.CallOption) (*ResolveServiceResponse, error) {
	out := new(ResolveServiceResponse)
	err := c.cc.Invoke(ctx, "/improbable.infra.FabricServiceResolver/ResolveService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fabricServiceResolverClient) ResolveModule(ctx context.Context, in *ResolveModuleRequest, opts ...grpc.CallOption) (*ResolveModuleResponse, error) {
	out := new(ResolveModuleResponse)
	err := c.cc.Invoke(ctx, "/improbable.infra.FabricServiceResolver/ResolveModule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FabricServiceResolverServer is the server API for FabricServiceResolver service.
type FabricServiceResolverServer interface {
	ResolveService(context.Context, *ResolveServiceRequest) (*ResolveServiceResponse, error)
	ResolveModule(context.Context, *ResolveModuleRequest) (*ResolveModuleResponse, error)
}

// UnimplementedFabricServiceResolverServer can be embedded to have forward compatible implementations.
type UnimplementedFabricServiceResolverServer struct {
}

func (*UnimplementedFabricServiceResolverServer) ResolveService(ctx context.Context, req *ResolveServiceRequest) (*ResolveServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResolveService not implemented")
}
func (*UnimplementedFabricServiceResolverServer) ResolveModule(ctx context.Context, req *ResolveModuleRequest) (*ResolveModuleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResolveModule not implemented")
}

func RegisterFabricServiceResolverServer(s *grpc.Server, srv FabricServiceResolverServer) {
	s.RegisterService(&_FabricServiceResolver_serviceDesc, srv)
}

func _FabricServiceResolver_ResolveService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResolveServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FabricServiceResolverServer).ResolveService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.infra.FabricServiceResolver/ResolveService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FabricServiceResolverServer).ResolveService(ctx, req.(*ResolveServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FabricServiceResolver_ResolveModule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResolveModuleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FabricServiceResolverServer).ResolveModule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.infra.FabricServiceResolver/ResolveModule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FabricServiceResolverServer).ResolveModule(ctx, req.(*ResolveModuleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FabricServiceResolver_serviceDesc = grpc.ServiceDesc{
	ServiceName: "improbable.infra.FabricServiceResolver",
	HandlerType: (*FabricServiceResolverServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ResolveService",
			Handler:    _FabricServiceResolver_ResolveService_Handler,
		},
		{
			MethodName: "ResolveModule",
			Handler:    _FabricServiceResolver_ResolveModule_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "infra/resolver/fabric_services.proto",
}
