// Code generated by protoc-gen-go. DO NOT EDIT.
// source: infra/accounts/refresh_token.proto

package improbable_accounts

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RefreshToken struct {
	Id                   *RefreshTokenId      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid                 string               `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Account              *AccountId           `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
	ServiceAccount       *ServiceAccountId    `protobuf:"bytes,4,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
	IssueTime            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=issue_time,json=issueTime,proto3" json:"issue_time,omitempty"`
	ExpirationTime       *timestamp.Timestamp `protobuf:"bytes,6,opt,name=expiration_time,json=expirationTime,proto3" json:"expiration_time,omitempty"`
	ClientId             string               `protobuf:"bytes,7,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Scopes               string               `protobuf:"bytes,8,opt,name=scopes,proto3" json:"scopes,omitempty"`
	Subject              string               `protobuf:"bytes,9,opt,name=subject,proto3" json:"subject,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RefreshToken) Reset()         { *m = RefreshToken{} }
func (m *RefreshToken) String() string { return proto.CompactTextString(m) }
func (*RefreshToken) ProtoMessage()    {}
func (*RefreshToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_3426775c016c08f5, []int{0}
}

func (m *RefreshToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefreshToken.Unmarshal(m, b)
}
func (m *RefreshToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefreshToken.Marshal(b, m, deterministic)
}
func (m *RefreshToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefreshToken.Merge(m, src)
}
func (m *RefreshToken) XXX_Size() int {
	return xxx_messageInfo_RefreshToken.Size(m)
}
func (m *RefreshToken) XXX_DiscardUnknown() {
	xxx_messageInfo_RefreshToken.DiscardUnknown(m)
}

var xxx_messageInfo_RefreshToken proto.InternalMessageInfo

func (m *RefreshToken) GetId() *RefreshTokenId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *RefreshToken) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *RefreshToken) GetAccount() *AccountId {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *RefreshToken) GetServiceAccount() *ServiceAccountId {
	if m != nil {
		return m.ServiceAccount
	}
	return nil
}

func (m *RefreshToken) GetIssueTime() *timestamp.Timestamp {
	if m != nil {
		return m.IssueTime
	}
	return nil
}

func (m *RefreshToken) GetExpirationTime() *timestamp.Timestamp {
	if m != nil {
		return m.ExpirationTime
	}
	return nil
}

func (m *RefreshToken) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *RefreshToken) GetScopes() string {
	if m != nil {
		return m.Scopes
	}
	return ""
}

func (m *RefreshToken) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

type RefreshTokenId struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RefreshTokenId) Reset()         { *m = RefreshTokenId{} }
func (m *RefreshTokenId) String() string { return proto.CompactTextString(m) }
func (*RefreshTokenId) ProtoMessage()    {}
func (*RefreshTokenId) Descriptor() ([]byte, []int) {
	return fileDescriptor_3426775c016c08f5, []int{1}
}

func (m *RefreshTokenId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefreshTokenId.Unmarshal(m, b)
}
func (m *RefreshTokenId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefreshTokenId.Marshal(b, m, deterministic)
}
func (m *RefreshTokenId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefreshTokenId.Merge(m, src)
}
func (m *RefreshTokenId) XXX_Size() int {
	return xxx_messageInfo_RefreshTokenId.Size(m)
}
func (m *RefreshTokenId) XXX_DiscardUnknown() {
	xxx_messageInfo_RefreshTokenId.DiscardUnknown(m)
}

var xxx_messageInfo_RefreshTokenId proto.InternalMessageInfo

func (m *RefreshTokenId) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type FetchRefreshTokenRequest struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchRefreshTokenRequest) Reset()         { *m = FetchRefreshTokenRequest{} }
func (m *FetchRefreshTokenRequest) String() string { return proto.CompactTextString(m) }
func (*FetchRefreshTokenRequest) ProtoMessage()    {}
func (*FetchRefreshTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3426775c016c08f5, []int{2}
}

func (m *FetchRefreshTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchRefreshTokenRequest.Unmarshal(m, b)
}
func (m *FetchRefreshTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchRefreshTokenRequest.Marshal(b, m, deterministic)
}
func (m *FetchRefreshTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchRefreshTokenRequest.Merge(m, src)
}
func (m *FetchRefreshTokenRequest) XXX_Size() int {
	return xxx_messageInfo_FetchRefreshTokenRequest.Size(m)
}
func (m *FetchRefreshTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchRefreshTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchRefreshTokenRequest proto.InternalMessageInfo

func (m *FetchRefreshTokenRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type FetchRefreshTokenResponse struct {
	Id                   *RefreshTokenId      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid                 string               `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Account              *AccountId           `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
	ServiceAccount       *ServiceAccountId    `protobuf:"bytes,4,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
	IssueTime            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=issue_time,json=issueTime,proto3" json:"issue_time,omitempty"`
	ExpirationTime       *timestamp.Timestamp `protobuf:"bytes,6,opt,name=expiration_time,json=expirationTime,proto3" json:"expiration_time,omitempty"`
	ClientId             string               `protobuf:"bytes,7,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Scopes               string               `protobuf:"bytes,8,opt,name=scopes,proto3" json:"scopes,omitempty"`
	Subject              string               `protobuf:"bytes,9,opt,name=subject,proto3" json:"subject,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *FetchRefreshTokenResponse) Reset()         { *m = FetchRefreshTokenResponse{} }
func (m *FetchRefreshTokenResponse) String() string { return proto.CompactTextString(m) }
func (*FetchRefreshTokenResponse) ProtoMessage()    {}
func (*FetchRefreshTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3426775c016c08f5, []int{3}
}

func (m *FetchRefreshTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchRefreshTokenResponse.Unmarshal(m, b)
}
func (m *FetchRefreshTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchRefreshTokenResponse.Marshal(b, m, deterministic)
}
func (m *FetchRefreshTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchRefreshTokenResponse.Merge(m, src)
}
func (m *FetchRefreshTokenResponse) XXX_Size() int {
	return xxx_messageInfo_FetchRefreshTokenResponse.Size(m)
}
func (m *FetchRefreshTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchRefreshTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FetchRefreshTokenResponse proto.InternalMessageInfo

func (m *FetchRefreshTokenResponse) GetId() *RefreshTokenId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *FetchRefreshTokenResponse) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *FetchRefreshTokenResponse) GetAccount() *AccountId {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *FetchRefreshTokenResponse) GetServiceAccount() *ServiceAccountId {
	if m != nil {
		return m.ServiceAccount
	}
	return nil
}

func (m *FetchRefreshTokenResponse) GetIssueTime() *timestamp.Timestamp {
	if m != nil {
		return m.IssueTime
	}
	return nil
}

func (m *FetchRefreshTokenResponse) GetExpirationTime() *timestamp.Timestamp {
	if m != nil {
		return m.ExpirationTime
	}
	return nil
}

func (m *FetchRefreshTokenResponse) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *FetchRefreshTokenResponse) GetScopes() string {
	if m != nil {
		return m.Scopes
	}
	return ""
}

func (m *FetchRefreshTokenResponse) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

type RemoveExpiredRefreshTokensRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveExpiredRefreshTokensRequest) Reset()         { *m = RemoveExpiredRefreshTokensRequest{} }
func (m *RemoveExpiredRefreshTokensRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveExpiredRefreshTokensRequest) ProtoMessage()    {}
func (*RemoveExpiredRefreshTokensRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3426775c016c08f5, []int{4}
}

func (m *RemoveExpiredRefreshTokensRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveExpiredRefreshTokensRequest.Unmarshal(m, b)
}
func (m *RemoveExpiredRefreshTokensRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveExpiredRefreshTokensRequest.Marshal(b, m, deterministic)
}
func (m *RemoveExpiredRefreshTokensRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveExpiredRefreshTokensRequest.Merge(m, src)
}
func (m *RemoveExpiredRefreshTokensRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveExpiredRefreshTokensRequest.Size(m)
}
func (m *RemoveExpiredRefreshTokensRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveExpiredRefreshTokensRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveExpiredRefreshTokensRequest proto.InternalMessageInfo

type RemoveExpiredRefreshTokensResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveExpiredRefreshTokensResponse) Reset()         { *m = RemoveExpiredRefreshTokensResponse{} }
func (m *RemoveExpiredRefreshTokensResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveExpiredRefreshTokensResponse) ProtoMessage()    {}
func (*RemoveExpiredRefreshTokensResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3426775c016c08f5, []int{5}
}

func (m *RemoveExpiredRefreshTokensResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveExpiredRefreshTokensResponse.Unmarshal(m, b)
}
func (m *RemoveExpiredRefreshTokensResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveExpiredRefreshTokensResponse.Marshal(b, m, deterministic)
}
func (m *RemoveExpiredRefreshTokensResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveExpiredRefreshTokensResponse.Merge(m, src)
}
func (m *RemoveExpiredRefreshTokensResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveExpiredRefreshTokensResponse.Size(m)
}
func (m *RemoveExpiredRefreshTokensResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveExpiredRefreshTokensResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveExpiredRefreshTokensResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*RefreshToken)(nil), "improbable.accounts.RefreshToken")
	proto.RegisterType((*RefreshTokenId)(nil), "improbable.accounts.RefreshTokenId")
	proto.RegisterType((*FetchRefreshTokenRequest)(nil), "improbable.accounts.FetchRefreshTokenRequest")
	proto.RegisterType((*FetchRefreshTokenResponse)(nil), "improbable.accounts.FetchRefreshTokenResponse")
	proto.RegisterType((*RemoveExpiredRefreshTokensRequest)(nil), "improbable.accounts.RemoveExpiredRefreshTokensRequest")
	proto.RegisterType((*RemoveExpiredRefreshTokensResponse)(nil), "improbable.accounts.RemoveExpiredRefreshTokensResponse")
}

func init() {
	proto.RegisterFile("infra/accounts/refresh_token.proto", fileDescriptor_3426775c016c08f5)
}

var fileDescriptor_3426775c016c08f5 = []byte{
	// 444 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x52, 0x4d, 0x6f, 0xd4, 0x30,
	0x14, 0x54, 0x76, 0xdb, 0xdd, 0xee, 0x03, 0x52, 0xc9, 0x95, 0x90, 0x49, 0x25, 0x58, 0x52, 0x90,
	0x7a, 0xc1, 0x91, 0x5a, 0x89, 0x8f, 0x23, 0x42, 0x20, 0xed, 0x85, 0x43, 0xe8, 0x3d, 0x4a, 0xec,
	0x97, 0xd6, 0xb0, 0x89, 0x43, 0xec, 0x54, 0x1c, 0xfb, 0x93, 0xf8, 0x03, 0xfc, 0x37, 0x14, 0x3b,
	0xe9, 0x66, 0x51, 0xca, 0xc2, 0x8d, 0x03, 0xb7, 0xd8, 0x6f, 0x66, 0x9e, 0x33, 0x33, 0x10, 0xca,
	0x32, 0xaf, 0xd3, 0x28, 0xe5, 0x5c, 0x35, 0xa5, 0xd1, 0x51, 0x8d, 0x79, 0x8d, 0xfa, 0x2a, 0x31,
	0xea, 0x0b, 0x96, 0xac, 0xaa, 0x95, 0x51, 0xe4, 0x48, 0x16, 0x55, 0xad, 0xb2, 0x34, 0x5b, 0x23,
	0xeb, 0x81, 0xc1, 0x93, 0x4b, 0xa5, 0x2e, 0xd7, 0x18, 0x59, 0x48, 0xd6, 0xe4, 0x91, 0x91, 0x05,
	0x6a, 0x93, 0x16, 0x95, 0x63, 0x05, 0xc7, 0xbf, 0x28, 0x73, 0x55, 0x14, 0xaa, 0x93, 0x0c, 0xbf,
	0x4f, 0xe1, 0x7e, 0xec, 0x56, 0x5d, 0xb4, 0x9b, 0xc8, 0x39, 0x4c, 0xa4, 0xa0, 0xde, 0xd2, 0x3b,
	0xbd, 0x77, 0x76, 0xc2, 0x46, 0x16, 0xb2, 0x21, 0x7c, 0x25, 0xe2, 0x89, 0x14, 0x84, 0xc0, 0x5e,
	0xd3, 0x48, 0x41, 0x27, 0x4b, 0xef, 0x74, 0x11, 0xdb, 0x6f, 0xf2, 0x1a, 0xe6, 0x1d, 0x85, 0x4e,
	0xad, 0xda, 0xe3, 0x51, 0xb5, 0xb7, 0xee, 0x63, 0x25, 0xe2, 0x1e, 0x4e, 0x3e, 0xc2, 0xa1, 0xc6,
	0xfa, 0x5a, 0x72, 0x4c, 0x7a, 0x85, 0x3d, 0xab, 0xf0, 0x7c, 0x54, 0xe1, 0x93, 0xc3, 0x6e, 0x84,
	0x7c, 0xbd, 0x75, 0x43, 0xde, 0x00, 0x48, 0xad, 0x1b, 0x4c, 0x5a, 0x67, 0xe8, 0xbe, 0x95, 0x0a,
	0x98, 0xb3, 0x8d, 0xf5, 0xb6, 0xb1, 0x8b, 0xde, 0xb6, 0x78, 0x61, 0xd1, 0xed, 0x99, 0xbc, 0x83,
	0x43, 0xfc, 0x56, 0xc9, 0x3a, 0x35, 0x52, 0x95, 0x8e, 0x3f, 0xdb, 0xc9, 0xf7, 0x37, 0x14, 0x2b,
	0x72, 0x0c, 0x0b, 0xbe, 0x96, 0x58, 0x9a, 0x44, 0x0a, 0x3a, 0xb7, 0x16, 0x1d, 0xb8, 0x8b, 0x95,
	0x20, 0x0f, 0x61, 0xa6, 0xb9, 0xaa, 0x50, 0xd3, 0x03, 0x3b, 0xe9, 0x4e, 0x84, 0xc2, 0x5c, 0x37,
	0xd9, 0x67, 0xe4, 0x86, 0x2e, 0xec, 0xa0, 0x3f, 0x86, 0x4b, 0xf0, 0xb7, 0x23, 0x20, 0xfe, 0x6d,
	0x66, 0xd3, 0x36, 0x8e, 0x90, 0x01, 0xfd, 0x80, 0x86, 0x5f, 0x0d, 0x61, 0x31, 0x7e, 0x6d, 0x50,
	0x9b, 0xdb, 0xa8, 0xbc, 0x4d, 0x54, 0xe1, 0x8f, 0x29, 0x3c, 0x1a, 0x21, 0xe8, 0x4a, 0x95, 0x1a,
	0xff, 0x37, 0xe2, 0x9f, 0x6f, 0xc4, 0x09, 0x3c, 0x8d, 0xb1, 0x50, 0xd7, 0xf8, 0xbe, 0x5d, 0x83,
	0x62, 0x98, 0x87, 0xee, 0x82, 0x0f, 0x9f, 0x41, 0xf8, 0x3b, 0x90, 0x0b, 0xfb, 0xec, 0x66, 0x02,
	0x47, 0xc3, 0x49, 0x67, 0x25, 0xc9, 0x61, 0xdf, 0x36, 0x84, 0xbc, 0x18, 0x75, 0xfc, 0xae, 0xba,
	0x05, 0xec, 0x4f, 0xe1, 0x5d, 0xd9, 0x6e, 0x3c, 0x78, 0xb0, 0xf5, 0x4c, 0xf2, 0xf2, 0x8e, 0xca,
	0xed, 0xf8, 0xdf, 0xe0, 0xd5, 0x5f, 0xf3, 0xdc, 0x13, 0xb2, 0x99, 0x0d, 0xf0, 0xfc, 0x67, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x70, 0xac, 0x26, 0xde, 0x92, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RefreshTokenServiceClient is the client API for RefreshTokenService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RefreshTokenServiceClient interface {
	Fetch(ctx context.Context, in *FetchRefreshTokenRequest, opts ...grpc.CallOption) (*FetchRefreshTokenResponse, error)
	RemoveExpired(ctx context.Context, in *RemoveExpiredRefreshTokensRequest, opts ...grpc.CallOption) (*RemoveExpiredRefreshTokensResponse, error)
}

type refreshTokenServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRefreshTokenServiceClient(cc grpc.ClientConnInterface) RefreshTokenServiceClient {
	return &refreshTokenServiceClient{cc}
}

func (c *refreshTokenServiceClient) Fetch(ctx context.Context, in *FetchRefreshTokenRequest, opts ...grpc.CallOption) (*FetchRefreshTokenResponse, error) {
	out := new(FetchRefreshTokenResponse)
	err := c.cc.Invoke(ctx, "/improbable.accounts.RefreshTokenService/Fetch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *refreshTokenServiceClient) RemoveExpired(ctx context.Context, in *RemoveExpiredRefreshTokensRequest, opts ...grpc.CallOption) (*RemoveExpiredRefreshTokensResponse, error) {
	out := new(RemoveExpiredRefreshTokensResponse)
	err := c.cc.Invoke(ctx, "/improbable.accounts.RefreshTokenService/RemoveExpired", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RefreshTokenServiceServer is the server API for RefreshTokenService service.
type RefreshTokenServiceServer interface {
	Fetch(context.Context, *FetchRefreshTokenRequest) (*FetchRefreshTokenResponse, error)
	RemoveExpired(context.Context, *RemoveExpiredRefreshTokensRequest) (*RemoveExpiredRefreshTokensResponse, error)
}

// UnimplementedRefreshTokenServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRefreshTokenServiceServer struct {
}

func (*UnimplementedRefreshTokenServiceServer) Fetch(ctx context.Context, req *FetchRefreshTokenRequest) (*FetchRefreshTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Fetch not implemented")
}
func (*UnimplementedRefreshTokenServiceServer) RemoveExpired(ctx context.Context, req *RemoveExpiredRefreshTokensRequest) (*RemoveExpiredRefreshTokensResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveExpired not implemented")
}

func RegisterRefreshTokenServiceServer(s *grpc.Server, srv RefreshTokenServiceServer) {
	s.RegisterService(&_RefreshTokenService_serviceDesc, srv)
}

func _RefreshTokenService_Fetch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchRefreshTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RefreshTokenServiceServer).Fetch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.accounts.RefreshTokenService/Fetch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RefreshTokenServiceServer).Fetch(ctx, req.(*FetchRefreshTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RefreshTokenService_RemoveExpired_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveExpiredRefreshTokensRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RefreshTokenServiceServer).RemoveExpired(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.accounts.RefreshTokenService/RemoveExpired",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RefreshTokenServiceServer).RemoveExpired(ctx, req.(*RemoveExpiredRefreshTokensRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RefreshTokenService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "improbable.accounts.RefreshTokenService",
	HandlerType: (*RefreshTokenServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Fetch",
			Handler:    _RefreshTokenService_Fetch_Handler,
		},
		{
			MethodName: "RemoveExpired",
			Handler:    _RefreshTokenService_RemoveExpired_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "infra/accounts/refresh_token.proto",
}
