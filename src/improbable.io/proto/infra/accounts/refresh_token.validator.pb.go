// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: infra/accounts/refresh_token.proto

package improbable_accounts

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *RefreshToken) Validate() error {
	if this.Id != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Id); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Id", err)
		}
	}
	if this.Account != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Account); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Account", err)
		}
	}
	if this.ServiceAccount != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ServiceAccount); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ServiceAccount", err)
		}
	}
	if this.IssueTime != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.IssueTime); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("IssueTime", err)
		}
	}
	if this.ExpirationTime != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ExpirationTime); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ExpirationTime", err)
		}
	}
	return nil
}
func (this *RefreshTokenId) Validate() error {
	return nil
}
func (this *FetchRefreshTokenRequest) Validate() error {
	return nil
}
func (this *FetchRefreshTokenResponse) Validate() error {
	if this.Id != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Id); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Id", err)
		}
	}
	if this.Account != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Account); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Account", err)
		}
	}
	if this.ServiceAccount != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ServiceAccount); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ServiceAccount", err)
		}
	}
	if this.IssueTime != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.IssueTime); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("IssueTime", err)
		}
	}
	if this.ExpirationTime != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ExpirationTime); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ExpirationTime", err)
		}
	}
	return nil
}
func (this *RemoveExpiredRefreshTokensRequest) Validate() error {
	return nil
}
func (this *RemoveExpiredRefreshTokensResponse) Validate() error {
	return nil
}
