// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/platform/project/quotav2.proto

package improbable_platform_project

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "improbable.io/proto/improbable/platform"
	_ "improbable.io/proto/improbable/platform/deployment"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *SetQuotaGrantRequest) Validate() error {
	if nil == this.ProjectId {
		return github_com_mwitkow_go_proto_validators.FieldError("ProjectId", fmt.Errorf("message must exist"))
	}
	if this.ProjectId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ProjectId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ProjectId", err)
		}
	}
	return nil
}
func (this *GetQuotaGrantAndUsageRequest) Validate() error {
	if nil == this.ProjectId {
		return github_com_mwitkow_go_proto_validators.FieldError("ProjectId", fmt.Errorf("message must exist"))
	}
	if this.ProjectId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ProjectId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ProjectId", err)
		}
	}
	return nil
}
func (this *GetQuotaGrantAndUsageResponse) Validate() error {
	for _, item := range this.QuotaUsages {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("QuotaUsages", err)
			}
		}
	}
	return nil
}
func (this *QuotaUsage) Validate() error {
	if nil == this.ClusterId {
		return github_com_mwitkow_go_proto_validators.FieldError("ClusterId", fmt.Errorf("message must exist"))
	}
	if this.ClusterId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ClusterId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ClusterId", err)
		}
	}
	return nil
}
func (this *DeleteQuotaGrantRequest) Validate() error {
	if nil == this.ProjectId {
		return github_com_mwitkow_go_proto_validators.FieldError("ProjectId", fmt.Errorf("message must exist"))
	}
	if this.ProjectId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ProjectId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ProjectId", err)
		}
	}
	return nil
}
func (this *DeleteQuotaGrantResponse) Validate() error {
	return nil
}
