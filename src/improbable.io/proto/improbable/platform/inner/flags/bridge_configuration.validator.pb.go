// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/platform/inner/flags/bridge_configuration.proto

package improbable_platform_inner_flags

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	_ "improbable.io/proto/improbable/platform/runtime"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *PermissionsConfigFlag) Validate() error {
	for _, item := range this.WorkerPermission {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("WorkerPermission", err)
			}
		}
	}
	return nil
}
func (this *WorkerPermissions) Validate() error {
	for _, item := range this.Permission {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Permission", err)
			}
		}
	}
	return nil
}
func (this *LoadbalancingConfigFlag) Validate() error {
	for _, item := range this.WorkerConfig {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("WorkerConfig", err)
			}
		}
	}
	return nil
}
