// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/platform/inner/flags/gsim_configuration.proto

package improbable_platform_inner_flags

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *GsimConfiguration) Validate() error {
	if this.Extent != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Extent); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Extent", err)
		}
	}
	return nil
}
func (this *GsimConfiguration_GsimExtent) Validate() error {
	if this.BottomLeft != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.BottomLeft); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("BottomLeft", err)
		}
	}
	if this.TopRight != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.TopRight); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("TopRight", err)
		}
	}
	return nil
}
func (this *GsimConfiguration_GsimExtent_Corner) Validate() error {
	return nil
}
func (this *NodeGsimConfiguration) Validate() error {
	for _, item := range this.Configurations {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Configurations", err)
			}
		}
	}
	return nil
}
func (this *DeploymentGsimConfiguration) Validate() error {
	for _, item := range this.NodeConfigurations {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("NodeConfigurations", err)
			}
		}
	}
	return nil
}
