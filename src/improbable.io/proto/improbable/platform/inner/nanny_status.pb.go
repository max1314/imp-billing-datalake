// Code generated by protoc-gen-go. DO NOT EDIT.
// source: improbable/platform/inner/nanny_status.proto

package improbable_platform_inner

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/mwitkow/go-proto-validators"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	deployment "improbable.io/proto/improbable/platform/deployment"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SetStartedRequest struct {
	NodeId               *deployment.NodeId `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SetStartedRequest) Reset()         { *m = SetStartedRequest{} }
func (m *SetStartedRequest) String() string { return proto.CompactTextString(m) }
func (*SetStartedRequest) ProtoMessage()    {}
func (*SetStartedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f638d8c86e5c1dd8, []int{0}
}

func (m *SetStartedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetStartedRequest.Unmarshal(m, b)
}
func (m *SetStartedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetStartedRequest.Marshal(b, m, deterministic)
}
func (m *SetStartedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetStartedRequest.Merge(m, src)
}
func (m *SetStartedRequest) XXX_Size() int {
	return xxx_messageInfo_SetStartedRequest.Size(m)
}
func (m *SetStartedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetStartedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetStartedRequest proto.InternalMessageInfo

func (m *SetStartedRequest) GetNodeId() *deployment.NodeId {
	if m != nil {
		return m.NodeId
	}
	return nil
}

type IsStartedRequest struct {
	NodeId               *deployment.NodeId `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *IsStartedRequest) Reset()         { *m = IsStartedRequest{} }
func (m *IsStartedRequest) String() string { return proto.CompactTextString(m) }
func (*IsStartedRequest) ProtoMessage()    {}
func (*IsStartedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f638d8c86e5c1dd8, []int{1}
}

func (m *IsStartedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsStartedRequest.Unmarshal(m, b)
}
func (m *IsStartedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsStartedRequest.Marshal(b, m, deterministic)
}
func (m *IsStartedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsStartedRequest.Merge(m, src)
}
func (m *IsStartedRequest) XXX_Size() int {
	return xxx_messageInfo_IsStartedRequest.Size(m)
}
func (m *IsStartedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IsStartedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IsStartedRequest proto.InternalMessageInfo

func (m *IsStartedRequest) GetNodeId() *deployment.NodeId {
	if m != nil {
		return m.NodeId
	}
	return nil
}

type IsStartedResponse struct {
	Started              bool     `protobuf:"varint,1,opt,name=started,proto3" json:"started,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsStartedResponse) Reset()         { *m = IsStartedResponse{} }
func (m *IsStartedResponse) String() string { return proto.CompactTextString(m) }
func (*IsStartedResponse) ProtoMessage()    {}
func (*IsStartedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f638d8c86e5c1dd8, []int{2}
}

func (m *IsStartedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsStartedResponse.Unmarshal(m, b)
}
func (m *IsStartedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsStartedResponse.Marshal(b, m, deterministic)
}
func (m *IsStartedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsStartedResponse.Merge(m, src)
}
func (m *IsStartedResponse) XXX_Size() int {
	return xxx_messageInfo_IsStartedResponse.Size(m)
}
func (m *IsStartedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IsStartedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IsStartedResponse proto.InternalMessageInfo

func (m *IsStartedResponse) GetStarted() bool {
	if m != nil {
		return m.Started
	}
	return false
}

type SetWorkerTerminatedRequest struct {
	NodeId               *deployment.NodeId `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SetWorkerTerminatedRequest) Reset()         { *m = SetWorkerTerminatedRequest{} }
func (m *SetWorkerTerminatedRequest) String() string { return proto.CompactTextString(m) }
func (*SetWorkerTerminatedRequest) ProtoMessage()    {}
func (*SetWorkerTerminatedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f638d8c86e5c1dd8, []int{3}
}

func (m *SetWorkerTerminatedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetWorkerTerminatedRequest.Unmarshal(m, b)
}
func (m *SetWorkerTerminatedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetWorkerTerminatedRequest.Marshal(b, m, deterministic)
}
func (m *SetWorkerTerminatedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetWorkerTerminatedRequest.Merge(m, src)
}
func (m *SetWorkerTerminatedRequest) XXX_Size() int {
	return xxx_messageInfo_SetWorkerTerminatedRequest.Size(m)
}
func (m *SetWorkerTerminatedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetWorkerTerminatedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetWorkerTerminatedRequest proto.InternalMessageInfo

func (m *SetWorkerTerminatedRequest) GetNodeId() *deployment.NodeId {
	if m != nil {
		return m.NodeId
	}
	return nil
}

type IsWorkerTerminatedRequest struct {
	NodeId               *deployment.NodeId `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *IsWorkerTerminatedRequest) Reset()         { *m = IsWorkerTerminatedRequest{} }
func (m *IsWorkerTerminatedRequest) String() string { return proto.CompactTextString(m) }
func (*IsWorkerTerminatedRequest) ProtoMessage()    {}
func (*IsWorkerTerminatedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f638d8c86e5c1dd8, []int{4}
}

func (m *IsWorkerTerminatedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsWorkerTerminatedRequest.Unmarshal(m, b)
}
func (m *IsWorkerTerminatedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsWorkerTerminatedRequest.Marshal(b, m, deterministic)
}
func (m *IsWorkerTerminatedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsWorkerTerminatedRequest.Merge(m, src)
}
func (m *IsWorkerTerminatedRequest) XXX_Size() int {
	return xxx_messageInfo_IsWorkerTerminatedRequest.Size(m)
}
func (m *IsWorkerTerminatedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IsWorkerTerminatedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IsWorkerTerminatedRequest proto.InternalMessageInfo

func (m *IsWorkerTerminatedRequest) GetNodeId() *deployment.NodeId {
	if m != nil {
		return m.NodeId
	}
	return nil
}

type IsWorkerTerminatedResponse struct {
	Terminated           bool     `protobuf:"varint,1,opt,name=terminated,proto3" json:"terminated,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsWorkerTerminatedResponse) Reset()         { *m = IsWorkerTerminatedResponse{} }
func (m *IsWorkerTerminatedResponse) String() string { return proto.CompactTextString(m) }
func (*IsWorkerTerminatedResponse) ProtoMessage()    {}
func (*IsWorkerTerminatedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f638d8c86e5c1dd8, []int{5}
}

func (m *IsWorkerTerminatedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsWorkerTerminatedResponse.Unmarshal(m, b)
}
func (m *IsWorkerTerminatedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsWorkerTerminatedResponse.Marshal(b, m, deterministic)
}
func (m *IsWorkerTerminatedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsWorkerTerminatedResponse.Merge(m, src)
}
func (m *IsWorkerTerminatedResponse) XXX_Size() int {
	return xxx_messageInfo_IsWorkerTerminatedResponse.Size(m)
}
func (m *IsWorkerTerminatedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IsWorkerTerminatedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IsWorkerTerminatedResponse proto.InternalMessageInfo

func (m *IsWorkerTerminatedResponse) GetTerminated() bool {
	if m != nil {
		return m.Terminated
	}
	return false
}

func init() {
	proto.RegisterType((*SetStartedRequest)(nil), "improbable.platform.inner.SetStartedRequest")
	proto.RegisterType((*IsStartedRequest)(nil), "improbable.platform.inner.IsStartedRequest")
	proto.RegisterType((*IsStartedResponse)(nil), "improbable.platform.inner.IsStartedResponse")
	proto.RegisterType((*SetWorkerTerminatedRequest)(nil), "improbable.platform.inner.SetWorkerTerminatedRequest")
	proto.RegisterType((*IsWorkerTerminatedRequest)(nil), "improbable.platform.inner.IsWorkerTerminatedRequest")
	proto.RegisterType((*IsWorkerTerminatedResponse)(nil), "improbable.platform.inner.IsWorkerTerminatedResponse")
}

func init() {
	proto.RegisterFile("improbable/platform/inner/nanny_status.proto", fileDescriptor_f638d8c86e5c1dd8)
}

var fileDescriptor_f638d8c86e5c1dd8 = []byte{
	// 395 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x92, 0x4d, 0x8b, 0xd3, 0x40,
	0x18, 0xc7, 0x89, 0x42, 0xab, 0x4f, 0x2f, 0x76, 0x04, 0x69, 0x23, 0x68, 0xe9, 0x41, 0x14, 0xdb,
	0x19, 0xa8, 0xd6, 0x93, 0x27, 0x41, 0xa4, 0x97, 0x1e, 0x12, 0xc1, 0x83, 0x42, 0x99, 0x38, 0x4f,
	0xb3, 0xa1, 0xc9, 0x4c, 0x76, 0x66, 0xb2, 0xa5, 0xc7, 0xfd, 0x4c, 0xfb, 0x81, 0x16, 0xf6, 0x93,
	0x2c, 0x79, 0xe9, 0x0b, 0xdb, 0xa4, 0xec, 0x1e, 0x7a, 0xcb, 0xf3, 0xe4, 0x3f, 0xff, 0xe7, 0xed,
	0x07, 0xa3, 0x28, 0x49, 0xb5, 0x0a, 0x78, 0x10, 0x23, 0x4b, 0x63, 0x6e, 0x97, 0x4a, 0x27, 0x2c,
	0x92, 0x12, 0x35, 0x93, 0x5c, 0xca, 0xcd, 0xc2, 0x58, 0x6e, 0x33, 0x43, 0x53, 0xad, 0xac, 0x22,
	0xfd, 0xbd, 0x9a, 0x6e, 0xd5, 0xb4, 0x50, 0xbb, 0xdf, 0xc2, 0xc8, 0x5e, 0x64, 0x01, 0xfd, 0xaf,
	0x12, 0x96, 0xac, 0x23, 0xbb, 0x52, 0x6b, 0x16, 0xaa, 0x71, 0xf1, 0x6e, 0x7c, 0xc5, 0xe3, 0x48,
	0x70, 0xab, 0xb4, 0x61, 0xbb, 0xcf, 0xd2, 0xd2, 0x7d, 0x1b, 0x2a, 0x15, 0xe6, 0xc5, 0xf3, 0x28,
	0xc8, 0x96, 0x0c, 0x93, 0xd4, 0x6e, 0xaa, 0x9f, 0x9f, 0xea, 0xba, 0x13, 0x98, 0xc6, 0x6a, 0x93,
	0xa0, 0xb4, 0x4c, 0x2a, 0x81, 0xa5, 0x74, 0xf8, 0x0f, 0xba, 0x3e, 0x5a, 0xdf, 0x72, 0x6d, 0x51,
	0x78, 0x78, 0x99, 0xa1, 0xb1, 0xe4, 0x17, 0xb4, 0x73, 0xc9, 0x22, 0x12, 0x3d, 0x67, 0xe0, 0x7c,
	0xec, 0x4c, 0x3e, 0xd0, 0xba, 0x09, 0xf6, 0x8e, 0x74, 0xae, 0x04, 0xce, 0xc4, 0x8f, 0xd6, 0xdd,
	0xed, 0xfb, 0x67, 0x03, 0xc7, 0x6b, 0xc9, 0x22, 0x1e, 0xfe, 0x85, 0x57, 0x33, 0x73, 0x2e, 0xf3,
	0x31, 0x74, 0x0f, 0xcc, 0x4d, 0xaa, 0xa4, 0x41, 0xd2, 0x83, 0xb6, 0x29, 0x53, 0x85, 0xfb, 0x0b,
	0x6f, 0x1b, 0x0e, 0x11, 0x5c, 0x1f, 0xed, 0x1f, 0xa5, 0x57, 0xa8, 0x7f, 0xa3, 0x4e, 0x22, 0xc9,
	0xcf, 0xd1, 0x95, 0x80, 0xfe, 0xcc, 0x9c, 0xbd, 0xca, 0x77, 0x70, 0xeb, 0xaa, 0x54, 0x4b, 0x78,
	0x07, 0x60, 0x77, 0xd9, 0x6a, 0x0f, 0x07, 0x99, 0xc9, 0xcd, 0x73, 0xe8, 0xcc, 0x73, 0x4c, 0xfd,
	0x82, 0x52, 0xe2, 0x01, 0xec, 0x21, 0x20, 0x23, 0xda, 0x88, 0x2b, 0x3d, 0x62, 0xc5, 0x7d, 0x43,
	0x4b, 0x12, 0xe9, 0x96, 0x44, 0xfa, 0x33, 0x27, 0x91, 0x2c, 0xe1, 0xe5, 0xee, 0x3a, 0xe4, 0xf3,
	0x09, 0xcb, 0x87, 0x80, 0xb8, 0xa3, 0xc7, 0x89, 0xab, 0x59, 0x05, 0xbc, 0xae, 0x39, 0x2b, 0x99,
	0x9e, 0x1e, 0xa2, 0xe1, 0x40, 0x8d, 0xd3, 0x5c, 0x3b, 0x40, 0x8e, 0x17, 0x4e, 0xbe, 0x9e, 0x6c,
	0xb5, 0xa9, 0xc8, 0xf4, 0x89, 0xaf, 0xca, 0x49, 0x83, 0x56, 0xd1, 0xd3, 0x97, 0xfb, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xaa, 0xd7, 0x0e, 0x0e, 0x7c, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// NannyStatusClient is the client API for NannyStatus service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NannyStatusClient interface {
	SetStarted(ctx context.Context, in *SetStartedRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	IsStarted(ctx context.Context, in *IsStartedRequest, opts ...grpc.CallOption) (*IsStartedResponse, error)
	SetWorkerTerminated(ctx context.Context, in *SetWorkerTerminatedRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	IsWorkerTerminated(ctx context.Context, in *IsWorkerTerminatedRequest, opts ...grpc.CallOption) (*IsWorkerTerminatedResponse, error)
}

type nannyStatusClient struct {
	cc grpc.ClientConnInterface
}

func NewNannyStatusClient(cc grpc.ClientConnInterface) NannyStatusClient {
	return &nannyStatusClient{cc}
}

func (c *nannyStatusClient) SetStarted(ctx context.Context, in *SetStartedRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/improbable.platform.inner.NannyStatus/SetStarted", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nannyStatusClient) IsStarted(ctx context.Context, in *IsStartedRequest, opts ...grpc.CallOption) (*IsStartedResponse, error) {
	out := new(IsStartedResponse)
	err := c.cc.Invoke(ctx, "/improbable.platform.inner.NannyStatus/IsStarted", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nannyStatusClient) SetWorkerTerminated(ctx context.Context, in *SetWorkerTerminatedRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/improbable.platform.inner.NannyStatus/SetWorkerTerminated", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nannyStatusClient) IsWorkerTerminated(ctx context.Context, in *IsWorkerTerminatedRequest, opts ...grpc.CallOption) (*IsWorkerTerminatedResponse, error) {
	out := new(IsWorkerTerminatedResponse)
	err := c.cc.Invoke(ctx, "/improbable.platform.inner.NannyStatus/IsWorkerTerminated", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NannyStatusServer is the server API for NannyStatus service.
type NannyStatusServer interface {
	SetStarted(context.Context, *SetStartedRequest) (*empty.Empty, error)
	IsStarted(context.Context, *IsStartedRequest) (*IsStartedResponse, error)
	SetWorkerTerminated(context.Context, *SetWorkerTerminatedRequest) (*empty.Empty, error)
	IsWorkerTerminated(context.Context, *IsWorkerTerminatedRequest) (*IsWorkerTerminatedResponse, error)
}

// UnimplementedNannyStatusServer can be embedded to have forward compatible implementations.
type UnimplementedNannyStatusServer struct {
}

func (*UnimplementedNannyStatusServer) SetStarted(ctx context.Context, req *SetStartedRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetStarted not implemented")
}
func (*UnimplementedNannyStatusServer) IsStarted(ctx context.Context, req *IsStartedRequest) (*IsStartedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsStarted not implemented")
}
func (*UnimplementedNannyStatusServer) SetWorkerTerminated(ctx context.Context, req *SetWorkerTerminatedRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetWorkerTerminated not implemented")
}
func (*UnimplementedNannyStatusServer) IsWorkerTerminated(ctx context.Context, req *IsWorkerTerminatedRequest) (*IsWorkerTerminatedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsWorkerTerminated not implemented")
}

func RegisterNannyStatusServer(s *grpc.Server, srv NannyStatusServer) {
	s.RegisterService(&_NannyStatus_serviceDesc, srv)
}

func _NannyStatus_SetStarted_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetStartedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NannyStatusServer).SetStarted(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.platform.inner.NannyStatus/SetStarted",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NannyStatusServer).SetStarted(ctx, req.(*SetStartedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NannyStatus_IsStarted_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsStartedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NannyStatusServer).IsStarted(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.platform.inner.NannyStatus/IsStarted",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NannyStatusServer).IsStarted(ctx, req.(*IsStartedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NannyStatus_SetWorkerTerminated_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetWorkerTerminatedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NannyStatusServer).SetWorkerTerminated(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.platform.inner.NannyStatus/SetWorkerTerminated",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NannyStatusServer).SetWorkerTerminated(ctx, req.(*SetWorkerTerminatedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NannyStatus_IsWorkerTerminated_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsWorkerTerminatedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NannyStatusServer).IsWorkerTerminated(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.platform.inner.NannyStatus/IsWorkerTerminated",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NannyStatusServer).IsWorkerTerminated(ctx, req.(*IsWorkerTerminatedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NannyStatus_serviceDesc = grpc.ServiceDesc{
	ServiceName: "improbable.platform.inner.NannyStatus",
	HandlerType: (*NannyStatusServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetStarted",
			Handler:    _NannyStatus_SetStarted_Handler,
		},
		{
			MethodName: "IsStarted",
			Handler:    _NannyStatus_IsStarted_Handler,
		},
		{
			MethodName: "SetWorkerTerminated",
			Handler:    _NannyStatus_SetWorkerTerminated_Handler,
		},
		{
			MethodName: "IsWorkerTerminated",
			Handler:    _NannyStatus_IsWorkerTerminated_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "improbable/platform/inner/nanny_status.proto",
}
