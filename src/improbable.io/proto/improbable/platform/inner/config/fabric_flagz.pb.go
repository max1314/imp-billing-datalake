// Code generated by protoc-gen-go. DO NOT EDIT.
// source: improbable/platform/inner/config/fabric_flagz.proto

package improbable_platform_inner_config

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	deployment "improbable.io/proto/improbable/platform/deployment"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FlagzUpdate_UpdateType int32

const (
	FlagzUpdate_CREATED  FlagzUpdate_UpdateType = 0
	FlagzUpdate_MODIFIED FlagzUpdate_UpdateType = 1
	FlagzUpdate_DELETED  FlagzUpdate_UpdateType = 2
)

var FlagzUpdate_UpdateType_name = map[int32]string{
	0: "CREATED",
	1: "MODIFIED",
	2: "DELETED",
}

var FlagzUpdate_UpdateType_value = map[string]int32{
	"CREATED":  0,
	"MODIFIED": 1,
	"DELETED":  2,
}

func (x FlagzUpdate_UpdateType) String() string {
	return proto.EnumName(FlagzUpdate_UpdateType_name, int32(x))
}

func (FlagzUpdate_UpdateType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3fc7dfbe5adbc9ce, []int{2, 0}
}

type ListResponse struct {
	Flagz                []*deployment.Flagz `protobuf:"bytes,1,rep,name=flagz,proto3" json:"flagz,omitempty"`
	Index                uint64              `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ListResponse) Reset()         { *m = ListResponse{} }
func (m *ListResponse) String() string { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()    {}
func (*ListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3fc7dfbe5adbc9ce, []int{0}
}

func (m *ListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResponse.Unmarshal(m, b)
}
func (m *ListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResponse.Marshal(b, m, deterministic)
}
func (m *ListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResponse.Merge(m, src)
}
func (m *ListResponse) XXX_Size() int {
	return xxx_messageInfo_ListResponse.Size(m)
}
func (m *ListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListResponse proto.InternalMessageInfo

func (m *ListResponse) GetFlagz() []*deployment.Flagz {
	if m != nil {
		return m.Flagz
	}
	return nil
}

func (m *ListResponse) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

type WatchRequest struct {
	DeploymentId         *deployment.DeploymentId `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	Index                uint64                   `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *WatchRequest) Reset()         { *m = WatchRequest{} }
func (m *WatchRequest) String() string { return proto.CompactTextString(m) }
func (*WatchRequest) ProtoMessage()    {}
func (*WatchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3fc7dfbe5adbc9ce, []int{1}
}

func (m *WatchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchRequest.Unmarshal(m, b)
}
func (m *WatchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchRequest.Marshal(b, m, deterministic)
}
func (m *WatchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchRequest.Merge(m, src)
}
func (m *WatchRequest) XXX_Size() int {
	return xxx_messageInfo_WatchRequest.Size(m)
}
func (m *WatchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WatchRequest proto.InternalMessageInfo

func (m *WatchRequest) GetDeploymentId() *deployment.DeploymentId {
	if m != nil {
		return m.DeploymentId
	}
	return nil
}

func (m *WatchRequest) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

type FlagzUpdate struct {
	Flagz                *deployment.Flagz      `protobuf:"bytes,1,opt,name=flagz,proto3" json:"flagz,omitempty"`
	Index                uint64                 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	PreviousValue        string                 `protobuf:"bytes,3,opt,name=previous_value,json=previousValue,proto3" json:"previous_value,omitempty"`
	UpdateType           FlagzUpdate_UpdateType `protobuf:"varint,4,opt,name=update_type,json=updateType,proto3,enum=improbable.platform.inner.config.FlagzUpdate_UpdateType" json:"update_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *FlagzUpdate) Reset()         { *m = FlagzUpdate{} }
func (m *FlagzUpdate) String() string { return proto.CompactTextString(m) }
func (*FlagzUpdate) ProtoMessage()    {}
func (*FlagzUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_3fc7dfbe5adbc9ce, []int{2}
}

func (m *FlagzUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlagzUpdate.Unmarshal(m, b)
}
func (m *FlagzUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlagzUpdate.Marshal(b, m, deterministic)
}
func (m *FlagzUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlagzUpdate.Merge(m, src)
}
func (m *FlagzUpdate) XXX_Size() int {
	return xxx_messageInfo_FlagzUpdate.Size(m)
}
func (m *FlagzUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_FlagzUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_FlagzUpdate proto.InternalMessageInfo

func (m *FlagzUpdate) GetFlagz() *deployment.Flagz {
	if m != nil {
		return m.Flagz
	}
	return nil
}

func (m *FlagzUpdate) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *FlagzUpdate) GetPreviousValue() string {
	if m != nil {
		return m.PreviousValue
	}
	return ""
}

func (m *FlagzUpdate) GetUpdateType() FlagzUpdate_UpdateType {
	if m != nil {
		return m.UpdateType
	}
	return FlagzUpdate_CREATED
}

func init() {
	proto.RegisterEnum("improbable.platform.inner.config.FlagzUpdate_UpdateType", FlagzUpdate_UpdateType_name, FlagzUpdate_UpdateType_value)
	proto.RegisterType((*ListResponse)(nil), "improbable.platform.inner.config.ListResponse")
	proto.RegisterType((*WatchRequest)(nil), "improbable.platform.inner.config.WatchRequest")
	proto.RegisterType((*FlagzUpdate)(nil), "improbable.platform.inner.config.FlagzUpdate")
}

func init() {
	proto.RegisterFile("improbable/platform/inner/config/fabric_flagz.proto", fileDescriptor_3fc7dfbe5adbc9ce)
}

var fileDescriptor_3fc7dfbe5adbc9ce = []byte{
	// 458 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x52, 0xd1, 0x8a, 0xd3, 0x40,
	0x14, 0xed, 0x74, 0xdb, 0x55, 0x6f, 0xba, 0xcb, 0x32, 0xf8, 0x10, 0x82, 0x60, 0x08, 0x2c, 0x04,
	0xb5, 0x13, 0xe9, 0x8a, 0x08, 0x3e, 0xa9, 0x49, 0xa1, 0xb0, 0x22, 0xc4, 0x55, 0xd9, 0xa7, 0x32,
	0x49, 0x26, 0xed, 0x68, 0x92, 0x89, 0x93, 0x49, 0xd7, 0xfa, 0x03, 0xfe, 0x82, 0x7f, 0x27, 0xf8,
	0xe4, 0x67, 0x48, 0x26, 0x6e, 0x9b, 0x85, 0x85, 0xba, 0xb0, 0x4f, 0xb9, 0xb9, 0xf7, 0x9e, 0x73,
	0xcf, 0x49, 0x0e, 0x9c, 0xf0, 0xbc, 0x94, 0x22, 0xa2, 0x51, 0xc6, 0xbc, 0x32, 0xa3, 0x2a, 0x15,
	0x32, 0xf7, 0x78, 0x51, 0x30, 0xe9, 0xc5, 0xa2, 0x48, 0xf9, 0xc2, 0x4b, 0x69, 0x24, 0x79, 0x3c,
	0x4f, 0x33, 0xba, 0xf8, 0x4e, 0x4a, 0x29, 0x94, 0xc0, 0xf6, 0x16, 0x44, 0x2e, 0x41, 0x44, 0x83,
	0x48, 0x0b, 0xb2, 0x1e, 0x5f, 0x47, 0x9b, 0xb0, 0x32, 0x13, 0xeb, 0x9c, 0x15, 0xca, 0xab, 0x96,
	0x54, 0xb2, 0xa4, 0xa5, 0xb3, 0x1e, 0xed, 0x58, 0xee, 0x9c, 0xb6, 0x9e, 0x2f, 0xb8, 0x5a, 0xd6,
	0x11, 0x89, 0x45, 0xee, 0xe5, 0x17, 0x5c, 0x7d, 0x11, 0x17, 0xde, 0x42, 0x8c, 0xf5, 0x70, 0xbc,
	0xa2, 0x19, 0x4f, 0xa8, 0x12, 0xb2, 0xf2, 0x36, 0x65, 0x8b, 0x73, 0x28, 0x8c, 0x4e, 0x79, 0xa5,
	0x42, 0x56, 0x95, 0xa2, 0xa8, 0x18, 0x7e, 0x09, 0x43, 0x4d, 0x6b, 0x22, 0x7b, 0xcf, 0x35, 0x26,
	0xc7, 0xe4, 0x3a, 0x4b, 0x5b, 0x0d, 0x64, 0xda, 0x2c, 0x87, 0x2d, 0x06, 0xdf, 0x87, 0x21, 0x2f,
	0x12, 0xf6, 0xcd, 0xec, 0xdb, 0xc8, 0x1d, 0x84, 0xed, 0x8b, 0xf3, 0x03, 0xc1, 0xe8, 0x13, 0x55,
	0xf1, 0x32, 0x64, 0x5f, 0x6b, 0x56, 0x29, 0x7c, 0x0e, 0x07, 0x5b, 0x86, 0x39, 0x4f, 0x4c, 0x64,
	0x23, 0xd7, 0x98, 0x3c, 0xd9, 0x75, 0xcb, 0xdf, 0x94, 0xb3, 0xe4, 0xf5, 0xfe, 0xef, 0x5f, 0x0f,
	0xfb, 0x36, 0x0a, 0x47, 0x49, 0xa7, 0x8b, 0x1f, 0x5c, 0x51, 0xb0, 0x59, 0xfa, 0xa7, 0xe4, 0x67,
	0x1f, 0x0c, 0x2d, 0xf8, 0x43, 0x99, 0x50, 0x75, 0xc5, 0x2c, 0xba, 0x1d, 0xb3, 0xf8, 0x18, 0x0e,
	0x4b, 0xc9, 0x56, 0x5c, 0xd4, 0xd5, 0x7c, 0x45, 0xb3, 0x9a, 0x99, 0x7b, 0x36, 0x72, 0xef, 0x85,
	0x07, 0x97, 0xdd, 0x8f, 0x4d, 0x13, 0x9f, 0x83, 0x51, 0x6b, 0x0d, 0x73, 0xb5, 0x2e, 0x99, 0x39,
	0xb0, 0x91, 0x7b, 0x38, 0x79, 0x41, 0x76, 0xe5, 0x87, 0x74, 0xd4, 0x93, 0xf6, 0x71, 0xb6, 0x2e,
	0x59, 0x08, 0xf5, 0xa6, 0x76, 0x9e, 0x01, 0x6c, 0x27, 0xd8, 0x80, 0x3b, 0x6f, 0xc2, 0xe0, 0xd5,
	0x59, 0xe0, 0x1f, 0xf5, 0xf0, 0x08, 0xee, 0xbe, 0x7d, 0xe7, 0xcf, 0xa6, 0xb3, 0xc0, 0x3f, 0x42,
	0xcd, 0xc8, 0x0f, 0x4e, 0x83, 0x66, 0xd4, 0x9f, 0xfc, 0x41, 0x80, 0xa7, 0x3a, 0xd1, 0xfa, 0xc4,
	0x7b, 0x26, 0x57, 0x3c, 0x66, 0x38, 0x85, 0x41, 0x13, 0x0f, 0x7c, 0xa3, 0x7f, 0x63, 0x91, 0xdd,
	0x46, 0xba, 0xa1, 0x73, 0x7a, 0xf8, 0x33, 0x0c, 0x75, 0x44, 0xf0, 0x7f, 0x40, 0xbb, 0x59, 0xb2,
	0xc6, 0x37, 0xfa, 0x66, 0x4e, 0xef, 0x29, 0x8a, 0xf6, 0x75, 0xf2, 0x4f, 0xfe, 0x06, 0x00, 0x00,
	0xff, 0xff, 0x8d, 0x25, 0x81, 0x9f, 0xe3, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FabricFlagzServiceClient is the client API for FabricFlagzService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FabricFlagzServiceClient interface {
	List(ctx context.Context, in *deployment.DeploymentId, opts ...grpc.CallOption) (*ListResponse, error)
	Watch(ctx context.Context, in *WatchRequest, opts ...grpc.CallOption) (FabricFlagzService_WatchClient, error)
}

type fabricFlagzServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFabricFlagzServiceClient(cc grpc.ClientConnInterface) FabricFlagzServiceClient {
	return &fabricFlagzServiceClient{cc}
}

func (c *fabricFlagzServiceClient) List(ctx context.Context, in *deployment.DeploymentId, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := c.cc.Invoke(ctx, "/improbable.platform.inner.config.FabricFlagzService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fabricFlagzServiceClient) Watch(ctx context.Context, in *WatchRequest, opts ...grpc.CallOption) (FabricFlagzService_WatchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_FabricFlagzService_serviceDesc.Streams[0], "/improbable.platform.inner.config.FabricFlagzService/Watch", opts...)
	if err != nil {
		return nil, err
	}
	x := &fabricFlagzServiceWatchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type FabricFlagzService_WatchClient interface {
	Recv() (*FlagzUpdate, error)
	grpc.ClientStream
}

type fabricFlagzServiceWatchClient struct {
	grpc.ClientStream
}

func (x *fabricFlagzServiceWatchClient) Recv() (*FlagzUpdate, error) {
	m := new(FlagzUpdate)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// FabricFlagzServiceServer is the server API for FabricFlagzService service.
type FabricFlagzServiceServer interface {
	List(context.Context, *deployment.DeploymentId) (*ListResponse, error)
	Watch(*WatchRequest, FabricFlagzService_WatchServer) error
}

// UnimplementedFabricFlagzServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFabricFlagzServiceServer struct {
}

func (*UnimplementedFabricFlagzServiceServer) List(ctx context.Context, req *deployment.DeploymentId) (*ListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedFabricFlagzServiceServer) Watch(req *WatchRequest, srv FabricFlagzService_WatchServer) error {
	return status.Errorf(codes.Unimplemented, "method Watch not implemented")
}

func RegisterFabricFlagzServiceServer(s *grpc.Server, srv FabricFlagzServiceServer) {
	s.RegisterService(&_FabricFlagzService_serviceDesc, srv)
}

func _FabricFlagzService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(deployment.DeploymentId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FabricFlagzServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.platform.inner.config.FabricFlagzService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FabricFlagzServiceServer).List(ctx, req.(*deployment.DeploymentId))
	}
	return interceptor(ctx, in, info, handler)
}

func _FabricFlagzService_Watch_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FabricFlagzServiceServer).Watch(m, &fabricFlagzServiceWatchServer{stream})
}

type FabricFlagzService_WatchServer interface {
	Send(*FlagzUpdate) error
	grpc.ServerStream
}

type fabricFlagzServiceWatchServer struct {
	grpc.ServerStream
}

func (x *fabricFlagzServiceWatchServer) Send(m *FlagzUpdate) error {
	return x.ServerStream.SendMsg(m)
}

var _FabricFlagzService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "improbable.platform.inner.config.FabricFlagzService",
	HandlerType: (*FabricFlagzServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _FabricFlagzService_List_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Watch",
			Handler:       _FabricFlagzService_Watch_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "improbable/platform/inner/config/fabric_flagz.proto",
}
