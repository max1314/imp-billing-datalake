// Code generated by protoc-gen-go. DO NOT EDIT.
// source: improbable/platform/schema/schema.proto

package improbable_platform_project

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	assembly "improbable.io/proto/improbable/platform/assembly"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetSchemaForAssemblyRequest_ResponseFormat int32

const (
	GetSchemaForAssemblyRequest_UNKNOWN               GetSchemaForAssemblyRequest_ResponseFormat = 0
	GetSchemaForAssemblyRequest_FILE_DESCRIPTOR_BYTES GetSchemaForAssemblyRequest_ResponseFormat = 1 // Deprecated: Do not use.
	GetSchemaForAssemblyRequest_FILE_DESCRIPTOR_URL   GetSchemaForAssemblyRequest_ResponseFormat = 2
	GetSchemaForAssemblyRequest_SCHEMA_BUNDLE_URL     GetSchemaForAssemblyRequest_ResponseFormat = 3
)

var GetSchemaForAssemblyRequest_ResponseFormat_name = map[int32]string{
	0: "UNKNOWN",
	1: "FILE_DESCRIPTOR_BYTES",
	2: "FILE_DESCRIPTOR_URL",
	3: "SCHEMA_BUNDLE_URL",
}

var GetSchemaForAssemblyRequest_ResponseFormat_value = map[string]int32{
	"UNKNOWN":               0,
	"FILE_DESCRIPTOR_BYTES": 1,
	"FILE_DESCRIPTOR_URL":   2,
	"SCHEMA_BUNDLE_URL":     3,
}

func (x GetSchemaForAssemblyRequest_ResponseFormat) String() string {
	return proto.EnumName(GetSchemaForAssemblyRequest_ResponseFormat_name, int32(x))
}

func (GetSchemaForAssemblyRequest_ResponseFormat) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7510e8c1d2c54acd, []int{0, 0}
}

type GetSchemaForAssemblyRequest struct {
	AssemblyId           *assembly.AssemblyId                       `protobuf:"bytes,1,opt,name=assembly_id,json=assemblyId,proto3" json:"assembly_id,omitempty"`
	ResponseFormat       GetSchemaForAssemblyRequest_ResponseFormat `protobuf:"varint,2,opt,name=response_format,json=responseFormat,proto3,enum=improbable.platform.project.GetSchemaForAssemblyRequest_ResponseFormat" json:"response_format,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *GetSchemaForAssemblyRequest) Reset()         { *m = GetSchemaForAssemblyRequest{} }
func (m *GetSchemaForAssemblyRequest) String() string { return proto.CompactTextString(m) }
func (*GetSchemaForAssemblyRequest) ProtoMessage()    {}
func (*GetSchemaForAssemblyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7510e8c1d2c54acd, []int{0}
}

func (m *GetSchemaForAssemblyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSchemaForAssemblyRequest.Unmarshal(m, b)
}
func (m *GetSchemaForAssemblyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSchemaForAssemblyRequest.Marshal(b, m, deterministic)
}
func (m *GetSchemaForAssemblyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSchemaForAssemblyRequest.Merge(m, src)
}
func (m *GetSchemaForAssemblyRequest) XXX_Size() int {
	return xxx_messageInfo_GetSchemaForAssemblyRequest.Size(m)
}
func (m *GetSchemaForAssemblyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSchemaForAssemblyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSchemaForAssemblyRequest proto.InternalMessageInfo

func (m *GetSchemaForAssemblyRequest) GetAssemblyId() *assembly.AssemblyId {
	if m != nil {
		return m.AssemblyId
	}
	return nil
}

func (m *GetSchemaForAssemblyRequest) GetResponseFormat() GetSchemaForAssemblyRequest_ResponseFormat {
	if m != nil {
		return m.ResponseFormat
	}
	return GetSchemaForAssemblyRequest_UNKNOWN
}

type GetSchemaForAssemblyResponse struct {
	// Types that are valid to be assigned to SchemaDefinition:
	//	*GetSchemaForAssemblyResponse_FileDescriptorSet
	//	*GetSchemaForAssemblyResponse_FileDescriptorUrl
	//	*GetSchemaForAssemblyResponse_SchemaBundleUrl
	SchemaDefinition     isGetSchemaForAssemblyResponse_SchemaDefinition `protobuf_oneof:"schema_definition"`
	XXX_NoUnkeyedLiteral struct{}                                        `json:"-"`
	XXX_unrecognized     []byte                                          `json:"-"`
	XXX_sizecache        int32                                           `json:"-"`
}

func (m *GetSchemaForAssemblyResponse) Reset()         { *m = GetSchemaForAssemblyResponse{} }
func (m *GetSchemaForAssemblyResponse) String() string { return proto.CompactTextString(m) }
func (*GetSchemaForAssemblyResponse) ProtoMessage()    {}
func (*GetSchemaForAssemblyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7510e8c1d2c54acd, []int{1}
}

func (m *GetSchemaForAssemblyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSchemaForAssemblyResponse.Unmarshal(m, b)
}
func (m *GetSchemaForAssemblyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSchemaForAssemblyResponse.Marshal(b, m, deterministic)
}
func (m *GetSchemaForAssemblyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSchemaForAssemblyResponse.Merge(m, src)
}
func (m *GetSchemaForAssemblyResponse) XXX_Size() int {
	return xxx_messageInfo_GetSchemaForAssemblyResponse.Size(m)
}
func (m *GetSchemaForAssemblyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSchemaForAssemblyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSchemaForAssemblyResponse proto.InternalMessageInfo

type isGetSchemaForAssemblyResponse_SchemaDefinition interface {
	isGetSchemaForAssemblyResponse_SchemaDefinition()
}

type GetSchemaForAssemblyResponse_FileDescriptorSet struct {
	FileDescriptorSet []byte `protobuf:"bytes,1,opt,name=file_descriptor_set,json=fileDescriptorSet,proto3,oneof"`
}

type GetSchemaForAssemblyResponse_FileDescriptorUrl struct {
	FileDescriptorUrl string `protobuf:"bytes,2,opt,name=file_descriptor_url,json=fileDescriptorUrl,proto3,oneof"`
}

type GetSchemaForAssemblyResponse_SchemaBundleUrl struct {
	SchemaBundleUrl string `protobuf:"bytes,3,opt,name=schema_bundle_url,json=schemaBundleUrl,proto3,oneof"`
}

func (*GetSchemaForAssemblyResponse_FileDescriptorSet) isGetSchemaForAssemblyResponse_SchemaDefinition() {
}

func (*GetSchemaForAssemblyResponse_FileDescriptorUrl) isGetSchemaForAssemblyResponse_SchemaDefinition() {
}

func (*GetSchemaForAssemblyResponse_SchemaBundleUrl) isGetSchemaForAssemblyResponse_SchemaDefinition() {
}

func (m *GetSchemaForAssemblyResponse) GetSchemaDefinition() isGetSchemaForAssemblyResponse_SchemaDefinition {
	if m != nil {
		return m.SchemaDefinition
	}
	return nil
}

// Deprecated: Do not use.
func (m *GetSchemaForAssemblyResponse) GetFileDescriptorSet() []byte {
	if x, ok := m.GetSchemaDefinition().(*GetSchemaForAssemblyResponse_FileDescriptorSet); ok {
		return x.FileDescriptorSet
	}
	return nil
}

func (m *GetSchemaForAssemblyResponse) GetFileDescriptorUrl() string {
	if x, ok := m.GetSchemaDefinition().(*GetSchemaForAssemblyResponse_FileDescriptorUrl); ok {
		return x.FileDescriptorUrl
	}
	return ""
}

func (m *GetSchemaForAssemblyResponse) GetSchemaBundleUrl() string {
	if x, ok := m.GetSchemaDefinition().(*GetSchemaForAssemblyResponse_SchemaBundleUrl); ok {
		return x.SchemaBundleUrl
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GetSchemaForAssemblyResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GetSchemaForAssemblyResponse_FileDescriptorSet)(nil),
		(*GetSchemaForAssemblyResponse_FileDescriptorUrl)(nil),
		(*GetSchemaForAssemblyResponse_SchemaBundleUrl)(nil),
	}
}

func init() {
	proto.RegisterEnum("improbable.platform.project.GetSchemaForAssemblyRequest_ResponseFormat", GetSchemaForAssemblyRequest_ResponseFormat_name, GetSchemaForAssemblyRequest_ResponseFormat_value)
	proto.RegisterType((*GetSchemaForAssemblyRequest)(nil), "improbable.platform.project.GetSchemaForAssemblyRequest")
	proto.RegisterType((*GetSchemaForAssemblyResponse)(nil), "improbable.platform.project.GetSchemaForAssemblyResponse")
}

func init() {
	proto.RegisterFile("improbable/platform/schema/schema.proto", fileDescriptor_7510e8c1d2c54acd)
}

var fileDescriptor_7510e8c1d2c54acd = []byte{
	// 459 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x52, 0xdd, 0x6e, 0xd3, 0x30,
	0x14, 0x9e, 0x33, 0x89, 0x1f, 0x17, 0xba, 0xd6, 0x65, 0xa2, 0xea, 0x86, 0x34, 0xf5, 0x86, 0x4a,
	0xb0, 0x04, 0x15, 0x84, 0xe0, 0x72, 0x59, 0xd3, 0xad, 0xa2, 0x74, 0x28, 0x59, 0x84, 0xb8, 0x8a,
	0x9c, 0xe4, 0xb4, 0x33, 0x38, 0x71, 0xb0, 0xdd, 0x4d, 0x3c, 0x03, 0xcf, 0xc0, 0xfb, 0xc0, 0x5b,
	0xa1, 0x3a, 0x69, 0xd0, 0x58, 0xb5, 0x8b, 0x5d, 0xe5, 0xc4, 0xdf, 0x8f, 0xbf, 0x73, 0x7c, 0xf0,
	0x73, 0x96, 0x15, 0x52, 0xc4, 0x34, 0xe6, 0xe0, 0x14, 0x9c, 0xea, 0xb9, 0x90, 0x99, 0xa3, 0x92,
	0x0b, 0xc8, 0x68, 0xf5, 0xb1, 0x0b, 0x29, 0xb4, 0x20, 0x7b, 0xff, 0x88, 0xf6, 0x9a, 0xb8, 0x82,
	0xbe, 0x42, 0xa2, 0x7b, 0x2f, 0x36, 0xb9, 0x50, 0xa5, 0x20, 0x8b, 0xf9, 0x8f, 0xba, 0x28, 0x9d,
	0x7a, 0xfb, 0x0b, 0x21, 0x16, 0x1c, 0x1c, 0x5a, 0x30, 0x87, 0xe6, 0xb9, 0xd0, 0x54, 0x33, 0x91,
	0xab, 0x0a, 0x7d, 0xbb, 0x60, 0xfa, 0x62, 0x19, 0xdb, 0x89, 0xc8, 0x9c, 0xec, 0x8a, 0xe9, 0x6f,
	0xe2, 0xca, 0x59, 0x88, 0x43, 0x03, 0x1e, 0x5e, 0x52, 0xce, 0x52, 0xaa, 0x85, 0x54, 0x4e, 0x5d,
	0x96, 0xba, 0xfe, 0x6f, 0x0b, 0xef, 0x9d, 0x80, 0x0e, 0x4c, 0xe6, 0xb1, 0x90, 0x47, 0xd5, 0xa5,
	0x3e, 0x7c, 0x5f, 0x82, 0xd2, 0x64, 0x82, 0x1b, 0xeb, 0x1c, 0x11, 0x4b, 0xbb, 0xe8, 0x00, 0x0d,
	0x1a, 0xc3, 0x81, 0xbd, 0xa9, 0xab, 0x3a, 0xef, 0xda, 0x63, 0x92, 0xfa, 0x98, 0xd6, 0x35, 0x29,
	0xf0, 0x8e, 0x04, 0x55, 0x88, 0x5c, 0x41, 0xb4, 0x12, 0x50, 0xdd, 0xb5, 0x0e, 0xd0, 0xa0, 0x39,
	0x3c, 0xb1, 0x6f, 0x19, 0x92, 0x7d, 0x4b, 0x3a, 0xdb, 0xaf, 0xfc, 0xc6, 0xc6, 0xce, 0x6f, 0xca,
	0x6b, 0xff, 0x7d, 0x8e, 0x9b, 0xd7, 0x19, 0xa4, 0x81, 0xef, 0x87, 0xb3, 0x0f, 0xb3, 0xb3, 0xcf,
	0xb3, 0xd6, 0x16, 0x79, 0x86, 0x77, 0xc7, 0x93, 0xa9, 0x17, 0x8d, 0xbc, 0xe0, 0xd8, 0x9f, 0x7c,
	0x3a, 0x3f, 0xf3, 0x23, 0xf7, 0xcb, 0xb9, 0x17, 0xb4, 0x50, 0xcf, 0x7a, 0x80, 0xc8, 0x53, 0xdc,
	0xf9, 0x1f, 0x0e, 0xfd, 0x69, 0xcb, 0x22, 0xbb, 0xb8, 0x1d, 0x1c, 0x9f, 0x7a, 0x1f, 0x8f, 0x22,
	0x37, 0x9c, 0x8d, 0xa6, 0x9e, 0x39, 0xde, 0xee, 0xff, 0x41, 0x78, 0x7f, 0x73, 0xd8, 0x32, 0x02,
	0x79, 0x83, 0x3b, 0x73, 0xc6, 0x21, 0x4a, 0x41, 0x25, 0x92, 0x15, 0x5a, 0xc8, 0x48, 0x81, 0x36,
	0x33, 0x7d, 0xe4, 0x5a, 0x5d, 0x74, 0xba, 0xe5, 0xb7, 0x57, 0x84, 0x51, 0x8d, 0x07, 0xa0, 0xc9,
	0xab, 0x9b, 0xaa, 0xa5, 0xe4, 0x66, 0x74, 0x0f, 0x6f, 0x2a, 0x42, 0xc9, 0xc9, 0x4b, 0xdc, 0x2e,
	0x77, 0x30, 0x8a, 0x97, 0x79, 0xca, 0xc1, 0xf0, 0xb7, 0x2b, 0xfe, 0x4e, 0x09, 0xb9, 0x06, 0x09,
	0x25, 0x77, 0x3b, 0x35, 0x3b, 0x85, 0x39, 0xcb, 0xd9, 0x6a, 0xab, 0x86, 0xbf, 0x10, 0x7e, 0x5c,
	0x36, 0x12, 0x80, 0xbc, 0x64, 0x09, 0x90, 0x9f, 0x08, 0x3f, 0xd9, 0xd4, 0x1d, 0x79, 0x77, 0xd7,
	0xd7, 0xeb, 0xbd, 0xbf, 0x83, 0xb2, 0x1c, 0x65, 0x7c, 0xcf, 0x6c, 0xef, 0xeb, 0xbf, 0x01, 0x00,
	0x00, 0xff, 0xff, 0xd8, 0xb3, 0xa8, 0x04, 0x88, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SchemaServiceClient is the client API for SchemaService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SchemaServiceClient interface {
	GetSchemaForAssembly(ctx context.Context, in *GetSchemaForAssemblyRequest, opts ...grpc.CallOption) (*GetSchemaForAssemblyResponse, error)
}

type schemaServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSchemaServiceClient(cc grpc.ClientConnInterface) SchemaServiceClient {
	return &schemaServiceClient{cc}
}

func (c *schemaServiceClient) GetSchemaForAssembly(ctx context.Context, in *GetSchemaForAssemblyRequest, opts ...grpc.CallOption) (*GetSchemaForAssemblyResponse, error) {
	out := new(GetSchemaForAssemblyResponse)
	err := c.cc.Invoke(ctx, "/improbable.platform.project.SchemaService/GetSchemaForAssembly", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SchemaServiceServer is the server API for SchemaService service.
type SchemaServiceServer interface {
	GetSchemaForAssembly(context.Context, *GetSchemaForAssemblyRequest) (*GetSchemaForAssemblyResponse, error)
}

// UnimplementedSchemaServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSchemaServiceServer struct {
}

func (*UnimplementedSchemaServiceServer) GetSchemaForAssembly(ctx context.Context, req *GetSchemaForAssemblyRequest) (*GetSchemaForAssemblyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSchemaForAssembly not implemented")
}

func RegisterSchemaServiceServer(s *grpc.Server, srv SchemaServiceServer) {
	s.RegisterService(&_SchemaService_serviceDesc, srv)
}

func _SchemaService_GetSchemaForAssembly_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSchemaForAssemblyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchemaServiceServer).GetSchemaForAssembly(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.platform.project.SchemaService/GetSchemaForAssembly",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchemaServiceServer).GetSchemaForAssembly(ctx, req.(*GetSchemaForAssemblyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SchemaService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "improbable.platform.project.SchemaService",
	HandlerType: (*SchemaServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSchemaForAssembly",
			Handler:    _SchemaService_GetSchemaForAssembly_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "improbable/platform/schema/schema.proto",
}
