// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/platform/test/test.proto

package test

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/improbable-io/go-proto-logfields"
	github_com_improbable_io_go_proto_logfields "github.com/improbable-io/go-proto-logfields"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *PingRequest) LogFields() map[string]string {
	return map[string]string{}
}

func (this *PingRequest) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *PongResponse) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	nowFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Now)
	hasInner = hasInner || len(nowFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{
			"someLoggedField": fmt.Sprintf("%v", this.SomethingRandom),
		}
	}
	// Merge all the field maps.
	res := map[string]string{}
	res["someLoggedField"] = fmt.Sprintf("%v", this.SomethingRandom)
	for k, v := range nowFields {
		res[k] = v
	}
	return res
}

func (this *PongResponse) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	dst["someLoggedField"] = this.SomethingRandom
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Now, dst)
}

func (this *SyncRequest) LogFields() map[string]string {
	return map[string]string{}
}

func (this *SyncRequest) ExtractRequestFields(dst map[string]interface{}) {
}
