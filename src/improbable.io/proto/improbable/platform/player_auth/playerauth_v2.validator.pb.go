// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/platform/player_auth/playerauth_v2.proto

package improbable_platform_player_auth

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/improbable-io/go-proto-logfields"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	_ "improbable.io/proto/improbable/ext/plugin/auth"
	math "math"
	regexp "regexp"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

var _regex_DevelopmentAuthenticationToken_ProjectName = regexp.MustCompile(`^[a-zA-Z0-9_]{3,32}$`)

func (this *DevelopmentAuthenticationToken) Validate() error {
	if this.Id == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Id", fmt.Errorf(`value '%v' must not be an empty string`, this.Id))
	}
	if !_regex_DevelopmentAuthenticationToken_ProjectName.MatchString(this.ProjectName) {
		return github_com_mwitkow_go_proto_validators.FieldError("ProjectName", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-zA-Z0-9_]{3,32}$"`, this.ProjectName))
	}
	if this.Description == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Description", fmt.Errorf(`value '%v' must not be an empty string`, this.Description))
	}
	if this.CreationTime != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CreationTime); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CreationTime", err)
		}
	}
	if this.ExpirationTime != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ExpirationTime); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ExpirationTime", err)
		}
	}
	return nil
}
func (this *VerifyDevelopmentAuthenticationTokenRequest) Validate() error {
	if this.TokenSecret == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("TokenSecret", fmt.Errorf(`value '%v' must not be an empty string`, this.TokenSecret))
	}
	return nil
}
func (this *VerifyDevelopmentAuthenticationTokenResponse) Validate() error {
	if this.DevelopmentAuthenticationToken != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.DevelopmentAuthenticationToken); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("DevelopmentAuthenticationToken", err)
		}
	}
	return nil
}
func (this *DeleteDevelopmentAuthenticationTokenRequest) Validate() error {
	if this.Id == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Id", fmt.Errorf(`value '%v' must not be an empty string`, this.Id))
	}
	return nil
}
func (this *DeleteDevelopmentAuthenticationTokenResponse) Validate() error {
	return nil
}
