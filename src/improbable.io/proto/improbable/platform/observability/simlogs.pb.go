// Code generated by protoc-gen-go. DO NOT EDIT.
// source: improbable/platform/observability/simlogs.proto

package improbable_platform_observability

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/improbable-io/go-proto-logfields"
	_ "github.com/mwitkow/go-proto-validators"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	_ "improbable.io/proto/improbable/ext/plugin/auth"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetSimlogsRequest struct {
	Tenant               string               `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Resource             string               `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	From                 *timestamp.Timestamp `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To                   *timestamp.Timestamp `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetSimlogsRequest) Reset()         { *m = GetSimlogsRequest{} }
func (m *GetSimlogsRequest) String() string { return proto.CompactTextString(m) }
func (*GetSimlogsRequest) ProtoMessage()    {}
func (*GetSimlogsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_463e8dd1960fd53c, []int{0}
}

func (m *GetSimlogsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSimlogsRequest.Unmarshal(m, b)
}
func (m *GetSimlogsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSimlogsRequest.Marshal(b, m, deterministic)
}
func (m *GetSimlogsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSimlogsRequest.Merge(m, src)
}
func (m *GetSimlogsRequest) XXX_Size() int {
	return xxx_messageInfo_GetSimlogsRequest.Size(m)
}
func (m *GetSimlogsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSimlogsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSimlogsRequest proto.InternalMessageInfo

func (m *GetSimlogsRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *GetSimlogsRequest) GetResource() string {
	if m != nil {
		return m.Resource
	}
	return ""
}

func (m *GetSimlogsRequest) GetFrom() *timestamp.Timestamp {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *GetSimlogsRequest) GetTo() *timestamp.Timestamp {
	if m != nil {
		return m.To
	}
	return nil
}

type PartitionReference struct {
	Url                  string               `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Group                string               `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PartitionReference) Reset()         { *m = PartitionReference{} }
func (m *PartitionReference) String() string { return proto.CompactTextString(m) }
func (*PartitionReference) ProtoMessage()    {}
func (*PartitionReference) Descriptor() ([]byte, []int) {
	return fileDescriptor_463e8dd1960fd53c, []int{1}
}

func (m *PartitionReference) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartitionReference.Unmarshal(m, b)
}
func (m *PartitionReference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartitionReference.Marshal(b, m, deterministic)
}
func (m *PartitionReference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartitionReference.Merge(m, src)
}
func (m *PartitionReference) XXX_Size() int {
	return xxx_messageInfo_PartitionReference.Size(m)
}
func (m *PartitionReference) XXX_DiscardUnknown() {
	xxx_messageInfo_PartitionReference.DiscardUnknown(m)
}

var xxx_messageInfo_PartitionReference proto.InternalMessageInfo

func (m *PartitionReference) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *PartitionReference) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *PartitionReference) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

type GetSimlogsResponse struct {
	PartitionReferences  []*PartitionReference `protobuf:"bytes,1,rep,name=partition_references,json=partitionReferences,proto3" json:"partition_references,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GetSimlogsResponse) Reset()         { *m = GetSimlogsResponse{} }
func (m *GetSimlogsResponse) String() string { return proto.CompactTextString(m) }
func (*GetSimlogsResponse) ProtoMessage()    {}
func (*GetSimlogsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_463e8dd1960fd53c, []int{2}
}

func (m *GetSimlogsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSimlogsResponse.Unmarshal(m, b)
}
func (m *GetSimlogsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSimlogsResponse.Marshal(b, m, deterministic)
}
func (m *GetSimlogsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSimlogsResponse.Merge(m, src)
}
func (m *GetSimlogsResponse) XXX_Size() int {
	return xxx_messageInfo_GetSimlogsResponse.Size(m)
}
func (m *GetSimlogsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSimlogsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSimlogsResponse proto.InternalMessageInfo

func (m *GetSimlogsResponse) GetPartitionReferences() []*PartitionReference {
	if m != nil {
		return m.PartitionReferences
	}
	return nil
}

type ListRequest struct {
	Tenant               string               `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Resource             string               `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	From                 *timestamp.Timestamp `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To                   *timestamp.Timestamp `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_463e8dd1960fd53c, []int{3}
}

func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

func (m *ListRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *ListRequest) GetResource() string {
	if m != nil {
		return m.Resource
	}
	return ""
}

func (m *ListRequest) GetFrom() *timestamp.Timestamp {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *ListRequest) GetTo() *timestamp.Timestamp {
	if m != nil {
		return m.To
	}
	return nil
}

func init() {
	proto.RegisterType((*GetSimlogsRequest)(nil), "improbable.platform.observability.GetSimlogsRequest")
	proto.RegisterType((*PartitionReference)(nil), "improbable.platform.observability.PartitionReference")
	proto.RegisterType((*GetSimlogsResponse)(nil), "improbable.platform.observability.GetSimlogsResponse")
	proto.RegisterType((*ListRequest)(nil), "improbable.platform.observability.ListRequest")
}

func init() {
	proto.RegisterFile("improbable/platform/observability/simlogs.proto", fileDescriptor_463e8dd1960fd53c)
}

var fileDescriptor_463e8dd1960fd53c = []byte{
	// 596 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe4, 0x54, 0xcd, 0x4e, 0x14, 0x4d,
	0x14, 0x4d, 0xcf, 0xf0, 0x4d, 0x3e, 0x0a, 0x83, 0x52, 0xb0, 0x98, 0xcc, 0x02, 0xc6, 0x8e, 0x31,
	0x18, 0x99, 0x2e, 0x32, 0x08, 0xf1, 0x67, 0x25, 0x89, 0x4a, 0x0c, 0x0b, 0xd3, 0xb8, 0x23, 0x48,
	0xaa, 0x67, 0xee, 0x34, 0x85, 0x55, 0x7d, 0xcb, 0xaa, 0xea, 0x41, 0x24, 0xb8, 0x74, 0xe5, 0xc2,
	0x35, 0x1b, 0x12, 0xb6, 0xac, 0x7d, 0x04, 0x9f, 0x83, 0x84, 0x27, 0x31, 0xd3, 0xdd, 0xf3, 0x43,
	0x88, 0x32, 0xac, 0xdd, 0x55, 0x55, 0xdf, 0x73, 0xea, 0xdc, 0x73, 0x6e, 0x17, 0x61, 0x42, 0x69,
	0x83, 0x11, 0x8f, 0x24, 0x30, 0x2d, 0xb9, 0xeb, 0xa0, 0x51, 0x0c, 0x23, 0x0b, 0xa6, 0xcb, 0x23,
	0x21, 0x85, 0x3b, 0x64, 0x56, 0x28, 0x89, 0xb1, 0x0d, 0xb4, 0x41, 0x87, 0xf4, 0xfe, 0x10, 0x10,
	0xf4, 0x01, 0xc1, 0x15, 0x40, 0xed, 0x45, 0x2c, 0xdc, 0x5e, 0x1a, 0x05, 0x2d, 0x54, 0x23, 0xf4,
	0x0d, 0x81, 0x2c, 0xc6, 0x46, 0xc6, 0xd2, 0x90, 0x18, 0x77, 0x04, 0xc8, 0xb6, 0x65, 0x83, 0x55,
	0xce, 0x5f, 0x5b, 0x1b, 0x01, 0xab, 0x03, 0xe1, 0x3e, 0xe2, 0xc1, 0x10, 0xd6, 0xe5, 0x52, 0xb4,
	0xb9, 0x43, 0x63, 0xd9, 0x60, 0x59, 0xe0, 0x16, 0x62, 0xc4, 0xb8, 0xd7, 0x44, 0x6f, 0x17, 0xa5,
	0x1d, 0xe6, 0x84, 0x02, 0xeb, 0xb8, 0xd2, 0x45, 0xc1, 0xc3, 0x91, 0x4e, 0xe1, 0xb3, 0x63, 0x5a,
	0xa6, 0xb1, 0x48, 0x18, 0x4f, 0xdd, 0x1e, 0xd3, 0x60, 0x54, 0x5f, 0x40, 0xe3, 0x66, 0x47, 0xb8,
	0x93, 0xbc, 0x28, 0xf7, 0xbf, 0x97, 0xc8, 0xcc, 0x1b, 0x70, 0x5b, 0xb9, 0x49, 0x21, 0x7c, 0x4a,
	0xc1, 0x3a, 0xfa, 0x92, 0x54, 0x1c, 0x24, 0x3c, 0x71, 0x55, 0xaf, 0xee, 0x2d, 0x4e, 0xae, 0x3f,
	0x3a, 0x3b, 0x9f, 0x9f, 0x26, 0x77, 0xb4, 0xc1, 0x7d, 0x68, 0xb9, 0xdd, 0x84, 0x2b, 0xb8, 0xbc,
	0x58, 0x98, 0x25, 0x33, 0x1f, 0xb6, 0x79, 0xe3, 0xcb, 0x72, 0xe3, 0xd9, 0xee, 0xce, 0xd1, 0xca,
	0xd2, 0x4a, 0xf3, 0xf8, 0x41, 0x58, 0x00, 0xe9, 0x06, 0xf9, 0xdf, 0x80, 0xc5, 0xd4, 0xb4, 0xa0,
	0x5a, 0xca, 0x48, 0x96, 0xce, 0xce, 0xe7, 0x67, 0xc8, 0xdd, 0x36, 0x68, 0x89, 0x87, 0x0a, 0x92,
	0x3f, 0xf0, 0x34, 0x73, 0x9e, 0x01, 0x9a, 0xae, 0x91, 0x89, 0x8e, 0x41, 0x55, 0x2d, 0xd7, 0xbd,
	0xc5, 0xa9, 0x66, 0x2d, 0xc8, 0x9d, 0x0a, 0xfa, 0x4e, 0x05, 0xef, 0xfb, 0x4e, 0xad, 0x57, 0x2e,
	0x2f, 0x16, 0x4a, 0x75, 0x2f, 0xcc, 0xea, 0x69, 0x93, 0x94, 0x1c, 0x56, 0x27, 0xc6, 0x46, 0x95,
	0x1c, 0xfa, 0x5d, 0x42, 0xdf, 0x71, 0xe3, 0x84, 0x13, 0x98, 0x84, 0xd0, 0x01, 0x03, 0x49, 0x0b,
	0xe8, 0x3d, 0x52, 0x4e, 0x8d, 0xcc, 0xbd, 0x08, 0x7b, 0x4b, 0xfa, 0x94, 0x4c, 0x0e, 0x02, 0xca,
	0xda, 0xfb, 0xeb, 0x15, 0xe1, 0xb0, 0x98, 0xce, 0x91, 0xff, 0x62, 0x83, 0xa9, 0xce, 0xda, 0x99,
	0x0c, 0xf3, 0x8d, 0xff, 0x95, 0xd0, 0xd1, 0x14, 0xac, 0xc6, 0xc4, 0x02, 0xdd, 0x23, 0x73, 0xba,
	0xaf, 0x66, 0xd7, 0xf4, 0xe5, 0xd8, 0xaa, 0x57, 0x2f, 0x2f, 0x4e, 0x35, 0x57, 0x83, 0x1b, 0x67,
	0x39, 0xb8, 0xde, 0x4c, 0x38, 0xab, 0xaf, 0x9d, 0x59, 0xff, 0x5b, 0x89, 0x4c, 0x6d, 0x0a, 0xeb,
	0xfe, 0xf5, 0x01, 0x68, 0xfe, 0x28, 0x93, 0xe9, 0x22, 0x86, 0x2d, 0x30, 0x5d, 0xd1, 0x02, 0xfa,
	0xcb, 0x23, 0x64, 0x18, 0x0e, 0x7d, 0x32, 0x86, 0xed, 0xd7, 0xfe, 0xa8, 0xda, 0xea, 0x2d, 0x51,
	0xf9, 0x04, 0xf8, 0x6f, 0x4f, 0x4e, 0xfd, 0xd7, 0x84, 0x0e, 0x2d, 0xdb, 0xcc, 0xbe, 0xf2, 0x36,
	0x5d, 0xde, 0x36, 0x3b, 0xcf, 0xb5, 0xd9, 0x67, 0x47, 0xdc, 0xe4, 0xaf, 0x5b, 0x2f, 0x99, 0x63,
	0xd6, 0xd6, 0xb2, 0x38, 0x1a, 0x82, 0x8e, 0x7b, 0xcf, 0x14, 0xfd, 0xe9, 0x91, 0xca, 0x96, 0x33,
	0xc0, 0x15, 0x0d, 0xc6, 0x50, 0x33, 0x32, 0x0e, 0xb5, 0xc7, 0xe3, 0xd4, 0x63, 0xfc, 0x2a, 0x71,
	0xe6, 0xd0, 0xdf, 0x3c, 0x39, 0xf5, 0x37, 0xc8, 0xdc, 0x55, 0xcd, 0xc5, 0xc5, 0xb7, 0x56, 0xbd,
	0xec, 0x45, 0x95, 0x2c, 0xb2, 0x95, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xd6, 0x02, 0x46, 0xbc,
	0xec, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SimlogsServiceClient is the client API for SimlogsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SimlogsServiceClient interface {
	GetSimlogs(ctx context.Context, in *GetSimlogsRequest, opts ...grpc.CallOption) (*GetSimlogsResponse, error)
	Stream(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (SimlogsService_StreamClient, error)
}

type simlogsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSimlogsServiceClient(cc grpc.ClientConnInterface) SimlogsServiceClient {
	return &simlogsServiceClient{cc}
}

func (c *simlogsServiceClient) GetSimlogs(ctx context.Context, in *GetSimlogsRequest, opts ...grpc.CallOption) (*GetSimlogsResponse, error) {
	out := new(GetSimlogsResponse)
	err := c.cc.Invoke(ctx, "/improbable.platform.observability.SimlogsService/GetSimlogs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *simlogsServiceClient) Stream(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (SimlogsService_StreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SimlogsService_serviceDesc.Streams[0], "/improbable.platform.observability.SimlogsService/Stream", opts...)
	if err != nil {
		return nil, err
	}
	x := &simlogsServiceStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SimlogsService_StreamClient interface {
	Recv() (*LogEntry, error)
	grpc.ClientStream
}

type simlogsServiceStreamClient struct {
	grpc.ClientStream
}

func (x *simlogsServiceStreamClient) Recv() (*LogEntry, error) {
	m := new(LogEntry)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SimlogsServiceServer is the server API for SimlogsService service.
type SimlogsServiceServer interface {
	GetSimlogs(context.Context, *GetSimlogsRequest) (*GetSimlogsResponse, error)
	Stream(*ListRequest, SimlogsService_StreamServer) error
}

// UnimplementedSimlogsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSimlogsServiceServer struct {
}

func (*UnimplementedSimlogsServiceServer) GetSimlogs(ctx context.Context, req *GetSimlogsRequest) (*GetSimlogsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSimlogs not implemented")
}
func (*UnimplementedSimlogsServiceServer) Stream(req *ListRequest, srv SimlogsService_StreamServer) error {
	return status.Errorf(codes.Unimplemented, "method Stream not implemented")
}

func RegisterSimlogsServiceServer(s *grpc.Server, srv SimlogsServiceServer) {
	s.RegisterService(&_SimlogsService_serviceDesc, srv)
}

func _SimlogsService_GetSimlogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSimlogsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SimlogsServiceServer).GetSimlogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.platform.observability.SimlogsService/GetSimlogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SimlogsServiceServer).GetSimlogs(ctx, req.(*GetSimlogsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SimlogsService_Stream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SimlogsServiceServer).Stream(m, &simlogsServiceStreamServer{stream})
}

type SimlogsService_StreamServer interface {
	Send(*LogEntry) error
	grpc.ServerStream
}

type simlogsServiceStreamServer struct {
	grpc.ServerStream
}

func (x *simlogsServiceStreamServer) Send(m *LogEntry) error {
	return x.ServerStream.SendMsg(m)
}

var _SimlogsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "improbable.platform.observability.SimlogsService",
	HandlerType: (*SimlogsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSimlogs",
			Handler:    _SimlogsService_GetSimlogs_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Stream",
			Handler:       _SimlogsService_Stream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "improbable/platform/observability/simlogs.proto",
}
