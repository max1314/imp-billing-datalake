// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/platform/observability/simlogs.proto

package improbable_platform_observability

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/improbable-io/go-proto-logfields"
	github_com_improbable_io_go_proto_logfields "github.com/improbable-io/go-proto-logfields"
	_ "github.com/mwitkow/go-proto-validators"
	_ "improbable.io/proto/improbable/ext/plugin/auth"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *GetSimlogsRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	fromFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.From)
	hasInner = hasInner || len(fromFields) > 0
	toFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.To)
	hasInner = hasInner || len(toFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{
			"project_name":    this.Tenant,
			"deployment_name": this.Resource,
		}
	}
	// Merge all the field maps.
	res := map[string]string{}
	res["project_name"] = this.Tenant
	res["deployment_name"] = this.Resource
	for k, v := range fromFields {
		res[k] = v
	}
	for k, v := range toFields {
		res[k] = v
	}
	return res
}

func (this *GetSimlogsRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	dst["project_name"] = this.Tenant
	dst["deployment_name"] = this.Resource
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.From, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.To, dst)
}

func (this *PartitionReference) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	timestampFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Timestamp)
	hasInner = hasInner || len(timestampFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range timestampFields {
		res[k] = v
	}
	return res
}

func (this *PartitionReference) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Timestamp, dst)
}

func (this *GetSimlogsResponse) LogFields() map[string]string {
	return map[string]string{}
}

func (this *GetSimlogsResponse) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *ListRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	fromFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.From)
	hasInner = hasInner || len(fromFields) > 0
	toFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.To)
	hasInner = hasInner || len(toFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{
			"project_name":    this.Tenant,
			"deployment_name": this.Resource,
		}
	}
	// Merge all the field maps.
	res := map[string]string{}
	res["project_name"] = this.Tenant
	res["deployment_name"] = this.Resource
	for k, v := range fromFields {
		res[k] = v
	}
	for k, v := range toFields {
		res[k] = v
	}
	return res
}

func (this *ListRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	dst["project_name"] = this.Tenant
	dst["deployment_name"] = this.Resource
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.From, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.To, dst)
}
