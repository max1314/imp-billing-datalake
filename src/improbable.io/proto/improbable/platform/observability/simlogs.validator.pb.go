// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/platform/observability/simlogs.proto

package improbable_platform_observability

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/improbable-io/go-proto-logfields"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	_ "improbable.io/proto/improbable/ext/plugin/auth"
	math "math"
	regexp "regexp"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

var _regex_GetSimlogsRequest_Tenant = regexp.MustCompile(`^[a-z0-9_]{3,32}$`)
var _regex_GetSimlogsRequest_Resource = regexp.MustCompile(`^[a-z0-9_]{2,32}$`)

func (this *GetSimlogsRequest) Validate() error {
	if !_regex_GetSimlogsRequest_Tenant.MatchString(this.Tenant) {
		return github_com_mwitkow_go_proto_validators.FieldError("Tenant", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-z0-9_]{3,32}$"`, this.Tenant))
	}
	if !_regex_GetSimlogsRequest_Resource.MatchString(this.Resource) {
		return github_com_mwitkow_go_proto_validators.FieldError("Resource", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-z0-9_]{2,32}$"`, this.Resource))
	}
	if nil == this.From {
		return github_com_mwitkow_go_proto_validators.FieldError("From", fmt.Errorf("message must exist"))
	}
	if this.From != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.From); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("From", err)
		}
	}
	if nil == this.To {
		return github_com_mwitkow_go_proto_validators.FieldError("To", fmt.Errorf("message must exist"))
	}
	if this.To != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.To); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("To", err)
		}
	}
	return nil
}
func (this *PartitionReference) Validate() error {
	if this.Timestamp != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Timestamp); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Timestamp", err)
		}
	}
	return nil
}
func (this *GetSimlogsResponse) Validate() error {
	for _, item := range this.PartitionReferences {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("PartitionReferences", err)
			}
		}
	}
	return nil
}

var _regex_ListRequest_Tenant = regexp.MustCompile(`^[a-z0-9_]{3,32}$`)
var _regex_ListRequest_Resource = regexp.MustCompile(`^[a-z0-9_]{2,32}$`)

func (this *ListRequest) Validate() error {
	if !_regex_ListRequest_Tenant.MatchString(this.Tenant) {
		return github_com_mwitkow_go_proto_validators.FieldError("Tenant", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-z0-9_]{3,32}$"`, this.Tenant))
	}
	if !_regex_ListRequest_Resource.MatchString(this.Resource) {
		return github_com_mwitkow_go_proto_validators.FieldError("Resource", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-z0-9_]{2,32}$"`, this.Resource))
	}
	if nil == this.From {
		return github_com_mwitkow_go_proto_validators.FieldError("From", fmt.Errorf("message must exist"))
	}
	if this.From != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.From); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("From", err)
		}
	}
	if nil == this.To {
		return github_com_mwitkow_go_proto_validators.FieldError("To", fmt.Errorf("message must exist"))
	}
	if this.To != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.To); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("To", err)
		}
	}
	return nil
}
