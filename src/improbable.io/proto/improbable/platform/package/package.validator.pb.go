// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/platform/package/package.proto

package improbable_platform_package

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/improbable-io/go-proto-logfields"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
	regexp "regexp"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

var _regex_PackageId_Type = regexp.MustCompile(`^[a-zA-Z0-9_.-]{2,64}$`)
var _regex_PackageId_Name = regexp.MustCompile(`^[a-zA-Z0-9_.-]{2,64}$`)
var _regex_PackageId_Version = regexp.MustCompile(`^[a-zA-Z0-9_.-]{1,64}$`)

func (this *PackageId) Validate() error {
	if !_regex_PackageId_Type.MatchString(this.Type) {
		return github_com_mwitkow_go_proto_validators.FieldError("Type", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-zA-Z0-9_.-]{2,64}$"`, this.Type))
	}
	if !_regex_PackageId_Name.MatchString(this.Name) {
		return github_com_mwitkow_go_proto_validators.FieldError("Name", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-zA-Z0-9_.-]{2,64}$"`, this.Name))
	}
	if !_regex_PackageId_Version.MatchString(this.Version) {
		return github_com_mwitkow_go_proto_validators.FieldError("Version", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-zA-Z0-9_.-]{1,64}$"`, this.Version))
	}
	return nil
}
func (this *PackageCreationRequest) Validate() error {
	if nil == this.Id {
		return github_com_mwitkow_go_proto_validators.FieldError("Id", fmt.Errorf("message must exist"))
	}
	if this.Id != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Id); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Id", err)
		}
	}
	return nil
}
func (this *Package) Validate() error {
	if this.Id != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Id); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Id", err)
		}
	}
	if this.CreationTime != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CreationTime); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CreationTime", err)
		}
	}
	return nil
}
func (this *PackageUploadUrl) Validate() error {
	return nil
}
func (this *PackageListTypesResponse) Validate() error {
	return nil
}
func (this *PackageListNamesByTypeRequest) Validate() error {
	return nil
}
func (this *PackageListNamesByTypeResponse) Validate() error {
	return nil
}
func (this *PackageListVersionsByNameRequest) Validate() error {
	return nil
}
func (this *PackageListVersionsByNameResponse) Validate() error {
	return nil
}
func (this *PackageListPackagesRequest) Validate() error {
	return nil
}
func (this *PackageListPackagesWithMetadataRequest) Validate() error {
	return nil
}
func (this *PackageListPackagesWithMetadataResponse) Validate() error {
	if this.Package != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Package); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Package", err)
		}
	}
	return nil
}
