// Code generated by protoc-gen-go. DO NOT EDIT.
// source: improbable/platform/package/package.proto

package improbable_platform_package

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/improbable-io/go-proto-logfields"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Restriction int32

const (
	Restriction_UNKNOWN_RESTRICTION  Restriction = 0
	Restriction_UNRESTRICTED         Restriction = 1
	Restriction_PS4                  Restriction = 2
	Restriction_XBONE                Restriction = 3
	Restriction_RUNTIME_DEBUG        Restriction = 4
	Restriction_RUNTIME_PREVIEW      Restriction = 5
	Restriction_DEBUG                Restriction = 6
	Restriction_RUNTIME_UNRESTRICTED Restriction = 7
)

var Restriction_name = map[int32]string{
	0: "UNKNOWN_RESTRICTION",
	1: "UNRESTRICTED",
	2: "PS4",
	3: "XBONE",
	4: "RUNTIME_DEBUG",
	5: "RUNTIME_PREVIEW",
	6: "DEBUG",
	7: "RUNTIME_UNRESTRICTED",
}

var Restriction_value = map[string]int32{
	"UNKNOWN_RESTRICTION":  0,
	"UNRESTRICTED":         1,
	"PS4":                  2,
	"XBONE":                3,
	"RUNTIME_DEBUG":        4,
	"RUNTIME_PREVIEW":      5,
	"DEBUG":                6,
	"RUNTIME_UNRESTRICTED": 7,
}

func (x Restriction) String() string {
	return proto.EnumName(Restriction_name, int32(x))
}

func (Restriction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4c6e086a74411846, []int{0}
}

type PackageId struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Version              string   `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PackageId) Reset()         { *m = PackageId{} }
func (m *PackageId) String() string { return proto.CompactTextString(m) }
func (*PackageId) ProtoMessage()    {}
func (*PackageId) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c6e086a74411846, []int{0}
}

func (m *PackageId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PackageId.Unmarshal(m, b)
}
func (m *PackageId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PackageId.Marshal(b, m, deterministic)
}
func (m *PackageId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PackageId.Merge(m, src)
}
func (m *PackageId) XXX_Size() int {
	return xxx_messageInfo_PackageId.Size(m)
}
func (m *PackageId) XXX_DiscardUnknown() {
	xxx_messageInfo_PackageId.DiscardUnknown(m)
}

var xxx_messageInfo_PackageId proto.InternalMessageInfo

func (m *PackageId) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *PackageId) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PackageId) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type PackageCreationRequest struct {
	Id                   *PackageId  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Md5                  string      `protobuf:"bytes,2,opt,name=md5,proto3" json:"md5,omitempty"`
	SdkMinVersion        string      `protobuf:"bytes,3,opt,name=sdk_min_version,json=sdkMinVersion,proto3" json:"sdk_min_version,omitempty"` // Deprecated: Do not use.
	Restriction          Restriction `protobuf:"varint,4,opt,name=restriction,proto3,enum=improbable.platform.package.Restriction" json:"restriction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PackageCreationRequest) Reset()         { *m = PackageCreationRequest{} }
func (m *PackageCreationRequest) String() string { return proto.CompactTextString(m) }
func (*PackageCreationRequest) ProtoMessage()    {}
func (*PackageCreationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c6e086a74411846, []int{1}
}

func (m *PackageCreationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PackageCreationRequest.Unmarshal(m, b)
}
func (m *PackageCreationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PackageCreationRequest.Marshal(b, m, deterministic)
}
func (m *PackageCreationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PackageCreationRequest.Merge(m, src)
}
func (m *PackageCreationRequest) XXX_Size() int {
	return xxx_messageInfo_PackageCreationRequest.Size(m)
}
func (m *PackageCreationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PackageCreationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PackageCreationRequest proto.InternalMessageInfo

func (m *PackageCreationRequest) GetId() *PackageId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *PackageCreationRequest) GetMd5() string {
	if m != nil {
		return m.Md5
	}
	return ""
}

// Deprecated: Do not use.
func (m *PackageCreationRequest) GetSdkMinVersion() string {
	if m != nil {
		return m.SdkMinVersion
	}
	return ""
}

func (m *PackageCreationRequest) GetRestriction() Restriction {
	if m != nil {
		return m.Restriction
	}
	return Restriction_UNKNOWN_RESTRICTION
}

type Package struct {
	Id                   *PackageId           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreationTime         *timestamp.Timestamp `protobuf:"bytes,2,opt,name=creation_time,json=creationTime,proto3" json:"creation_time,omitempty"`
	CreatorEmail         string               `protobuf:"bytes,3,opt,name=creator_email,json=creatorEmail,proto3" json:"creator_email,omitempty"`
	Md5                  string               `protobuf:"bytes,4,opt,name=md5,proto3" json:"md5,omitempty"`
	DownloadUrl          string               `protobuf:"bytes,5,opt,name=download_url,json=downloadUrl,proto3" json:"download_url,omitempty"`
	SdkMinVersion        string               `protobuf:"bytes,6,opt,name=sdk_min_version,json=sdkMinVersion,proto3" json:"sdk_min_version,omitempty"` // Deprecated: Do not use.
	Restriction          Restriction          `protobuf:"varint,7,opt,name=restriction,proto3,enum=improbable.platform.package.Restriction" json:"restriction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Package) Reset()         { *m = Package{} }
func (m *Package) String() string { return proto.CompactTextString(m) }
func (*Package) ProtoMessage()    {}
func (*Package) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c6e086a74411846, []int{2}
}

func (m *Package) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Package.Unmarshal(m, b)
}
func (m *Package) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Package.Marshal(b, m, deterministic)
}
func (m *Package) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Package.Merge(m, src)
}
func (m *Package) XXX_Size() int {
	return xxx_messageInfo_Package.Size(m)
}
func (m *Package) XXX_DiscardUnknown() {
	xxx_messageInfo_Package.DiscardUnknown(m)
}

var xxx_messageInfo_Package proto.InternalMessageInfo

func (m *Package) GetId() *PackageId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Package) GetCreationTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreationTime
	}
	return nil
}

func (m *Package) GetCreatorEmail() string {
	if m != nil {
		return m.CreatorEmail
	}
	return ""
}

func (m *Package) GetMd5() string {
	if m != nil {
		return m.Md5
	}
	return ""
}

func (m *Package) GetDownloadUrl() string {
	if m != nil {
		return m.DownloadUrl
	}
	return ""
}

// Deprecated: Do not use.
func (m *Package) GetSdkMinVersion() string {
	if m != nil {
		return m.SdkMinVersion
	}
	return ""
}

func (m *Package) GetRestriction() Restriction {
	if m != nil {
		return m.Restriction
	}
	return Restriction_UNKNOWN_RESTRICTION
}

type PackageUploadUrl struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PackageUploadUrl) Reset()         { *m = PackageUploadUrl{} }
func (m *PackageUploadUrl) String() string { return proto.CompactTextString(m) }
func (*PackageUploadUrl) ProtoMessage()    {}
func (*PackageUploadUrl) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c6e086a74411846, []int{3}
}

func (m *PackageUploadUrl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PackageUploadUrl.Unmarshal(m, b)
}
func (m *PackageUploadUrl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PackageUploadUrl.Marshal(b, m, deterministic)
}
func (m *PackageUploadUrl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PackageUploadUrl.Merge(m, src)
}
func (m *PackageUploadUrl) XXX_Size() int {
	return xxx_messageInfo_PackageUploadUrl.Size(m)
}
func (m *PackageUploadUrl) XXX_DiscardUnknown() {
	xxx_messageInfo_PackageUploadUrl.DiscardUnknown(m)
}

var xxx_messageInfo_PackageUploadUrl proto.InternalMessageInfo

func (m *PackageUploadUrl) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type PackageListTypesResponse struct {
	Types                []string `protobuf:"bytes,1,rep,name=types,proto3" json:"types,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PackageListTypesResponse) Reset()         { *m = PackageListTypesResponse{} }
func (m *PackageListTypesResponse) String() string { return proto.CompactTextString(m) }
func (*PackageListTypesResponse) ProtoMessage()    {}
func (*PackageListTypesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c6e086a74411846, []int{4}
}

func (m *PackageListTypesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PackageListTypesResponse.Unmarshal(m, b)
}
func (m *PackageListTypesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PackageListTypesResponse.Marshal(b, m, deterministic)
}
func (m *PackageListTypesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PackageListTypesResponse.Merge(m, src)
}
func (m *PackageListTypesResponse) XXX_Size() int {
	return xxx_messageInfo_PackageListTypesResponse.Size(m)
}
func (m *PackageListTypesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PackageListTypesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PackageListTypesResponse proto.InternalMessageInfo

func (m *PackageListTypesResponse) GetTypes() []string {
	if m != nil {
		return m.Types
	}
	return nil
}

type PackageListNamesByTypeRequest struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PackageListNamesByTypeRequest) Reset()         { *m = PackageListNamesByTypeRequest{} }
func (m *PackageListNamesByTypeRequest) String() string { return proto.CompactTextString(m) }
func (*PackageListNamesByTypeRequest) ProtoMessage()    {}
func (*PackageListNamesByTypeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c6e086a74411846, []int{5}
}

func (m *PackageListNamesByTypeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PackageListNamesByTypeRequest.Unmarshal(m, b)
}
func (m *PackageListNamesByTypeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PackageListNamesByTypeRequest.Marshal(b, m, deterministic)
}
func (m *PackageListNamesByTypeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PackageListNamesByTypeRequest.Merge(m, src)
}
func (m *PackageListNamesByTypeRequest) XXX_Size() int {
	return xxx_messageInfo_PackageListNamesByTypeRequest.Size(m)
}
func (m *PackageListNamesByTypeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PackageListNamesByTypeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PackageListNamesByTypeRequest proto.InternalMessageInfo

func (m *PackageListNamesByTypeRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type PackageListNamesByTypeResponse struct {
	Names                []string `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PackageListNamesByTypeResponse) Reset()         { *m = PackageListNamesByTypeResponse{} }
func (m *PackageListNamesByTypeResponse) String() string { return proto.CompactTextString(m) }
func (*PackageListNamesByTypeResponse) ProtoMessage()    {}
func (*PackageListNamesByTypeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c6e086a74411846, []int{6}
}

func (m *PackageListNamesByTypeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PackageListNamesByTypeResponse.Unmarshal(m, b)
}
func (m *PackageListNamesByTypeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PackageListNamesByTypeResponse.Marshal(b, m, deterministic)
}
func (m *PackageListNamesByTypeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PackageListNamesByTypeResponse.Merge(m, src)
}
func (m *PackageListNamesByTypeResponse) XXX_Size() int {
	return xxx_messageInfo_PackageListNamesByTypeResponse.Size(m)
}
func (m *PackageListNamesByTypeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PackageListNamesByTypeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PackageListNamesByTypeResponse proto.InternalMessageInfo

func (m *PackageListNamesByTypeResponse) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

type PackageListVersionsByNameRequest struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PackageListVersionsByNameRequest) Reset()         { *m = PackageListVersionsByNameRequest{} }
func (m *PackageListVersionsByNameRequest) String() string { return proto.CompactTextString(m) }
func (*PackageListVersionsByNameRequest) ProtoMessage()    {}
func (*PackageListVersionsByNameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c6e086a74411846, []int{7}
}

func (m *PackageListVersionsByNameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PackageListVersionsByNameRequest.Unmarshal(m, b)
}
func (m *PackageListVersionsByNameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PackageListVersionsByNameRequest.Marshal(b, m, deterministic)
}
func (m *PackageListVersionsByNameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PackageListVersionsByNameRequest.Merge(m, src)
}
func (m *PackageListVersionsByNameRequest) XXX_Size() int {
	return xxx_messageInfo_PackageListVersionsByNameRequest.Size(m)
}
func (m *PackageListVersionsByNameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PackageListVersionsByNameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PackageListVersionsByNameRequest proto.InternalMessageInfo

func (m *PackageListVersionsByNameRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *PackageListVersionsByNameRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type PackageListVersionsByNameResponse struct {
	Versions             []string `protobuf:"bytes,1,rep,name=versions,proto3" json:"versions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PackageListVersionsByNameResponse) Reset()         { *m = PackageListVersionsByNameResponse{} }
func (m *PackageListVersionsByNameResponse) String() string { return proto.CompactTextString(m) }
func (*PackageListVersionsByNameResponse) ProtoMessage()    {}
func (*PackageListVersionsByNameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c6e086a74411846, []int{8}
}

func (m *PackageListVersionsByNameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PackageListVersionsByNameResponse.Unmarshal(m, b)
}
func (m *PackageListVersionsByNameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PackageListVersionsByNameResponse.Marshal(b, m, deterministic)
}
func (m *PackageListVersionsByNameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PackageListVersionsByNameResponse.Merge(m, src)
}
func (m *PackageListVersionsByNameResponse) XXX_Size() int {
	return xxx_messageInfo_PackageListVersionsByNameResponse.Size(m)
}
func (m *PackageListVersionsByNameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PackageListVersionsByNameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PackageListVersionsByNameResponse proto.InternalMessageInfo

func (m *PackageListVersionsByNameResponse) GetVersions() []string {
	if m != nil {
		return m.Versions
	}
	return nil
}

type PackageListPackagesRequest struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Version              string   `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PackageListPackagesRequest) Reset()         { *m = PackageListPackagesRequest{} }
func (m *PackageListPackagesRequest) String() string { return proto.CompactTextString(m) }
func (*PackageListPackagesRequest) ProtoMessage()    {}
func (*PackageListPackagesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c6e086a74411846, []int{9}
}

func (m *PackageListPackagesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PackageListPackagesRequest.Unmarshal(m, b)
}
func (m *PackageListPackagesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PackageListPackagesRequest.Marshal(b, m, deterministic)
}
func (m *PackageListPackagesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PackageListPackagesRequest.Merge(m, src)
}
func (m *PackageListPackagesRequest) XXX_Size() int {
	return xxx_messageInfo_PackageListPackagesRequest.Size(m)
}
func (m *PackageListPackagesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PackageListPackagesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PackageListPackagesRequest proto.InternalMessageInfo

func (m *PackageListPackagesRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *PackageListPackagesRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PackageListPackagesRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type PackageListPackagesWithMetadataRequest struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Version              string   `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PackageListPackagesWithMetadataRequest) Reset() {
	*m = PackageListPackagesWithMetadataRequest{}
}
func (m *PackageListPackagesWithMetadataRequest) String() string { return proto.CompactTextString(m) }
func (*PackageListPackagesWithMetadataRequest) ProtoMessage()    {}
func (*PackageListPackagesWithMetadataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c6e086a74411846, []int{10}
}

func (m *PackageListPackagesWithMetadataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PackageListPackagesWithMetadataRequest.Unmarshal(m, b)
}
func (m *PackageListPackagesWithMetadataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PackageListPackagesWithMetadataRequest.Marshal(b, m, deterministic)
}
func (m *PackageListPackagesWithMetadataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PackageListPackagesWithMetadataRequest.Merge(m, src)
}
func (m *PackageListPackagesWithMetadataRequest) XXX_Size() int {
	return xxx_messageInfo_PackageListPackagesWithMetadataRequest.Size(m)
}
func (m *PackageListPackagesWithMetadataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PackageListPackagesWithMetadataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PackageListPackagesWithMetadataRequest proto.InternalMessageInfo

func (m *PackageListPackagesWithMetadataRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *PackageListPackagesWithMetadataRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PackageListPackagesWithMetadataRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type PackageListPackagesWithMetadataResponse struct {
	Package              *Package `protobuf:"bytes,1,opt,name=package,proto3" json:"package,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PackageListPackagesWithMetadataResponse) Reset() {
	*m = PackageListPackagesWithMetadataResponse{}
}
func (m *PackageListPackagesWithMetadataResponse) String() string { return proto.CompactTextString(m) }
func (*PackageListPackagesWithMetadataResponse) ProtoMessage()    {}
func (*PackageListPackagesWithMetadataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c6e086a74411846, []int{11}
}

func (m *PackageListPackagesWithMetadataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PackageListPackagesWithMetadataResponse.Unmarshal(m, b)
}
func (m *PackageListPackagesWithMetadataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PackageListPackagesWithMetadataResponse.Marshal(b, m, deterministic)
}
func (m *PackageListPackagesWithMetadataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PackageListPackagesWithMetadataResponse.Merge(m, src)
}
func (m *PackageListPackagesWithMetadataResponse) XXX_Size() int {
	return xxx_messageInfo_PackageListPackagesWithMetadataResponse.Size(m)
}
func (m *PackageListPackagesWithMetadataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PackageListPackagesWithMetadataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PackageListPackagesWithMetadataResponse proto.InternalMessageInfo

func (m *PackageListPackagesWithMetadataResponse) GetPackage() *Package {
	if m != nil {
		return m.Package
	}
	return nil
}

func init() {
	proto.RegisterEnum("improbable.platform.package.Restriction", Restriction_name, Restriction_value)
	proto.RegisterType((*PackageId)(nil), "improbable.platform.package.PackageId")
	proto.RegisterType((*PackageCreationRequest)(nil), "improbable.platform.package.PackageCreationRequest")
	proto.RegisterType((*Package)(nil), "improbable.platform.package.Package")
	proto.RegisterType((*PackageUploadUrl)(nil), "improbable.platform.package.PackageUploadUrl")
	proto.RegisterType((*PackageListTypesResponse)(nil), "improbable.platform.package.PackageListTypesResponse")
	proto.RegisterType((*PackageListNamesByTypeRequest)(nil), "improbable.platform.package.PackageListNamesByTypeRequest")
	proto.RegisterType((*PackageListNamesByTypeResponse)(nil), "improbable.platform.package.PackageListNamesByTypeResponse")
	proto.RegisterType((*PackageListVersionsByNameRequest)(nil), "improbable.platform.package.PackageListVersionsByNameRequest")
	proto.RegisterType((*PackageListVersionsByNameResponse)(nil), "improbable.platform.package.PackageListVersionsByNameResponse")
	proto.RegisterType((*PackageListPackagesRequest)(nil), "improbable.platform.package.PackageListPackagesRequest")
	proto.RegisterType((*PackageListPackagesWithMetadataRequest)(nil), "improbable.platform.package.PackageListPackagesWithMetadataRequest")
	proto.RegisterType((*PackageListPackagesWithMetadataResponse)(nil), "improbable.platform.package.PackageListPackagesWithMetadataResponse")
}

func init() {
	proto.RegisterFile("improbable/platform/package/package.proto", fileDescriptor_4c6e086a74411846)
}

var fileDescriptor_4c6e086a74411846 = []byte{
	// 1077 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0x5f, 0x4f, 0xdb, 0x56,
	0x14, 0xe7, 0x26, 0x90, 0x8c, 0x43, 0x00, 0xf7, 0xc2, 0x98, 0x65, 0x18, 0x50, 0x0f, 0x31, 0x8a,
	0x1a, 0x1b, 0x42, 0xcb, 0xb6, 0x56, 0xa3, 0x5a, 0x20, 0xaa, 0x68, 0x47, 0x40, 0x86, 0x94, 0x69,
	0xd3, 0x1a, 0x19, 0x7c, 0x49, 0xef, 0xb0, 0x7d, 0x3d, 0xdb, 0x80, 0x58, 0xc5, 0xc3, 0xf6, 0xb4,
	0xf7, 0x3d, 0xed, 0xb5, 0x0f, 0x9b, 0xa6, 0x7e, 0x80, 0x7e, 0x90, 0xed, 0xbd, 0x13, 0xda, 0x07,
	0x99, 0x6c, 0x5f, 0x27, 0x26, 0x84, 0xd4, 0xb4, 0x7d, 0xca, 0xf5, 0x3d, 0xe7, 0xfc, 0xce, 0xef,
	0xfc, 0xbd, 0x81, 0x5b, 0xd4, 0x72, 0x5c, 0xb6, 0xa7, 0xef, 0x99, 0x44, 0x75, 0x4c, 0xdd, 0x3f,
	0x60, 0xae, 0xa5, 0x3a, 0xfa, 0xfe, 0xa1, 0xde, 0x20, 0xf1, 0xaf, 0xe2, 0xb8, 0xcc, 0x67, 0x78,
	0xbc, 0xa5, 0xaa, 0xc4, 0xaa, 0x0a, 0x57, 0x91, 0xee, 0x37, 0xa8, 0xff, 0xec, 0x68, 0x4f, 0xd9,
	0x67, 0x96, 0xda, 0xd2, 0x2b, 0x52, 0xa6, 0x36, 0x58, 0x31, 0xb4, 0x2f, 0x9a, 0xac, 0x71, 0x40,
	0x89, 0x69, 0x78, 0x6a, 0xf3, 0x14, 0x21, 0x4b, 0x13, 0x0d, 0xc6, 0x1a, 0x26, 0x51, 0x75, 0x87,
	0xaa, 0xba, 0x6d, 0x33, 0x5f, 0xf7, 0x29, 0xb3, 0x63, 0xe9, 0x38, 0x97, 0x86, 0x5f, 0x7b, 0x47,
	0x07, 0x2a, 0xb1, 0x1c, 0xff, 0x94, 0x0b, 0xa7, 0xda, 0x85, 0x3e, 0xb5, 0x88, 0xe7, 0xeb, 0x96,
	0xc3, 0x15, 0x96, 0x13, 0xc4, 0xac, 0x13, 0xea, 0x1f, 0xb2, 0x93, 0x16, 0xa5, 0x63, 0xdd, 0xa4,
	0x86, 0xee, 0x33, 0xd7, 0x53, 0x9b, 0xc7, 0xc8, 0x4e, 0xfe, 0x17, 0x41, 0xff, 0x56, 0x14, 0xdc,
	0xba, 0x81, 0xcb, 0xd0, 0xeb, 0x9f, 0x3a, 0x44, 0x44, 0xd3, 0x68, 0xae, 0xbf, 0xac, 0xbc, 0x78,
	0x39, 0x39, 0x04, 0x05, 0x1e, 0x7b, 0x3d, 0x90, 0x9c, 0xbf, 0x9e, 0x12, 0x61, 0xec, 0xe9, 0x77,
	0x7a, 0xf1, 0xa7, 0xaf, 0x8a, 0xdf, 0x2e, 0x14, 0xbf, 0xa8, 0x2b, 0xc5, 0xef, 0x9f, 0x97, 0x6e,
	0x2f, 0xdf, 0x39, 0x9b, 0xd1, 0x42, 0xdb, 0x00, 0xc3, 0xd6, 0x2d, 0x22, 0x66, 0x3a, 0x61, 0x04,
	0x92, 0xee, 0x18, 0x81, 0x06, 0x7e, 0x0c, 0xf9, 0x63, 0xe2, 0x7a, 0x94, 0xd9, 0x62, 0x36, 0x84,
	0x59, 0x7c, 0xf1, 0x72, 0xf2, 0x06, 0x0c, 0xc7, 0x30, 0x5c, 0xd8, 0x19, 0x69, 0x31, 0x42, 0x8a,
	0x11, 0xe4, 0x73, 0x04, 0x63, 0x3c, 0xc4, 0x55, 0x97, 0x84, 0x39, 0xd7, 0xc8, 0x8f, 0x47, 0xc4,
	0xf3, 0xf1, 0x0a, 0x64, 0xa8, 0x11, 0x46, 0x3b, 0x50, 0x9a, 0x55, 0xba, 0x14, 0x5e, 0x69, 0xe6,
	0xa8, 0x9c, 0x3b, 0x7f, 0x3d, 0x95, 0x99, 0x46, 0x5a, 0x86, 0x1a, 0x58, 0x80, 0xac, 0x65, 0xdc,
	0x8d, 0x42, 0xd5, 0x82, 0x23, 0x9e, 0x87, 0x61, 0xcf, 0x38, 0xac, 0x5b, 0xd4, 0xae, 0x5f, 0x8c,
	0x20, 0x23, 0x22, 0x6d, 0xd0, 0x33, 0x0e, 0x37, 0xa8, 0xfd, 0x24, 0x12, 0xe0, 0x47, 0x30, 0xe0,
	0x12, 0xcf, 0x77, 0xe9, 0x7e, 0xc0, 0x49, 0xec, 0x9d, 0x46, 0x73, 0x43, 0xa5, 0xb9, 0xae, 0x34,
	0xb4, 0x96, 0xbe, 0x96, 0x34, 0x96, 0xff, 0xc9, 0x40, 0x9e, 0x73, 0xc4, 0xcb, 0xd7, 0x8f, 0x2a,
	0x8c, 0xe6, 0x01, 0x0c, 0xee, 0xf3, 0x04, 0xd5, 0x83, 0xfe, 0x0a, 0xe3, 0x1a, 0x28, 0x49, 0x4a,
	0xd4, 0x7c, 0x4a, 0xdc, 0x7c, 0xca, 0x4e, 0xdc, 0x7c, 0x5a, 0x21, 0x36, 0x08, 0xae, 0xf0, 0x27,
	0x1c, 0x80, 0xb9, 0x75, 0x62, 0xe9, 0xd4, 0x8c, 0x42, 0xe7, 0x4a, 0xcc, 0xad, 0x04, 0x77, 0x71,
	0xce, 0x7a, 0x5b, 0x39, 0xbb, 0x09, 0x05, 0x83, 0x9d, 0xd8, 0x26, 0xd3, 0x8d, 0xfa, 0x91, 0x6b,
	0x8a, 0x7d, 0xa1, 0x68, 0x20, 0xbe, 0xab, 0xb9, 0x66, 0xa7, 0xb4, 0xe6, 0x52, 0xa6, 0x35, 0xff,
	0x2e, 0x69, 0x9d, 0x01, 0x81, 0xe7, 0xa8, 0xe6, 0xc4, 0x5c, 0x04, 0xc8, 0x06, 0x2c, 0x51, 0x14,
	0xc0, 0x91, 0x6b, 0xca, 0x0b, 0x20, 0x72, 0xad, 0xaf, 0xa9, 0xe7, 0xef, 0x9c, 0x3a, 0xc4, 0xd3,
	0x88, 0xe7, 0x30, 0xdb, 0x23, 0x78, 0x14, 0xfa, 0x82, 0xb1, 0xf0, 0x44, 0x34, 0x9d, 0x9d, 0xeb,
	0xd7, 0xa2, 0x0f, 0x79, 0x09, 0x3e, 0x4e, 0x58, 0x54, 0x75, 0x8b, 0x78, 0xe5, 0xd3, 0xc0, 0x30,
	0xee, 0x4c, 0x9c, 0x9c, 0xc4, 0x68, 0xb2, 0xe4, 0x65, 0x98, 0xbc, 0xca, 0xa8, 0xe5, 0x2c, 0x98,
	0x9f, 0xa6, 0xb3, 0xf0, 0x43, 0x7e, 0x04, 0xd3, 0x09, 0x3b, 0x9e, 0x26, 0xaf, 0x7c, 0x1a, 0x20,
	0x74, 0xf1, 0x17, 0xdc, 0xb5, 0x26, 0x39, 0x9a, 0x4c, 0xf9, 0x01, 0xdc, 0xec, 0x82, 0xc5, 0x69,
	0x48, 0xf0, 0x01, 0xaf, 0x52, 0xcc, 0xa4, 0xf9, 0x2d, 0x3f, 0x05, 0x29, 0x01, 0xc0, 0x8f, 0xde,
	0x35, 0x69, 0x60, 0xb1, 0x6d, 0x41, 0xb4, 0xa6, 0xfd, 0x07, 0x98, 0xed, 0x80, 0xbf, 0x4b, 0xfd,
	0x67, 0x1b, 0xc4, 0xd7, 0x0d, 0xdd, 0xd7, 0xdf, 0x9f, 0x2f, 0x0a, 0x9f, 0xbe, 0xd1, 0x17, 0x4f,
	0xc9, 0x0a, 0xe4, 0x79, 0xb3, 0xf1, 0xc1, 0x9c, 0x49, 0x33, 0x98, 0x5a, 0x6c, 0x34, 0xff, 0x3b,
	0x82, 0x81, 0x44, 0x97, 0xe2, 0x8f, 0x60, 0xa4, 0x56, 0x7d, 0x5c, 0xdd, 0xdc, 0xad, 0xd6, 0xb5,
	0xca, 0xf6, 0x8e, 0xb6, 0xbe, 0xba, 0xb3, 0xbe, 0x59, 0x15, 0x7a, 0xb0, 0x00, 0x85, 0x5a, 0x35,
	0xbe, 0xaa, 0xac, 0x09, 0x08, 0xe7, 0x21, 0xbb, 0xb5, 0x7d, 0x47, 0xc8, 0xe0, 0x7e, 0xe8, 0xfb,
	0xa6, 0xbc, 0x59, 0xad, 0x08, 0x59, 0x7c, 0x03, 0x06, 0xb5, 0x5a, 0x75, 0x67, 0x7d, 0xa3, 0x52,
	0x5f, 0xab, 0x94, 0x6b, 0x0f, 0x85, 0x5e, 0x3c, 0x02, 0xc3, 0xf1, 0xd5, 0x96, 0x56, 0x79, 0xb2,
	0x5e, 0xd9, 0x15, 0xfa, 0x02, 0x93, 0x48, 0x9e, 0xc3, 0x22, 0x8c, 0xc6, 0xf2, 0x0b, 0x0e, 0xf2,
	0xa5, 0x57, 0x00, 0x43, 0x9c, 0xf0, 0x36, 0x71, 0x8f, 0xe9, 0x3e, 0xc1, 0x7f, 0x20, 0xc8, 0x85,
	0xcb, 0x96, 0xe0, 0xa5, 0x34, 0x81, 0xb6, 0x2d, 0x66, 0xa9, 0x98, 0xc6, 0xa8, 0x39, 0x92, 0xf2,
	0xe7, 0xbf, 0xfc, 0xfd, 0xdf, 0x6f, 0x99, 0x92, 0x54, 0x8c, 0xdf, 0x72, 0x4f, 0x3d, 0x5e, 0x54,
	0x9f, 0x53, 0x43, 0x09, 0xaa, 0x7a, 0x16, 0x9e, 0x82, 0x5a, 0x46, 0x27, 0x5e, 0xbe, 0xb3, 0x7b,
	0x68, 0x1e, 0xff, 0x8a, 0x20, 0xbf, 0xca, 0xec, 0x03, 0xea, 0x5a, 0x38, 0xe5, 0xae, 0x94, 0x52,
	0x95, 0x4e, 0x56, 0x43, 0x4e, 0xb7, 0xe4, 0x99, 0x8b, 0x9c, 0x38, 0x21, 0xce, 0x26, 0x49, 0xe5,
	0x67, 0x04, 0xd9, 0x87, 0xc4, 0x7f, 0xcf, 0x34, 0x6e, 0x87, 0x34, 0x66, 0x71, 0x2a, 0x1a, 0xf8,
	0x18, 0x72, 0x6b, 0xc4, 0x24, 0x3e, 0x49, 0xcd, 0x62, 0xec, 0xd2, 0xeb, 0x50, 0x09, 0xfe, 0xb7,
	0xc4, 0x7e, 0xe7, 0xd3, 0xf9, 0x75, 0xa0, 0xbf, 0xb9, 0x3a, 0xf1, 0x15, 0x90, 0xd2, 0xdd, 0x34,
	0x94, 0x2e, 0x6d, 0x60, 0x79, 0x34, 0x64, 0x32, 0x84, 0x0b, 0x49, 0x26, 0xf8, 0x4f, 0x04, 0xc3,
	0x6d, 0x6b, 0x14, 0xdf, 0x4b, 0xeb, 0xe0, 0xf2, 0xc2, 0x96, 0xee, 0xbf, 0x95, 0x2d, 0xa7, 0x38,
	0x1e, 0x52, 0xfc, 0x10, 0x8f, 0x74, 0x48, 0x16, 0x7e, 0x85, 0x00, 0x5f, 0x5e, 0xb6, 0xf8, 0xcb,
	0xb4, 0x0e, 0x3b, 0x2e, 0x7c, 0x69, 0xe5, 0x6d, 0xcd, 0x39, 0x65, 0x39, 0xa4, 0x3c, 0x81, 0xa5,
	0xab, 0xeb, 0x8b, 0x3d, 0x28, 0x24, 0x17, 0x23, 0xfe, 0x2c, 0xad, 0xcf, 0xb6, 0x67, 0x41, 0x4a,
	0xd9, 0x8c, 0x72, 0xcf, 0x02, 0xc2, 0x7f, 0x21, 0x10, 0xaf, 0x5a, 0xc7, 0x78, 0xf5, 0xba, 0x0c,
	0x3a, 0x3c, 0x1c, 0xd2, 0xda, 0xbb, 0x81, 0xf0, 0x04, 0xf6, 0x2c, 0xa0, 0xf2, 0x24, 0x4c, 0x74,
	0x81, 0xf2, 0xf6, 0x72, 0xe1, 0x04, 0x2c, 0xfd, 0x1f, 0x00, 0x00, 0xff, 0xff, 0xbf, 0x4e, 0xd2,
	0xfb, 0xbf, 0x0c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PackageServiceClient is the client API for PackageService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PackageServiceClient interface {
	Create(ctx context.Context, in *PackageCreationRequest, opts ...grpc.CallOption) (*PackageUploadUrl, error)
	Confirm(ctx context.Context, in *PackageId, opts ...grpc.CallOption) (*Package, error)
	Get(ctx context.Context, in *PackageId, opts ...grpc.CallOption) (*Package, error)
	Delete(ctx context.Context, in *PackageId, opts ...grpc.CallOption) (*empty.Empty, error)
	ListTypes(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*PackageListTypesResponse, error)
	ListNamesByType(ctx context.Context, in *PackageListNamesByTypeRequest, opts ...grpc.CallOption) (*PackageListNamesByTypeResponse, error)
	ListVersionsByName(ctx context.Context, in *PackageListVersionsByNameRequest, opts ...grpc.CallOption) (*PackageListVersionsByNameResponse, error)
	ListPackages(ctx context.Context, in *PackageListPackagesRequest, opts ...grpc.CallOption) (PackageService_ListPackagesClient, error)
	ListPackagesWithMetadata(ctx context.Context, in *PackageListPackagesWithMetadataRequest, opts ...grpc.CallOption) (PackageService_ListPackagesWithMetadataClient, error)
}

type packageServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPackageServiceClient(cc grpc.ClientConnInterface) PackageServiceClient {
	return &packageServiceClient{cc}
}

func (c *packageServiceClient) Create(ctx context.Context, in *PackageCreationRequest, opts ...grpc.CallOption) (*PackageUploadUrl, error) {
	out := new(PackageUploadUrl)
	err := c.cc.Invoke(ctx, "/improbable.platform.package.PackageService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *packageServiceClient) Confirm(ctx context.Context, in *PackageId, opts ...grpc.CallOption) (*Package, error) {
	out := new(Package)
	err := c.cc.Invoke(ctx, "/improbable.platform.package.PackageService/Confirm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *packageServiceClient) Get(ctx context.Context, in *PackageId, opts ...grpc.CallOption) (*Package, error) {
	out := new(Package)
	err := c.cc.Invoke(ctx, "/improbable.platform.package.PackageService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *packageServiceClient) Delete(ctx context.Context, in *PackageId, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/improbable.platform.package.PackageService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *packageServiceClient) ListTypes(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*PackageListTypesResponse, error) {
	out := new(PackageListTypesResponse)
	err := c.cc.Invoke(ctx, "/improbable.platform.package.PackageService/ListTypes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *packageServiceClient) ListNamesByType(ctx context.Context, in *PackageListNamesByTypeRequest, opts ...grpc.CallOption) (*PackageListNamesByTypeResponse, error) {
	out := new(PackageListNamesByTypeResponse)
	err := c.cc.Invoke(ctx, "/improbable.platform.package.PackageService/ListNamesByType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *packageServiceClient) ListVersionsByName(ctx context.Context, in *PackageListVersionsByNameRequest, opts ...grpc.CallOption) (*PackageListVersionsByNameResponse, error) {
	out := new(PackageListVersionsByNameResponse)
	err := c.cc.Invoke(ctx, "/improbable.platform.package.PackageService/ListVersionsByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *packageServiceClient) ListPackages(ctx context.Context, in *PackageListPackagesRequest, opts ...grpc.CallOption) (PackageService_ListPackagesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PackageService_serviceDesc.Streams[0], "/improbable.platform.package.PackageService/ListPackages", opts...)
	if err != nil {
		return nil, err
	}
	x := &packageServiceListPackagesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type PackageService_ListPackagesClient interface {
	Recv() (*PackageId, error)
	grpc.ClientStream
}

type packageServiceListPackagesClient struct {
	grpc.ClientStream
}

func (x *packageServiceListPackagesClient) Recv() (*PackageId, error) {
	m := new(PackageId)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *packageServiceClient) ListPackagesWithMetadata(ctx context.Context, in *PackageListPackagesWithMetadataRequest, opts ...grpc.CallOption) (PackageService_ListPackagesWithMetadataClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PackageService_serviceDesc.Streams[1], "/improbable.platform.package.PackageService/ListPackagesWithMetadata", opts...)
	if err != nil {
		return nil, err
	}
	x := &packageServiceListPackagesWithMetadataClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type PackageService_ListPackagesWithMetadataClient interface {
	Recv() (*PackageListPackagesWithMetadataResponse, error)
	grpc.ClientStream
}

type packageServiceListPackagesWithMetadataClient struct {
	grpc.ClientStream
}

func (x *packageServiceListPackagesWithMetadataClient) Recv() (*PackageListPackagesWithMetadataResponse, error) {
	m := new(PackageListPackagesWithMetadataResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// PackageServiceServer is the server API for PackageService service.
type PackageServiceServer interface {
	Create(context.Context, *PackageCreationRequest) (*PackageUploadUrl, error)
	Confirm(context.Context, *PackageId) (*Package, error)
	Get(context.Context, *PackageId) (*Package, error)
	Delete(context.Context, *PackageId) (*empty.Empty, error)
	ListTypes(context.Context, *empty.Empty) (*PackageListTypesResponse, error)
	ListNamesByType(context.Context, *PackageListNamesByTypeRequest) (*PackageListNamesByTypeResponse, error)
	ListVersionsByName(context.Context, *PackageListVersionsByNameRequest) (*PackageListVersionsByNameResponse, error)
	ListPackages(*PackageListPackagesRequest, PackageService_ListPackagesServer) error
	ListPackagesWithMetadata(*PackageListPackagesWithMetadataRequest, PackageService_ListPackagesWithMetadataServer) error
}

// UnimplementedPackageServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPackageServiceServer struct {
}

func (*UnimplementedPackageServiceServer) Create(ctx context.Context, req *PackageCreationRequest) (*PackageUploadUrl, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedPackageServiceServer) Confirm(ctx context.Context, req *PackageId) (*Package, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Confirm not implemented")
}
func (*UnimplementedPackageServiceServer) Get(ctx context.Context, req *PackageId) (*Package, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedPackageServiceServer) Delete(ctx context.Context, req *PackageId) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedPackageServiceServer) ListTypes(ctx context.Context, req *empty.Empty) (*PackageListTypesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListTypes not implemented")
}
func (*UnimplementedPackageServiceServer) ListNamesByType(ctx context.Context, req *PackageListNamesByTypeRequest) (*PackageListNamesByTypeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNamesByType not implemented")
}
func (*UnimplementedPackageServiceServer) ListVersionsByName(ctx context.Context, req *PackageListVersionsByNameRequest) (*PackageListVersionsByNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListVersionsByName not implemented")
}
func (*UnimplementedPackageServiceServer) ListPackages(req *PackageListPackagesRequest, srv PackageService_ListPackagesServer) error {
	return status.Errorf(codes.Unimplemented, "method ListPackages not implemented")
}
func (*UnimplementedPackageServiceServer) ListPackagesWithMetadata(req *PackageListPackagesWithMetadataRequest, srv PackageService_ListPackagesWithMetadataServer) error {
	return status.Errorf(codes.Unimplemented, "method ListPackagesWithMetadata not implemented")
}

func RegisterPackageServiceServer(s *grpc.Server, srv PackageServiceServer) {
	s.RegisterService(&_PackageService_serviceDesc, srv)
}

func _PackageService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PackageCreationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PackageServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.platform.package.PackageService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PackageServiceServer).Create(ctx, req.(*PackageCreationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PackageService_Confirm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PackageId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PackageServiceServer).Confirm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.platform.package.PackageService/Confirm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PackageServiceServer).Confirm(ctx, req.(*PackageId))
	}
	return interceptor(ctx, in, info, handler)
}

func _PackageService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PackageId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PackageServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.platform.package.PackageService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PackageServiceServer).Get(ctx, req.(*PackageId))
	}
	return interceptor(ctx, in, info, handler)
}

func _PackageService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PackageId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PackageServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.platform.package.PackageService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PackageServiceServer).Delete(ctx, req.(*PackageId))
	}
	return interceptor(ctx, in, info, handler)
}

func _PackageService_ListTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PackageServiceServer).ListTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.platform.package.PackageService/ListTypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PackageServiceServer).ListTypes(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _PackageService_ListNamesByType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PackageListNamesByTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PackageServiceServer).ListNamesByType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.platform.package.PackageService/ListNamesByType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PackageServiceServer).ListNamesByType(ctx, req.(*PackageListNamesByTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PackageService_ListVersionsByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PackageListVersionsByNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PackageServiceServer).ListVersionsByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.platform.package.PackageService/ListVersionsByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PackageServiceServer).ListVersionsByName(ctx, req.(*PackageListVersionsByNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PackageService_ListPackages_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PackageListPackagesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PackageServiceServer).ListPackages(m, &packageServiceListPackagesServer{stream})
}

type PackageService_ListPackagesServer interface {
	Send(*PackageId) error
	grpc.ServerStream
}

type packageServiceListPackagesServer struct {
	grpc.ServerStream
}

func (x *packageServiceListPackagesServer) Send(m *PackageId) error {
	return x.ServerStream.SendMsg(m)
}

func _PackageService_ListPackagesWithMetadata_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PackageListPackagesWithMetadataRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PackageServiceServer).ListPackagesWithMetadata(m, &packageServiceListPackagesWithMetadataServer{stream})
}

type PackageService_ListPackagesWithMetadataServer interface {
	Send(*PackageListPackagesWithMetadataResponse) error
	grpc.ServerStream
}

type packageServiceListPackagesWithMetadataServer struct {
	grpc.ServerStream
}

func (x *packageServiceListPackagesWithMetadataServer) Send(m *PackageListPackagesWithMetadataResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _PackageService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "improbable.platform.package.PackageService",
	HandlerType: (*PackageServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _PackageService_Create_Handler,
		},
		{
			MethodName: "Confirm",
			Handler:    _PackageService_Confirm_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _PackageService_Get_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _PackageService_Delete_Handler,
		},
		{
			MethodName: "ListTypes",
			Handler:    _PackageService_ListTypes_Handler,
		},
		{
			MethodName: "ListNamesByType",
			Handler:    _PackageService_ListNamesByType_Handler,
		},
		{
			MethodName: "ListVersionsByName",
			Handler:    _PackageService_ListVersionsByName_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListPackages",
			Handler:       _PackageService_ListPackages_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ListPackagesWithMetadata",
			Handler:       _PackageService_ListPackagesWithMetadata_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "improbable/platform/package/package.proto",
}
