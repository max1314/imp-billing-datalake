// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/platform/runtime/query.proto

package improbable_platform_runtime

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	github_com_improbable_io_go_proto_logfields "github.com/improbable-io/go-proto-logfields"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *Coordinates) LogFields() map[string]string {
	return map[string]string{}
}

func (this *Coordinates) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *InspectionEntityQueryConstraint) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	var constraintFields map[string]string
	switch f := this.Constraint.(type) {
	case *InspectionEntityQueryConstraint_SphereConstraint:
		constraintFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.SphereConstraint)
	case *InspectionEntityQueryConstraint_CylinderConstraint:
		constraintFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.CylinderConstraint)
	case *InspectionEntityQueryConstraint_EntityIdConstraint:
		constraintFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.EntityIdConstraint)
	case *InspectionEntityQueryConstraint_ComponentConstraint:
		constraintFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.ComponentConstraint)
	case *InspectionEntityQueryConstraint_AndConstraint:
		constraintFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.AndConstraint)
	case *InspectionEntityQueryConstraint_OrConstraint:
		constraintFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.OrConstraint)
	case *InspectionEntityQueryConstraint_NotConstraint:
		constraintFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.NotConstraint)
	case *InspectionEntityQueryConstraint_TrueConstraint:
		constraintFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.TrueConstraint)
	case *InspectionEntityQueryConstraint_FalseConstraint:
		constraintFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.FalseConstraint)
	case *InspectionEntityQueryConstraint_BoxConstraint:
		constraintFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.BoxConstraint)
	case *InspectionEntityQueryConstraint_AuthorityConstraint:
		constraintFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.AuthorityConstraint)
	default:
		constraintFields = map[string]string{}
	}
	hasInner = hasInner || len(constraintFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range constraintFields {
		res[k] = v
	}
	return res
}

func (this *InspectionEntityQueryConstraint) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	if f, ok := this.Constraint.(*InspectionEntityQueryConstraint_SphereConstraint); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.SphereConstraint, dst)
	}
	if f, ok := this.Constraint.(*InspectionEntityQueryConstraint_CylinderConstraint); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.CylinderConstraint, dst)
	}
	if f, ok := this.Constraint.(*InspectionEntityQueryConstraint_EntityIdConstraint); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.EntityIdConstraint, dst)
	}
	if f, ok := this.Constraint.(*InspectionEntityQueryConstraint_ComponentConstraint); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.ComponentConstraint, dst)
	}
	if f, ok := this.Constraint.(*InspectionEntityQueryConstraint_AndConstraint); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.AndConstraint, dst)
	}
	if f, ok := this.Constraint.(*InspectionEntityQueryConstraint_OrConstraint); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.OrConstraint, dst)
	}
	if f, ok := this.Constraint.(*InspectionEntityQueryConstraint_NotConstraint); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.NotConstraint, dst)
	}
	if f, ok := this.Constraint.(*InspectionEntityQueryConstraint_TrueConstraint); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.TrueConstraint, dst)
	}
	if f, ok := this.Constraint.(*InspectionEntityQueryConstraint_FalseConstraint); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.FalseConstraint, dst)
	}
	if f, ok := this.Constraint.(*InspectionEntityQueryConstraint_BoxConstraint); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.BoxConstraint, dst)
	}
	if f, ok := this.Constraint.(*InspectionEntityQueryConstraint_AuthorityConstraint); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.AuthorityConstraint, dst)
	}
}

func (this *SphereConstraint) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	centerFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Center)
	hasInner = hasInner || len(centerFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range centerFields {
		res[k] = v
	}
	return res
}

func (this *SphereConstraint) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Center, dst)
}

func (this *CylinderConstraint) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	centerFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Center)
	hasInner = hasInner || len(centerFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range centerFields {
		res[k] = v
	}
	return res
}

func (this *CylinderConstraint) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Center, dst)
}

func (this *EntityIdConstraint) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	entityIdFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.EntityId)
	hasInner = hasInner || len(entityIdFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range entityIdFields {
		res[k] = v
	}
	return res
}

func (this *EntityIdConstraint) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.EntityId, dst)
}

func (this *ComponentConstraint) LogFields() map[string]string {
	return map[string]string{}
}

func (this *ComponentConstraint) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *AndConstraint) LogFields() map[string]string {
	return map[string]string{}
}

func (this *AndConstraint) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *OrConstraint) LogFields() map[string]string {
	return map[string]string{}
}

func (this *OrConstraint) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *NotConstraint) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	negatedFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Negated)
	hasInner = hasInner || len(negatedFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range negatedFields {
		res[k] = v
	}
	return res
}

func (this *NotConstraint) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Negated, dst)
}

func (this *TrueConstraint) LogFields() map[string]string {
	return map[string]string{}
}

func (this *TrueConstraint) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *FalseConstraint) LogFields() map[string]string {
	return map[string]string{}
}

func (this *FalseConstraint) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *BoxConstraint) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	minFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Min)
	hasInner = hasInner || len(minFields) > 0
	maxFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Max)
	hasInner = hasInner || len(maxFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range minFields {
		res[k] = v
	}
	for k, v := range maxFields {
		res[k] = v
	}
	return res
}

func (this *BoxConstraint) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Min, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Max, dst)
}

func (this *AuthorityConstraint) LogFields() map[string]string {
	return map[string]string{}
}

func (this *AuthorityConstraint) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *InspectionQueryResultType) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	var resultTypeFields map[string]string
	switch f := this.ResultType.(type) {
	case *InspectionQueryResultType_Snapshot:
		resultTypeFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.Snapshot)
	default:
		resultTypeFields = map[string]string{}
	}
	hasInner = hasInner || len(resultTypeFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range resultTypeFields {
		res[k] = v
	}
	return res
}

func (this *InspectionQueryResultType) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	if f, ok := this.ResultType.(*InspectionQueryResultType_Snapshot); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.Snapshot, dst)
	}
}

func (this *InspectionSnapshotResultType) LogFields() map[string]string {
	return map[string]string{}
}

func (this *InspectionSnapshotResultType) ExtractRequestFields(dst map[string]interface{}) {
}
