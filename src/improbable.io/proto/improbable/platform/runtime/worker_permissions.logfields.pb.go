// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/platform/runtime/worker_permissions.proto

package improbable_platform_runtime

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	github_com_improbable_io_go_proto_logfields "github.com/improbable-io/go-proto-logfields"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *WorkerPermission) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	var permissionFields map[string]string
	switch f := this.Permission.(type) {
	case *WorkerPermission_All:
		permissionFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.All)
	case *WorkerPermission_Specific:
		permissionFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.Specific)
	default:
		permissionFields = map[string]string{}
	}
	hasInner = hasInner || len(permissionFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range permissionFields {
		res[k] = v
	}
	return res
}

func (this *WorkerPermission) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	if f, ok := this.Permission.(*WorkerPermission_All); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.All, dst)
	}
	if f, ok := this.Permission.(*WorkerPermission_Specific); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.Specific, dst)
	}
}

func (this *AllPermission) LogFields() map[string]string {
	return map[string]string{}
}

func (this *AllPermission) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *SpecificPermission) LogFields() map[string]string {
	return map[string]string{}
}

func (this *SpecificPermission) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *EntityQueryPermission) LogFields() map[string]string {
	return map[string]string{}
}

func (this *EntityQueryPermission) ExtractRequestFields(dst map[string]interface{}) {
}
