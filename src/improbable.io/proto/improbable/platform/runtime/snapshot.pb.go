// Code generated by protoc-gen-go. DO NOT EDIT.
// source: improbable/platform/runtime/snapshot.proto

package improbable_platform_runtime

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	history "improbable.io/proto/improbable/platform/history"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TakeSnapshotRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TakeSnapshotRequest) Reset()         { *m = TakeSnapshotRequest{} }
func (m *TakeSnapshotRequest) String() string { return proto.CompactTextString(m) }
func (*TakeSnapshotRequest) ProtoMessage()    {}
func (*TakeSnapshotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2755d27110336156, []int{0}
}

func (m *TakeSnapshotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TakeSnapshotRequest.Unmarshal(m, b)
}
func (m *TakeSnapshotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TakeSnapshotRequest.Marshal(b, m, deterministic)
}
func (m *TakeSnapshotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TakeSnapshotRequest.Merge(m, src)
}
func (m *TakeSnapshotRequest) XXX_Size() int {
	return xxx_messageInfo_TakeSnapshotRequest.Size(m)
}
func (m *TakeSnapshotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TakeSnapshotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TakeSnapshotRequest proto.InternalMessageInfo

type TakeSnapshotResponse struct {
	SnapshotId           *history.SnapshotId `protobuf:"bytes,1,opt,name=snapshot_id,json=snapshotId,proto3" json:"snapshot_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TakeSnapshotResponse) Reset()         { *m = TakeSnapshotResponse{} }
func (m *TakeSnapshotResponse) String() string { return proto.CompactTextString(m) }
func (*TakeSnapshotResponse) ProtoMessage()    {}
func (*TakeSnapshotResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2755d27110336156, []int{1}
}

func (m *TakeSnapshotResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TakeSnapshotResponse.Unmarshal(m, b)
}
func (m *TakeSnapshotResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TakeSnapshotResponse.Marshal(b, m, deterministic)
}
func (m *TakeSnapshotResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TakeSnapshotResponse.Merge(m, src)
}
func (m *TakeSnapshotResponse) XXX_Size() int {
	return xxx_messageInfo_TakeSnapshotResponse.Size(m)
}
func (m *TakeSnapshotResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TakeSnapshotResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TakeSnapshotResponse proto.InternalMessageInfo

func (m *TakeSnapshotResponse) GetSnapshotId() *history.SnapshotId {
	if m != nil {
		return m.SnapshotId
	}
	return nil
}

func init() {
	proto.RegisterType((*TakeSnapshotRequest)(nil), "improbable.platform.runtime.TakeSnapshotRequest")
	proto.RegisterType((*TakeSnapshotResponse)(nil), "improbable.platform.runtime.TakeSnapshotResponse")
}

func init() {
	proto.RegisterFile("improbable/platform/runtime/snapshot.proto", fileDescriptor_2755d27110336156)
}

var fileDescriptor_2755d27110336156 = []byte{
	// 266 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0xca, 0xcc, 0x2d, 0x28,
	0xca, 0x4f, 0x4a, 0x4c, 0xca, 0x49, 0xd5, 0x2f, 0xc8, 0x49, 0x2c, 0x49, 0xcb, 0x2f, 0xca, 0xd5,
	0x2f, 0x2a, 0xcd, 0x2b, 0xc9, 0xcc, 0x4d, 0xd5, 0x2f, 0xce, 0x4b, 0x2c, 0x28, 0xce, 0xc8, 0x2f,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x92, 0x46, 0xa8, 0xd5, 0x83, 0xa9, 0xd5, 0x83, 0xaa,
	0x95, 0x92, 0x49, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x4f, 0x2c, 0xc8, 0xd4, 0x4f, 0xcc, 0xcb,
	0xcb, 0x2f, 0x49, 0x2c, 0xc9, 0xcc, 0xcf, 0x2b, 0x86, 0x68, 0x95, 0xc2, 0x6a, 0x4d, 0x46, 0x66,
	0x71, 0x49, 0x7e, 0x51, 0x25, 0x9a, 0x35, 0x4a, 0xd2, 0x5c, 0xc2, 0x21, 0x89, 0xd9, 0xa9, 0xc1,
	0x50, 0xd1, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x2f, 0x16, 0x0e, 0x46, 0x01, 0x26, 0xa5,
	0x04, 0x2e, 0x11, 0x54, 0xc9, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x21, 0x0f, 0x2e, 0x6e, 0x98,
	0x31, 0xf1, 0x99, 0x29, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xdc, 0x46, 0xea, 0x7a, 0xd8, 0x5c, 0x0c,
	0xb5, 0x56, 0x0f, 0x66, 0x86, 0x67, 0x4a, 0x10, 0x57, 0x31, 0x9c, 0x6d, 0xb4, 0x99, 0x91, 0x8b,
	0x1f, 0x26, 0x15, 0x9c, 0x5a, 0x54, 0x96, 0x99, 0x9c, 0x2a, 0x34, 0x9f, 0x91, 0x8b, 0x07, 0xd9,
	0x5a, 0x21, 0x03, 0x3d, 0x3c, 0x61, 0xa1, 0x87, 0xc5, 0xf9, 0x52, 0x86, 0x24, 0xe8, 0x80, 0xf8,
	0x49, 0x49, 0xab, 0xe9, 0xf2, 0x93, 0xc9, 0x4c, 0x2a, 0x4a, 0xf2, 0xfa, 0xc5, 0x10, 0x77, 0xc0,
	0x43, 0x4a, 0xbf, 0x24, 0x31, 0x3b, 0x35, 0x1e, 0xc6, 0xb3, 0x62, 0xd4, 0x72, 0x12, 0x70, 0xe2,
	0x83, 0xe9, 0x0f, 0x00, 0x85, 0x62, 0x71, 0x12, 0x1b, 0x38, 0x34, 0x8d, 0x01, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x31, 0xfa, 0x8f, 0x5d, 0xe2, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SnapshotServiceClient is the client API for SnapshotService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SnapshotServiceClient interface {
	TakeSnapshot(ctx context.Context, in *TakeSnapshotRequest, opts ...grpc.CallOption) (*TakeSnapshotResponse, error)
}

type snapshotServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSnapshotServiceClient(cc grpc.ClientConnInterface) SnapshotServiceClient {
	return &snapshotServiceClient{cc}
}

func (c *snapshotServiceClient) TakeSnapshot(ctx context.Context, in *TakeSnapshotRequest, opts ...grpc.CallOption) (*TakeSnapshotResponse, error) {
	out := new(TakeSnapshotResponse)
	err := c.cc.Invoke(ctx, "/improbable.platform.runtime.SnapshotService/TakeSnapshot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SnapshotServiceServer is the server API for SnapshotService service.
type SnapshotServiceServer interface {
	TakeSnapshot(context.Context, *TakeSnapshotRequest) (*TakeSnapshotResponse, error)
}

// UnimplementedSnapshotServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSnapshotServiceServer struct {
}

func (*UnimplementedSnapshotServiceServer) TakeSnapshot(ctx context.Context, req *TakeSnapshotRequest) (*TakeSnapshotResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TakeSnapshot not implemented")
}

func RegisterSnapshotServiceServer(s *grpc.Server, srv SnapshotServiceServer) {
	s.RegisterService(&_SnapshotService_serviceDesc, srv)
}

func _SnapshotService_TakeSnapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TakeSnapshotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SnapshotServiceServer).TakeSnapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.platform.runtime.SnapshotService/TakeSnapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SnapshotServiceServer).TakeSnapshot(ctx, req.(*TakeSnapshotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SnapshotService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "improbable.platform.runtime.SnapshotService",
	HandlerType: (*SnapshotServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TakeSnapshot",
			Handler:    _SnapshotService_TakeSnapshot_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "improbable/platform/runtime/snapshot.proto",
}
