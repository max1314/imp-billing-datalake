// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/platform/runtime/inspection.proto

package improbable_platform_runtime

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	github_com_improbable_io_go_proto_logfields "github.com/improbable-io/go-proto-logfields"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/protobuf/field_mask"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *EntityData) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	entityPositionFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.EntityPosition)
	hasInner = hasInner || len(entityPositionFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range entityPositionFields {
		res[k] = v
	}
	return res
}

func (this *EntityData) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.EntityPosition, dst)
}

func (this *EntityPosition) LogFields() map[string]string {
	return map[string]string{}
}

func (this *EntityPosition) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *RenderableComponent) LogFields() map[string]string {
	return map[string]string{}
}

func (this *RenderableComponent) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *WorkerNodeRequest) LogFields() map[string]string {
	return map[string]string{}
}

func (this *WorkerNodeRequest) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *WorkerNodeResponse) LogFields() map[string]string {
	return map[string]string{}
}

func (this *WorkerNodeResponse) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *DeleteWorkerRequest) LogFields() map[string]string {
	return map[string]string{}
}

func (this *DeleteWorkerRequest) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *DeleteWorkerResponse) LogFields() map[string]string {
	return map[string]string{}
}

func (this *DeleteWorkerResponse) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *DeleteEntitiesRequest) LogFields() map[string]string {
	return map[string]string{}
}

func (this *DeleteEntitiesRequest) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *DeleteEntitiesResponse) LogFields() map[string]string {
	return map[string]string{}
}

func (this *DeleteEntitiesResponse) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *Heatmap) LogFields() map[string]string {
	return map[string]string{}
}

func (this *Heatmap) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *Heatmap_Cell) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	extentFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Extent)
	hasInner = hasInner || len(extentFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range extentFields {
		res[k] = v
	}
	return res
}

func (this *Heatmap_Cell) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Extent, dst)
}

func (this *EntityHeatmapOptions) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	viewportFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Viewport)
	hasInner = hasInner || len(viewportFields) > 0
	resolutionFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Resolution)
	hasInner = hasInner || len(resolutionFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range viewportFields {
		res[k] = v
	}
	for k, v := range resolutionFields {
		res[k] = v
	}
	return res
}

func (this *EntityHeatmapOptions) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Viewport, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Resolution, dst)
}

func (this *EntityHeatmapOptions_Resolution) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	var resolutionTypeFields map[string]string
	switch f := this.ResolutionType.(type) {
	case *EntityHeatmapOptions_Resolution_AsChunks:
		resolutionTypeFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.AsChunks)
	case *EntityHeatmapOptions_Resolution_SquareGrid:
		resolutionTypeFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.SquareGrid)
	case *EntityHeatmapOptions_Resolution_AutoResolution_:
		resolutionTypeFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.AutoResolution)
	default:
		resolutionTypeFields = map[string]string{}
	}
	hasInner = hasInner || len(resolutionTypeFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range resolutionTypeFields {
		res[k] = v
	}
	return res
}

func (this *EntityHeatmapOptions_Resolution) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	if f, ok := this.ResolutionType.(*EntityHeatmapOptions_Resolution_AsChunks); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.AsChunks, dst)
	}
	if f, ok := this.ResolutionType.(*EntityHeatmapOptions_Resolution_SquareGrid); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.SquareGrid, dst)
	}
	if f, ok := this.ResolutionType.(*EntityHeatmapOptions_Resolution_AutoResolution_); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.AutoResolution, dst)
	}
}

func (this *EntityHeatmapOptions_Resolution_ChunkResolution) LogFields() map[string]string {
	return map[string]string{}
}

func (this *EntityHeatmapOptions_Resolution_ChunkResolution) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *EntityHeatmapOptions_Resolution_SquareGridResolution) LogFields() map[string]string {
	return map[string]string{}
}

func (this *EntityHeatmapOptions_Resolution_SquareGridResolution) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *EntityHeatmapOptions_Resolution_AutoResolution) LogFields() map[string]string {
	return map[string]string{}
}

func (this *EntityHeatmapOptions_Resolution_AutoResolution) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *GetEntityHeatmapRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	entityHeatmapOptionsFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.EntityHeatmapOptions)
	hasInner = hasInner || len(entityHeatmapOptionsFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range entityHeatmapOptionsFields {
		res[k] = v
	}
	return res
}

func (this *GetEntityHeatmapRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.EntityHeatmapOptions, dst)
}

func (this *GetEntityHeatmapResponse) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	heatmapFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Heatmap)
	hasInner = hasInner || len(heatmapFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range heatmapFields {
		res[k] = v
	}
	return res
}

func (this *GetEntityHeatmapResponse) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Heatmap, dst)
}

func (this *GetEntityDetailsRequest) LogFields() map[string]string {
	return map[string]string{}
}

func (this *GetEntityDetailsRequest) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *GetEntityDetailsResponse) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	entityDataFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.EntityData)
	hasInner = hasInner || len(entityDataFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range entityDataFields {
		res[k] = v
	}
	return res
}

func (this *GetEntityDetailsResponse) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.EntityData, dst)
}

func (this *GetAllWorkersRequest) LogFields() map[string]string {
	return map[string]string{}
}

func (this *GetAllWorkersRequest) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *GetAllWorkersResponse) LogFields() map[string]string {
	return map[string]string{}
}

func (this *GetAllWorkersResponse) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *WorkerSummary) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	positionFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Position)
	hasInner = hasInner || len(positionFields) > 0
	loadbalancingStatusFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.LoadbalancingStatus)
	hasInner = hasInner || len(loadbalancingStatusFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range positionFields {
		res[k] = v
	}
	for k, v := range loadbalancingStatusFields {
		res[k] = v
	}
	return res
}

func (this *WorkerSummary) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Position, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.LoadbalancingStatus, dst)
}

func (this *WorkerLoadbalancingStatus) LogFields() map[string]string {
	return map[string]string{}
}

func (this *WorkerLoadbalancingStatus) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *GetWorkerDetailsRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	fieldMaskFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.FieldMask)
	hasInner = hasInner || len(fieldMaskFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range fieldMaskFields {
		res[k] = v
	}
	return res
}

func (this *GetWorkerDetailsRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.FieldMask, dst)
}

func (this *GetWorkerDetailsResponse) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	summaryFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Summary)
	hasInner = hasInner || len(summaryFields) > 0
	detailsFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Details)
	hasInner = hasInner || len(detailsFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range summaryFields {
		res[k] = v
	}
	for k, v := range detailsFields {
		res[k] = v
	}
	return res
}

func (this *GetWorkerDetailsResponse) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Summary, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Details, dst)
}

func (this *GetWorkerInterestRequest) LogFields() map[string]string {
	return map[string]string{}
}

func (this *GetWorkerInterestRequest) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *GetWorkerInterestResponse) LogFields() map[string]string {
	return map[string]string{}
}

func (this *GetWorkerInterestResponse) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *GetWorkerInterestResponse_WorkerInterestConfiguration) LogFields() map[string]string {
	return map[string]string{}
}

func (this *GetWorkerInterestResponse_WorkerInterestConfiguration) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *InspectorStreamingQuery) LogFields() map[string]string {
	return map[string]string{}
}

func (this *InspectorStreamingQuery) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *LoadBalancingGridFormat) LogFields() map[string]string {
	return map[string]string{}
}

func (this *LoadBalancingGridFormat) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *GetLoadBalancingStrategyRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	var formatFields map[string]string
	switch f := this.Format.(type) {
	case *GetLoadBalancingStrategyRequest_GridFormat:
		formatFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.GridFormat)
	default:
		formatFields = map[string]string{}
	}
	hasInner = hasInner || len(formatFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range formatFields {
		res[k] = v
	}
	return res
}

func (this *GetLoadBalancingStrategyRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	if f, ok := this.Format.(*GetLoadBalancingStrategyRequest_GridFormat); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.GridFormat, dst)
	}
}

func (this *GridPartition) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	regionFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Region)
	hasInner = hasInner || len(regionFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range regionFields {
		res[k] = v
	}
	return res
}

func (this *GridPartition) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Region, dst)
}

func (this *GridPartitionStrategy) LogFields() map[string]string {
	return map[string]string{}
}

func (this *GridPartitionStrategy) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *GetLoadBalancingStrategyResponse) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	var strategyFields map[string]string
	switch f := this.Strategy.(type) {
	case *GetLoadBalancingStrategyResponse_GridPartitionStrategy:
		strategyFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.GridPartitionStrategy)
	default:
		strategyFields = map[string]string{}
	}
	hasInner = hasInner || len(strategyFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range strategyFields {
		res[k] = v
	}
	return res
}

func (this *GetLoadBalancingStrategyResponse) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	if f, ok := this.Strategy.(*GetLoadBalancingStrategyResponse_GridPartitionStrategy); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.GridPartitionStrategy, dst)
	}
}

func (this *GetVirtualWorkerMappingRequest) LogFields() map[string]string {
	return map[string]string{}
}

func (this *GetVirtualWorkerMappingRequest) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *GetVirtualWorkerMappingResponse) LogFields() map[string]string {
	return map[string]string{}
}

func (this *GetVirtualWorkerMappingResponse) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *WorkerDetails) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	interestRegionFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.InterestRegion)
	hasInner = hasInner || len(interestRegionFields) > 0
	workerAttributesFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.WorkerAttributes)
	hasInner = hasInner || len(workerAttributesFields) > 0
	authorityRegionFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.AuthorityRegion)
	hasInner = hasInner || len(authorityRegionFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range interestRegionFields {
		res[k] = v
	}
	for k, v := range workerAttributesFields {
		res[k] = v
	}
	for k, v := range authorityRegionFields {
		res[k] = v
	}
	return res
}

func (this *WorkerDetails) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.InterestRegion, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.WorkerAttributes, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.AuthorityRegion, dst)
}

func (this *WorkerDetails_ComponentSet) LogFields() map[string]string {
	return map[string]string{}
}

func (this *WorkerDetails_ComponentSet) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *Region) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	var areaFields map[string]string
	switch f := this.Area.(type) {
	case *Region_AsRectangles:
		areaFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.AsRectangles)
	default:
		areaFields = map[string]string{}
	}
	hasInner = hasInner || len(areaFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range areaFields {
		res[k] = v
	}
	return res
}

func (this *Region) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	if f, ok := this.Area.(*Region_AsRectangles); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.AsRectangles, dst)
	}
}

func (this *Region_RectanglesRegion) LogFields() map[string]string {
	return map[string]string{}
}

func (this *Region_RectanglesRegion) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *GetWorldExtentsRequest) LogFields() map[string]string {
	return map[string]string{}
}

func (this *GetWorldExtentsRequest) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *GetWorldExtentsResponse) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	worldSubdivisionFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.WorldSubdivision)
	hasInner = hasInner || len(worldSubdivisionFields) > 0
	worldBoundsFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.WorldBounds)
	hasInner = hasInner || len(worldBoundsFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range worldSubdivisionFields {
		res[k] = v
	}
	for k, v := range worldBoundsFields {
		res[k] = v
	}
	return res
}

func (this *GetWorldExtentsResponse) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.WorldSubdivision, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.WorldBounds, dst)
}

func (this *GetWorldExtentsResponse_WorldSubdivision) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	var subdivisionFields map[string]string
	switch f := this.Subdivision.(type) {
	case *GetWorldExtentsResponse_WorldSubdivision_GsimExtents:
		subdivisionFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.GsimExtents)
	default:
		subdivisionFields = map[string]string{}
	}
	hasInner = hasInner || len(subdivisionFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range subdivisionFields {
		res[k] = v
	}
	return res
}

func (this *GetWorldExtentsResponse_WorldSubdivision) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	if f, ok := this.Subdivision.(*GetWorldExtentsResponse_WorldSubdivision_GsimExtents); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.GsimExtents, dst)
	}
}

func (this *GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision) LogFields() map[string]string {
	return map[string]string{}
}

func (this *GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *GetChunksRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	viewportFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Viewport)
	hasInner = hasInner || len(viewportFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range viewportFields {
		res[k] = v
	}
	return res
}

func (this *GetChunksRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Viewport, dst)
}

func (this *GetChunksResponse) LogFields() map[string]string {
	return map[string]string{}
}

func (this *GetChunksResponse) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *ChunkDetails) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	extentFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Extent)
	hasInner = hasInner || len(extentFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range extentFields {
		res[k] = v
	}
	return res
}

func (this *ChunkDetails) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Extent, dst)
}

func (this *InspectionEntitySubscriptionQuery) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	constraintFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Constraint)
	hasInner = hasInner || len(constraintFields) > 0
	resultTypeFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.ResultType)
	hasInner = hasInner || len(resultTypeFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range constraintFields {
		res[k] = v
	}
	for k, v := range resultTypeFields {
		res[k] = v
	}
	return res
}

func (this *InspectionEntitySubscriptionQuery) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Constraint, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.ResultType, dst)
}

func (this *InspectionEntitySubscriptionResponse) LogFields() map[string]string {
	return map[string]string{}
}

func (this *InspectionEntitySubscriptionResponse) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *InspectionEntityComponentId) LogFields() map[string]string {
	return map[string]string{}
}

func (this *InspectionEntityComponentId) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *InspectionEntitySnapshot) LogFields() map[string]string {
	return map[string]string{}
}

func (this *InspectionEntitySnapshot) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *InspectionEntityComponentUpdate) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	entityComponentIdFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.EntityComponentId)
	hasInner = hasInner || len(entityComponentIdFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range entityComponentIdFields {
		res[k] = v
	}
	return res
}

func (this *InspectionEntityComponentUpdate) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.EntityComponentId, dst)
}

func (this *InspectionEntityAuthorityState) LogFields() map[string]string {
	return map[string]string{}
}

func (this *InspectionEntityAuthorityState) ExtractRequestFields(dst map[string]interface{}) {
}
