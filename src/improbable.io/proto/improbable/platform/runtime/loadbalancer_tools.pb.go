// Code generated by protoc-gen-go. DO NOT EDIT.
// source: improbable/platform/runtime/loadbalancer_tools.proto

package improbable_platform_runtime

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	deployment "improbable.io/proto/improbable/platform/deployment"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReplaceWorkerRequest struct {
	ReplacingWorkerId string `protobuf:"bytes,1,opt,name=replacing_worker_id,json=replacingWorkerId,proto3" json:"replacing_worker_id,omitempty"`
	// Types that are valid to be assigned to TargetToReplace:
	//	*ReplaceWorkerRequest_ExistingWorkerId
	//	*ReplaceWorkerRequest_VirtualWorkerId
	TargetToReplace      isReplaceWorkerRequest_TargetToReplace `protobuf_oneof:"target_to_replace"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *ReplaceWorkerRequest) Reset()         { *m = ReplaceWorkerRequest{} }
func (m *ReplaceWorkerRequest) String() string { return proto.CompactTextString(m) }
func (*ReplaceWorkerRequest) ProtoMessage()    {}
func (*ReplaceWorkerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_84e448b488f8b6a9, []int{0}
}

func (m *ReplaceWorkerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplaceWorkerRequest.Unmarshal(m, b)
}
func (m *ReplaceWorkerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplaceWorkerRequest.Marshal(b, m, deterministic)
}
func (m *ReplaceWorkerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplaceWorkerRequest.Merge(m, src)
}
func (m *ReplaceWorkerRequest) XXX_Size() int {
	return xxx_messageInfo_ReplaceWorkerRequest.Size(m)
}
func (m *ReplaceWorkerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplaceWorkerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReplaceWorkerRequest proto.InternalMessageInfo

func (m *ReplaceWorkerRequest) GetReplacingWorkerId() string {
	if m != nil {
		return m.ReplacingWorkerId
	}
	return ""
}

type isReplaceWorkerRequest_TargetToReplace interface {
	isReplaceWorkerRequest_TargetToReplace()
}

type ReplaceWorkerRequest_ExistingWorkerId struct {
	ExistingWorkerId string `protobuf:"bytes,2,opt,name=existing_worker_id,json=existingWorkerId,proto3,oneof"`
}

type ReplaceWorkerRequest_VirtualWorkerId struct {
	VirtualWorkerId int64 `protobuf:"varint,3,opt,name=virtual_worker_id,json=virtualWorkerId,proto3,oneof"`
}

func (*ReplaceWorkerRequest_ExistingWorkerId) isReplaceWorkerRequest_TargetToReplace() {}

func (*ReplaceWorkerRequest_VirtualWorkerId) isReplaceWorkerRequest_TargetToReplace() {}

func (m *ReplaceWorkerRequest) GetTargetToReplace() isReplaceWorkerRequest_TargetToReplace {
	if m != nil {
		return m.TargetToReplace
	}
	return nil
}

func (m *ReplaceWorkerRequest) GetExistingWorkerId() string {
	if x, ok := m.GetTargetToReplace().(*ReplaceWorkerRequest_ExistingWorkerId); ok {
		return x.ExistingWorkerId
	}
	return ""
}

func (m *ReplaceWorkerRequest) GetVirtualWorkerId() int64 {
	if x, ok := m.GetTargetToReplace().(*ReplaceWorkerRequest_VirtualWorkerId); ok {
		return x.VirtualWorkerId
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ReplaceWorkerRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ReplaceWorkerRequest_ExistingWorkerId)(nil),
		(*ReplaceWorkerRequest_VirtualWorkerId)(nil),
	}
}

type ReplaceWorkerResponse struct {
	VirtualWorkerId      []int64  `protobuf:"varint,1,rep,packed,name=virtual_worker_id,json=virtualWorkerId,proto3" json:"virtual_worker_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplaceWorkerResponse) Reset()         { *m = ReplaceWorkerResponse{} }
func (m *ReplaceWorkerResponse) String() string { return proto.CompactTextString(m) }
func (*ReplaceWorkerResponse) ProtoMessage()    {}
func (*ReplaceWorkerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_84e448b488f8b6a9, []int{1}
}

func (m *ReplaceWorkerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplaceWorkerResponse.Unmarshal(m, b)
}
func (m *ReplaceWorkerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplaceWorkerResponse.Marshal(b, m, deterministic)
}
func (m *ReplaceWorkerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplaceWorkerResponse.Merge(m, src)
}
func (m *ReplaceWorkerResponse) XXX_Size() int {
	return xxx_messageInfo_ReplaceWorkerResponse.Size(m)
}
func (m *ReplaceWorkerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplaceWorkerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReplaceWorkerResponse proto.InternalMessageInfo

func (m *ReplaceWorkerResponse) GetVirtualWorkerId() []int64 {
	if m != nil {
		return m.VirtualWorkerId
	}
	return nil
}

type ManagedWorkerDetailsRequest struct {
	WorkerId             string   `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ManagedWorkerDetailsRequest) Reset()         { *m = ManagedWorkerDetailsRequest{} }
func (m *ManagedWorkerDetailsRequest) String() string { return proto.CompactTextString(m) }
func (*ManagedWorkerDetailsRequest) ProtoMessage()    {}
func (*ManagedWorkerDetailsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_84e448b488f8b6a9, []int{2}
}

func (m *ManagedWorkerDetailsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ManagedWorkerDetailsRequest.Unmarshal(m, b)
}
func (m *ManagedWorkerDetailsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ManagedWorkerDetailsRequest.Marshal(b, m, deterministic)
}
func (m *ManagedWorkerDetailsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ManagedWorkerDetailsRequest.Merge(m, src)
}
func (m *ManagedWorkerDetailsRequest) XXX_Size() int {
	return xxx_messageInfo_ManagedWorkerDetailsRequest.Size(m)
}
func (m *ManagedWorkerDetailsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ManagedWorkerDetailsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ManagedWorkerDetailsRequest proto.InternalMessageInfo

func (m *ManagedWorkerDetailsRequest) GetWorkerId() string {
	if m != nil {
		return m.WorkerId
	}
	return ""
}

type ManagedWorkerDetailsResponse struct {
	WorkerNodeId         *deployment.WorkerNodeId `protobuf:"bytes,1,opt,name=worker_node_id,json=workerNodeId,proto3" json:"worker_node_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ManagedWorkerDetailsResponse) Reset()         { *m = ManagedWorkerDetailsResponse{} }
func (m *ManagedWorkerDetailsResponse) String() string { return proto.CompactTextString(m) }
func (*ManagedWorkerDetailsResponse) ProtoMessage()    {}
func (*ManagedWorkerDetailsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_84e448b488f8b6a9, []int{3}
}

func (m *ManagedWorkerDetailsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ManagedWorkerDetailsResponse.Unmarshal(m, b)
}
func (m *ManagedWorkerDetailsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ManagedWorkerDetailsResponse.Marshal(b, m, deterministic)
}
func (m *ManagedWorkerDetailsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ManagedWorkerDetailsResponse.Merge(m, src)
}
func (m *ManagedWorkerDetailsResponse) XXX_Size() int {
	return xxx_messageInfo_ManagedWorkerDetailsResponse.Size(m)
}
func (m *ManagedWorkerDetailsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ManagedWorkerDetailsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ManagedWorkerDetailsResponse proto.InternalMessageInfo

func (m *ManagedWorkerDetailsResponse) GetWorkerNodeId() *deployment.WorkerNodeId {
	if m != nil {
		return m.WorkerNodeId
	}
	return nil
}

func init() {
	proto.RegisterType((*ReplaceWorkerRequest)(nil), "improbable.platform.runtime.ReplaceWorkerRequest")
	proto.RegisterType((*ReplaceWorkerResponse)(nil), "improbable.platform.runtime.ReplaceWorkerResponse")
	proto.RegisterType((*ManagedWorkerDetailsRequest)(nil), "improbable.platform.runtime.ManagedWorkerDetailsRequest")
	proto.RegisterType((*ManagedWorkerDetailsResponse)(nil), "improbable.platform.runtime.ManagedWorkerDetailsResponse")
}

func init() {
	proto.RegisterFile("improbable/platform/runtime/loadbalancer_tools.proto", fileDescriptor_84e448b488f8b6a9)
}

var fileDescriptor_84e448b488f8b6a9 = []byte{
	// 381 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0xcf, 0x4e, 0xea, 0x40,
	0x14, 0xc6, 0x29, 0x4d, 0x6e, 0x2e, 0x73, 0xff, 0x28, 0x83, 0x46, 0x02, 0x2e, 0x48, 0x57, 0xc4,
	0x90, 0xa9, 0xa2, 0x0b, 0x75, 0xa9, 0x26, 0x42, 0xa2, 0x2e, 0xaa, 0x89, 0xcb, 0x66, 0xca, 0x1c,
	0xc9, 0xc4, 0x69, 0xa7, 0x4e, 0x87, 0x3f, 0xbe, 0x85, 0x6f, 0xe1, 0x33, 0xf8, 0x76, 0x06, 0xda,
	0x81, 0x82, 0x0d, 0x89, 0x2e, 0x3b, 0xe7, 0xfb, 0x7d, 0x3d, 0xe7, 0x3b, 0x07, 0x9d, 0xf0, 0x30,
	0x56, 0x32, 0xa0, 0x81, 0x00, 0x37, 0x16, 0x54, 0x3f, 0x49, 0x15, 0xba, 0x6a, 0x14, 0x69, 0x1e,
	0x82, 0x2b, 0x24, 0x65, 0x01, 0x15, 0x34, 0x1a, 0x80, 0xf2, 0xb5, 0x94, 0x22, 0x21, 0xb1, 0x92,
	0x5a, 0xe2, 0xe6, 0x92, 0x22, 0x86, 0x22, 0x19, 0xd5, 0x38, 0x2c, 0xb2, 0x64, 0x10, 0x0b, 0xf9,
	0x1a, 0x42, 0xa4, 0xdd, 0x89, 0x54, 0xcf, 0xa0, 0xfc, 0x48, 0x32, 0x48, 0xed, 0x9c, 0x0f, 0x0b,
	0xed, 0x78, 0x10, 0x0b, 0x3a, 0x80, 0xc7, 0x79, 0xd1, 0x83, 0x97, 0x11, 0x24, 0x1a, 0x13, 0x54,
	0x53, 0xf3, 0x77, 0x1e, 0x0d, 0xfd, 0x8c, 0xe3, 0xac, 0x6e, 0xb5, 0xac, 0x76, 0xc5, 0xab, 0x2e,
	0x4a, 0x29, 0xd4, 0x67, 0x98, 0x20, 0x0c, 0x53, 0x9e, 0xe8, 0x55, 0x79, 0x79, 0x26, 0xef, 0x95,
	0xbc, 0x6d, 0x53, 0x5b, 0xe8, 0x3b, 0xa8, 0x3a, 0xe6, 0x4a, 0x8f, 0xa8, 0xc8, 0xc9, 0xed, 0x96,
	0xd5, 0xb6, 0x7b, 0x25, 0x6f, 0x2b, 0x2b, 0x19, 0xf5, 0x45, 0x0d, 0x55, 0x35, 0x55, 0x43, 0xd0,
	0xbe, 0x96, 0x7e, 0xfa, 0x73, 0x70, 0x2e, 0xd1, 0xee, 0x5a, 0xeb, 0x49, 0x2c, 0xa3, 0x04, 0xf0,
	0x41, 0x91, 0xb7, 0xd5, 0xb2, 0xdb, 0xf6, 0x17, 0x67, 0xe7, 0x1c, 0x35, 0x6f, 0x69, 0x44, 0x87,
	0xc0, 0xd2, 0xa7, 0x2b, 0xd0, 0x94, 0x8b, 0xc4, 0xc4, 0xd0, 0x44, 0x95, 0xf5, 0xe1, 0x7f, 0x4f,
	0x0c, 0xab, 0xd0, 0x7e, 0x31, 0x9b, 0xf5, 0xe1, 0xa1, 0xff, 0xb9, 0xc4, 0x8d, 0xc3, 0x9f, 0x6e,
	0x87, 0x14, 0x2d, 0x71, 0xb9, 0x27, 0x92, 0xda, 0xdd, 0x49, 0x06, 0x7d, 0xe6, 0xfd, 0x9d, 0xe4,
	0xbe, 0xba, 0xef, 0x65, 0x54, 0xbf, 0xc9, 0x1d, 0xc7, 0xc3, 0xec, 0x36, 0xee, 0x41, 0x8d, 0xf9,
	0x00, 0xf0, 0x14, 0xfd, 0x5b, 0x49, 0x04, 0x1f, 0x91, 0x0d, 0xe7, 0x42, 0x8a, 0x16, 0xdf, 0xe8,
	0x7e, 0x07, 0x49, 0x07, 0x75, 0x4a, 0xf8, 0xcd, 0x42, 0x7b, 0xd7, 0xa0, 0x8b, 0xe2, 0xc0, 0xa7,
	0x1b, 0x1d, 0x37, 0xa4, 0xdf, 0x38, 0xfb, 0x01, 0x69, 0x5a, 0x0a, 0x7e, 0xcd, 0x2f, 0xfc, 0xf8,
	0x33, 0x00, 0x00, 0xff, 0xff, 0xd7, 0xce, 0xe8, 0x7f, 0x68, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LoadbalancerToolsServiceClient is the client API for LoadbalancerToolsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LoadbalancerToolsServiceClient interface {
	ReplaceWorker(ctx context.Context, in *ReplaceWorkerRequest, opts ...grpc.CallOption) (*ReplaceWorkerResponse, error)
	GetManagedWorkerDetails(ctx context.Context, in *ManagedWorkerDetailsRequest, opts ...grpc.CallOption) (*ManagedWorkerDetailsResponse, error)
}

type loadbalancerToolsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewLoadbalancerToolsServiceClient(cc grpc.ClientConnInterface) LoadbalancerToolsServiceClient {
	return &loadbalancerToolsServiceClient{cc}
}

func (c *loadbalancerToolsServiceClient) ReplaceWorker(ctx context.Context, in *ReplaceWorkerRequest, opts ...grpc.CallOption) (*ReplaceWorkerResponse, error) {
	out := new(ReplaceWorkerResponse)
	err := c.cc.Invoke(ctx, "/improbable.platform.runtime.LoadbalancerToolsService/ReplaceWorker", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loadbalancerToolsServiceClient) GetManagedWorkerDetails(ctx context.Context, in *ManagedWorkerDetailsRequest, opts ...grpc.CallOption) (*ManagedWorkerDetailsResponse, error) {
	out := new(ManagedWorkerDetailsResponse)
	err := c.cc.Invoke(ctx, "/improbable.platform.runtime.LoadbalancerToolsService/GetManagedWorkerDetails", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LoadbalancerToolsServiceServer is the server API for LoadbalancerToolsService service.
type LoadbalancerToolsServiceServer interface {
	ReplaceWorker(context.Context, *ReplaceWorkerRequest) (*ReplaceWorkerResponse, error)
	GetManagedWorkerDetails(context.Context, *ManagedWorkerDetailsRequest) (*ManagedWorkerDetailsResponse, error)
}

// UnimplementedLoadbalancerToolsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLoadbalancerToolsServiceServer struct {
}

func (*UnimplementedLoadbalancerToolsServiceServer) ReplaceWorker(ctx context.Context, req *ReplaceWorkerRequest) (*ReplaceWorkerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplaceWorker not implemented")
}
func (*UnimplementedLoadbalancerToolsServiceServer) GetManagedWorkerDetails(ctx context.Context, req *ManagedWorkerDetailsRequest) (*ManagedWorkerDetailsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetManagedWorkerDetails not implemented")
}

func RegisterLoadbalancerToolsServiceServer(s *grpc.Server, srv LoadbalancerToolsServiceServer) {
	s.RegisterService(&_LoadbalancerToolsService_serviceDesc, srv)
}

func _LoadbalancerToolsService_ReplaceWorker_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplaceWorkerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoadbalancerToolsServiceServer).ReplaceWorker(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.platform.runtime.LoadbalancerToolsService/ReplaceWorker",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoadbalancerToolsServiceServer).ReplaceWorker(ctx, req.(*ReplaceWorkerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoadbalancerToolsService_GetManagedWorkerDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ManagedWorkerDetailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoadbalancerToolsServiceServer).GetManagedWorkerDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.platform.runtime.LoadbalancerToolsService/GetManagedWorkerDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoadbalancerToolsServiceServer).GetManagedWorkerDetails(ctx, req.(*ManagedWorkerDetailsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LoadbalancerToolsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "improbable.platform.runtime.LoadbalancerToolsService",
	HandlerType: (*LoadbalancerToolsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReplaceWorker",
			Handler:    _LoadbalancerToolsService_ReplaceWorker_Handler,
		},
		{
			MethodName: "GetManagedWorkerDetails",
			Handler:    _LoadbalancerToolsService_GetManagedWorkerDetails_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "improbable/platform/runtime/loadbalancer_tools.proto",
}
