// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/platform/runtime/inspection.proto

package improbable_platform_runtime

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/protobuf/field_mask"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *EntityData) Validate() error {
	for _, item := range this.RenderableComponents {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("RenderableComponents", err)
			}
		}
	}
	if this.EntityPosition != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.EntityPosition); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("EntityPosition", err)
		}
	}
	return nil
}
func (this *EntityPosition) Validate() error {
	return nil
}
func (this *RenderableComponent) Validate() error {
	return nil
}
func (this *WorkerNodeRequest) Validate() error {
	return nil
}
func (this *WorkerNodeResponse) Validate() error {
	return nil
}
func (this *DeleteWorkerRequest) Validate() error {
	return nil
}
func (this *DeleteWorkerResponse) Validate() error {
	return nil
}
func (this *DeleteEntitiesRequest) Validate() error {
	for _, item := range this.EntityIds {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("EntityIds", err)
			}
		}
	}
	return nil
}
func (this *DeleteEntitiesResponse) Validate() error {
	return nil
}
func (this *Heatmap) Validate() error {
	for _, item := range this.Cells {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Cells", err)
			}
		}
	}
	return nil
}
func (this *Heatmap_Cell) Validate() error {
	if this.Extent != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Extent); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Extent", err)
		}
	}
	return nil
}
func (this *EntityHeatmapOptions) Validate() error {
	if this.Viewport != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Viewport); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Viewport", err)
		}
	}
	if this.Resolution != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Resolution); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Resolution", err)
		}
	}
	return nil
}
func (this *EntityHeatmapOptions_Resolution) Validate() error {
	if oneOfNester, ok := this.GetResolutionType().(*EntityHeatmapOptions_Resolution_AsChunks); ok {
		if oneOfNester.AsChunks != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.AsChunks); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("AsChunks", err)
			}
		}
	}
	if oneOfNester, ok := this.GetResolutionType().(*EntityHeatmapOptions_Resolution_SquareGrid); ok {
		if oneOfNester.SquareGrid != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.SquareGrid); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("SquareGrid", err)
			}
		}
	}
	if oneOfNester, ok := this.GetResolutionType().(*EntityHeatmapOptions_Resolution_AutoResolution_); ok {
		if oneOfNester.AutoResolution != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.AutoResolution); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("AutoResolution", err)
			}
		}
	}
	return nil
}
func (this *EntityHeatmapOptions_Resolution_ChunkResolution) Validate() error {
	return nil
}
func (this *EntityHeatmapOptions_Resolution_SquareGridResolution) Validate() error {
	return nil
}
func (this *EntityHeatmapOptions_Resolution_AutoResolution) Validate() error {
	return nil
}
func (this *GetEntityHeatmapRequest) Validate() error {
	if this.EntityHeatmapOptions != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.EntityHeatmapOptions); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("EntityHeatmapOptions", err)
		}
	}
	return nil
}
func (this *GetEntityHeatmapResponse) Validate() error {
	if this.Heatmap != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Heatmap); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Heatmap", err)
		}
	}
	return nil
}
func (this *GetEntityDetailsRequest) Validate() error {
	return nil
}
func (this *GetEntityDetailsResponse) Validate() error {
	if this.EntityData != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.EntityData); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("EntityData", err)
		}
	}
	return nil
}
func (this *GetAllWorkersRequest) Validate() error {
	return nil
}
func (this *GetAllWorkersResponse) Validate() error {
	for _, item := range this.WorkerSummaries {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("WorkerSummaries", err)
			}
		}
	}
	return nil
}
func (this *WorkerSummary) Validate() error {
	if this.Position != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Position); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Position", err)
		}
	}
	if this.LoadbalancingStatus != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.LoadbalancingStatus); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("LoadbalancingStatus", err)
		}
	}
	return nil
}
func (this *WorkerLoadbalancingStatus) Validate() error {
	return nil
}
func (this *GetWorkerDetailsRequest) Validate() error {
	if this.FieldMask != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.FieldMask); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("FieldMask", err)
		}
	}
	return nil
}
func (this *GetWorkerDetailsResponse) Validate() error {
	if this.Summary != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Summary); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Summary", err)
		}
	}
	if this.Details != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Details); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Details", err)
		}
	}
	return nil
}
func (this *GetWorkerInterestRequest) Validate() error {
	return nil
}
func (this *GetWorkerInterestResponse) Validate() error {
	// Validation of proto3 map<> fields is unsupported.
	return nil
}
func (this *GetWorkerInterestResponse_WorkerInterestConfiguration) Validate() error {
	for _, item := range this.StreamingQuery {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("StreamingQuery", err)
			}
		}
	}
	return nil
}
func (this *InspectorStreamingQuery) Validate() error {
	if this.ComponentName == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("ComponentName", fmt.Errorf(`value '%v' must not be an empty string`, this.ComponentName))
	}
	if !(this.Radius >= 0) {
		return github_com_mwitkow_go_proto_validators.FieldError("Radius", fmt.Errorf(`value '%v' must be greater than or equal to '0'`, this.Radius))
	}
	return nil
}
func (this *LoadBalancingGridFormat) Validate() error {
	return nil
}
func (this *GetLoadBalancingStrategyRequest) Validate() error {
	if oneOfNester, ok := this.GetFormat().(*GetLoadBalancingStrategyRequest_GridFormat); ok {
		if oneOfNester.GridFormat != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.GridFormat); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("GridFormat", err)
			}
		}
	}
	return nil
}
func (this *GridPartition) Validate() error {
	if this.Region != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Region); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Region", err)
		}
	}
	return nil
}
func (this *GridPartitionStrategy) Validate() error {
	for _, item := range this.GridPartitions {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("GridPartitions", err)
			}
		}
	}
	return nil
}
func (this *GetLoadBalancingStrategyResponse) Validate() error {
	if oneOfNester, ok := this.GetStrategy().(*GetLoadBalancingStrategyResponse_GridPartitionStrategy); ok {
		if oneOfNester.GridPartitionStrategy != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.GridPartitionStrategy); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("GridPartitionStrategy", err)
			}
		}
	}
	return nil
}
func (this *GetVirtualWorkerMappingRequest) Validate() error {
	return nil
}
func (this *GetVirtualWorkerMappingResponse) Validate() error {
	// Validation of proto3 map<> fields is unsupported.
	return nil
}
func (this *WorkerDetails) Validate() error {
	if this.InterestRegion != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.InterestRegion); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("InterestRegion", err)
		}
	}
	// Validation of proto3 map<> fields is unsupported.
	// Validation of proto3 map<> fields is unsupported.
	if this.WorkerAttributes != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.WorkerAttributes); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("WorkerAttributes", err)
		}
	}
	if this.AuthorityRegion != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.AuthorityRegion); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("AuthorityRegion", err)
		}
	}
	return nil
}
func (this *WorkerDetails_ComponentSet) Validate() error {
	// Validation of proto3 map<> fields is unsupported.
	return nil
}
func (this *Region) Validate() error {
	if oneOfNester, ok := this.GetArea().(*Region_AsRectangles); ok {
		if oneOfNester.AsRectangles != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.AsRectangles); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("AsRectangles", err)
			}
		}
	}
	return nil
}
func (this *Region_RectanglesRegion) Validate() error {
	for _, item := range this.Rectangles {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Rectangles", err)
			}
		}
	}
	return nil
}
func (this *GetWorldExtentsRequest) Validate() error {
	return nil
}
func (this *GetWorldExtentsResponse) Validate() error {
	if this.WorldSubdivision != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.WorldSubdivision); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("WorldSubdivision", err)
		}
	}
	if this.WorldBounds != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.WorldBounds); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("WorldBounds", err)
		}
	}
	return nil
}
func (this *GetWorldExtentsResponse_WorldSubdivision) Validate() error {
	if oneOfNester, ok := this.GetSubdivision().(*GetWorldExtentsResponse_WorldSubdivision_GsimExtents); ok {
		if oneOfNester.GsimExtents != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.GsimExtents); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("GsimExtents", err)
			}
		}
	}
	return nil
}
func (this *GetWorldExtentsResponse_WorldSubdivision_GsimSubdivision) Validate() error {
	for _, item := range this.GsimBounds {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("GsimBounds", err)
			}
		}
	}
	return nil
}
func (this *GetChunksRequest) Validate() error {
	if this.Viewport != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Viewport); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Viewport", err)
		}
	}
	return nil
}
func (this *GetChunksResponse) Validate() error {
	for _, item := range this.Chunks {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Chunks", err)
			}
		}
	}
	return nil
}
func (this *ChunkDetails) Validate() error {
	if this.Extent != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Extent); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Extent", err)
		}
	}
	// Validation of proto3 map<> fields is unsupported.
	// Validation of proto3 map<> fields is unsupported.
	return nil
}
func (this *InspectionEntitySubscriptionQuery) Validate() error {
	if this.Constraint != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Constraint); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Constraint", err)
		}
	}
	if this.ResultType != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ResultType); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ResultType", err)
		}
	}
	return nil
}
func (this *InspectionEntitySubscriptionResponse) Validate() error {
	for _, item := range this.RemovedComponents {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("RemovedComponents", err)
			}
		}
	}
	for _, item := range this.AddedEntities {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("AddedEntities", err)
			}
		}
	}
	for _, item := range this.UpdatedComponents {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("UpdatedComponents", err)
			}
		}
	}
	for _, item := range this.AuthorityStates {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("AuthorityStates", err)
			}
		}
	}
	return nil
}
func (this *InspectionEntityComponentId) Validate() error {
	return nil
}
func (this *InspectionEntitySnapshot) Validate() error {
	// Validation of proto3 map<> fields is unsupported.
	return nil
}
func (this *InspectionEntityComponentUpdate) Validate() error {
	if this.EntityComponentId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.EntityComponentId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("EntityComponentId", err)
		}
	}
	return nil
}
func (this *InspectionEntityAuthorityState) Validate() error {
	// Validation of proto3 map<> fields is unsupported.
	return nil
}
