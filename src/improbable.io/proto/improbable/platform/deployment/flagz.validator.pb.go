// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/platform/deployment/flagz.proto

package improbable_platform_deployment

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
	regexp "regexp"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

var _regex_FlagzId_Name = regexp.MustCompile(`^[a-zA-Z0-9_-]{3,128}$`)

func (this *FlagzId) Validate() error {
	if nil == this.DeploymentId {
		return github_com_mwitkow_go_proto_validators.FieldError("DeploymentId", fmt.Errorf("message must exist"))
	}
	if this.DeploymentId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.DeploymentId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("DeploymentId", err)
		}
	}
	if !_regex_FlagzId_Name.MatchString(this.Name) {
		return github_com_mwitkow_go_proto_validators.FieldError("Name", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-zA-Z0-9_-]{3,128}$"`, this.Name))
	}
	return nil
}
func (this *Flagz) Validate() error {
	if nil == this.FlagzId {
		return github_com_mwitkow_go_proto_validators.FieldError("FlagzId", fmt.Errorf("message must exist"))
	}
	if this.FlagzId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.FlagzId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("FlagzId", err)
		}
	}
	return nil
}
