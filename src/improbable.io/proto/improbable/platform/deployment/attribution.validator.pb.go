// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/platform/deployment/attribution.proto

package improbable_platform_deployment

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *Attribution) Validate() error {
	if oneOfNester, ok := this.GetPurpose().(*Attribution_TeamcityAttribution); ok {
		if oneOfNester.TeamcityAttribution != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.TeamcityAttribution); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("TeamcityAttribution", err)
			}
		}
	}
	return nil
}
func (this *TeamcityAttribution) Validate() error {
	if this.Name == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Name", fmt.Errorf(`value '%v' must not be an empty string`, this.Name))
	}
	if this.InstanceId == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("InstanceId", fmt.Errorf(`value '%v' must not be an empty string`, this.InstanceId))
	}
	if this.HostName == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("HostName", fmt.Errorf(`value '%v' must not be an empty string`, this.HostName))
	}
	if this.TriggeredBy == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("TriggeredBy", fmt.Errorf(`value '%v' must not be an empty string`, this.TriggeredBy))
	}
	return nil
}
