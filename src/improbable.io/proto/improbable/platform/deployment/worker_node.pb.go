// Code generated by protoc-gen-go. DO NOT EDIT.
// source: improbable/platform/deployment/worker_node.proto

package improbable_platform_deployment

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/improbable-io/go-proto-logfields"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	platform "improbable.io/proto/improbable/platform"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WorkerNodeState int32

const (
	WorkerNodeState_UNKNOWN_WORKER_NODE_STATE WorkerNodeState = 0
	WorkerNodeState_CONFIGURED                WorkerNodeState = 1
	WorkerNodeState_PROVISIONED               WorkerNodeState = 2
	WorkerNodeState_RUNNING                   WorkerNodeState = 3
	WorkerNodeState_HEALTHY                   WorkerNodeState = 4
)

var WorkerNodeState_name = map[int32]string{
	0: "UNKNOWN_WORKER_NODE_STATE",
	1: "CONFIGURED",
	2: "PROVISIONED",
	3: "RUNNING",
	4: "HEALTHY",
}

var WorkerNodeState_value = map[string]int32{
	"UNKNOWN_WORKER_NODE_STATE": 0,
	"CONFIGURED":                1,
	"PROVISIONED":               2,
	"RUNNING":                   3,
	"HEALTHY":                   4,
}

func (x WorkerNodeState) String() string {
	return proto.EnumName(WorkerNodeState_name, int32(x))
}

func (WorkerNodeState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cc1fe6125979b559, []int{0}
}

type WorkerNodeId struct {
	DeploymentId         *DeploymentId `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	Name                 string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *WorkerNodeId) Reset()         { *m = WorkerNodeId{} }
func (m *WorkerNodeId) String() string { return proto.CompactTextString(m) }
func (*WorkerNodeId) ProtoMessage()    {}
func (*WorkerNodeId) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc1fe6125979b559, []int{0}
}

func (m *WorkerNodeId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkerNodeId.Unmarshal(m, b)
}
func (m *WorkerNodeId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkerNodeId.Marshal(b, m, deterministic)
}
func (m *WorkerNodeId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkerNodeId.Merge(m, src)
}
func (m *WorkerNodeId) XXX_Size() int {
	return xxx_messageInfo_WorkerNodeId.Size(m)
}
func (m *WorkerNodeId) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkerNodeId.DiscardUnknown(m)
}

var xxx_messageInfo_WorkerNodeId proto.InternalMessageInfo

func (m *WorkerNodeId) GetDeploymentId() *DeploymentId {
	if m != nil {
		return m.DeploymentId
	}
	return nil
}

func (m *WorkerNodeId) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type WorkerNode struct {
	WorkerNodeId         *WorkerNodeId          `protobuf:"bytes,1,opt,name=worker_node_id,json=workerNodeId,proto3" json:"worker_node_id,omitempty"`
	Size                 string                 `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	State                WorkerNodeState        `protobuf:"varint,3,opt,name=state,proto3,enum=improbable.platform.deployment.WorkerNodeState" json:"state,omitempty"`
	PrivateIp            string                 `protobuf:"bytes,4,opt,name=private_ip,json=privateIp,proto3" json:"private_ip,omitempty"`
	GrpcPort             int32                  `protobuf:"varint,5,opt,name=grpc_port,json=grpcPort,proto3" json:"grpc_port,omitempty"`
	Privileged           bool                   `protobuf:"varint,6,opt,name=privileged,proto3" json:"privileged,omitempty"`
	LastMachineError     *platform.GenericError `protobuf:"bytes,7,opt,name=lastMachineError,proto3" json:"lastMachineError,omitempty"`
	UploadCrashDumps     bool                   `protobuf:"varint,8,opt,name=upload_crash_dumps,json=uploadCrashDumps,proto3" json:"upload_crash_dumps,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *WorkerNode) Reset()         { *m = WorkerNode{} }
func (m *WorkerNode) String() string { return proto.CompactTextString(m) }
func (*WorkerNode) ProtoMessage()    {}
func (*WorkerNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc1fe6125979b559, []int{1}
}

func (m *WorkerNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkerNode.Unmarshal(m, b)
}
func (m *WorkerNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkerNode.Marshal(b, m, deterministic)
}
func (m *WorkerNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkerNode.Merge(m, src)
}
func (m *WorkerNode) XXX_Size() int {
	return xxx_messageInfo_WorkerNode.Size(m)
}
func (m *WorkerNode) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkerNode.DiscardUnknown(m)
}

var xxx_messageInfo_WorkerNode proto.InternalMessageInfo

func (m *WorkerNode) GetWorkerNodeId() *WorkerNodeId {
	if m != nil {
		return m.WorkerNodeId
	}
	return nil
}

func (m *WorkerNode) GetSize() string {
	if m != nil {
		return m.Size
	}
	return ""
}

func (m *WorkerNode) GetState() WorkerNodeState {
	if m != nil {
		return m.State
	}
	return WorkerNodeState_UNKNOWN_WORKER_NODE_STATE
}

func (m *WorkerNode) GetPrivateIp() string {
	if m != nil {
		return m.PrivateIp
	}
	return ""
}

func (m *WorkerNode) GetGrpcPort() int32 {
	if m != nil {
		return m.GrpcPort
	}
	return 0
}

func (m *WorkerNode) GetPrivileged() bool {
	if m != nil {
		return m.Privileged
	}
	return false
}

func (m *WorkerNode) GetLastMachineError() *platform.GenericError {
	if m != nil {
		return m.LastMachineError
	}
	return nil
}

func (m *WorkerNode) GetUploadCrashDumps() bool {
	if m != nil {
		return m.UploadCrashDumps
	}
	return false
}

type CreateMultiWorkerNodeRequest struct {
	DeploymentId         *DeploymentId `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	WorkerNodes          []*WorkerNode `protobuf:"bytes,2,rep,name=worker_nodes,json=workerNodes,proto3" json:"worker_nodes,omitempty"`
	DeploymentUuid       int64         `protobuf:"varint,3,opt,name=deployment_uuid,json=deploymentUuid,proto3" json:"deployment_uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CreateMultiWorkerNodeRequest) Reset()         { *m = CreateMultiWorkerNodeRequest{} }
func (m *CreateMultiWorkerNodeRequest) String() string { return proto.CompactTextString(m) }
func (*CreateMultiWorkerNodeRequest) ProtoMessage()    {}
func (*CreateMultiWorkerNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc1fe6125979b559, []int{2}
}

func (m *CreateMultiWorkerNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateMultiWorkerNodeRequest.Unmarshal(m, b)
}
func (m *CreateMultiWorkerNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateMultiWorkerNodeRequest.Marshal(b, m, deterministic)
}
func (m *CreateMultiWorkerNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateMultiWorkerNodeRequest.Merge(m, src)
}
func (m *CreateMultiWorkerNodeRequest) XXX_Size() int {
	return xxx_messageInfo_CreateMultiWorkerNodeRequest.Size(m)
}
func (m *CreateMultiWorkerNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateMultiWorkerNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateMultiWorkerNodeRequest proto.InternalMessageInfo

func (m *CreateMultiWorkerNodeRequest) GetDeploymentId() *DeploymentId {
	if m != nil {
		return m.DeploymentId
	}
	return nil
}

func (m *CreateMultiWorkerNodeRequest) GetWorkerNodes() []*WorkerNode {
	if m != nil {
		return m.WorkerNodes
	}
	return nil
}

func (m *CreateMultiWorkerNodeRequest) GetDeploymentUuid() int64 {
	if m != nil {
		return m.DeploymentUuid
	}
	return 0
}

type CreateMultiWorkerNodeResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateMultiWorkerNodeResponse) Reset()         { *m = CreateMultiWorkerNodeResponse{} }
func (m *CreateMultiWorkerNodeResponse) String() string { return proto.CompactTextString(m) }
func (*CreateMultiWorkerNodeResponse) ProtoMessage()    {}
func (*CreateMultiWorkerNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc1fe6125979b559, []int{3}
}

func (m *CreateMultiWorkerNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateMultiWorkerNodeResponse.Unmarshal(m, b)
}
func (m *CreateMultiWorkerNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateMultiWorkerNodeResponse.Marshal(b, m, deterministic)
}
func (m *CreateMultiWorkerNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateMultiWorkerNodeResponse.Merge(m, src)
}
func (m *CreateMultiWorkerNodeResponse) XXX_Size() int {
	return xxx_messageInfo_CreateMultiWorkerNodeResponse.Size(m)
}
func (m *CreateMultiWorkerNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateMultiWorkerNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateMultiWorkerNodeResponse proto.InternalMessageInfo

type ListWorkerNodesRequest struct {
	DeploymentId         *DeploymentId `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListWorkerNodesRequest) Reset()         { *m = ListWorkerNodesRequest{} }
func (m *ListWorkerNodesRequest) String() string { return proto.CompactTextString(m) }
func (*ListWorkerNodesRequest) ProtoMessage()    {}
func (*ListWorkerNodesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc1fe6125979b559, []int{4}
}

func (m *ListWorkerNodesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListWorkerNodesRequest.Unmarshal(m, b)
}
func (m *ListWorkerNodesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListWorkerNodesRequest.Marshal(b, m, deterministic)
}
func (m *ListWorkerNodesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListWorkerNodesRequest.Merge(m, src)
}
func (m *ListWorkerNodesRequest) XXX_Size() int {
	return xxx_messageInfo_ListWorkerNodesRequest.Size(m)
}
func (m *ListWorkerNodesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListWorkerNodesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListWorkerNodesRequest proto.InternalMessageInfo

func (m *ListWorkerNodesRequest) GetDeploymentId() *DeploymentId {
	if m != nil {
		return m.DeploymentId
	}
	return nil
}

type ListWorkerNodesResponse struct {
	WorkerNodes          []*WorkerNode `protobuf:"bytes,1,rep,name=worker_nodes,json=workerNodes,proto3" json:"worker_nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListWorkerNodesResponse) Reset()         { *m = ListWorkerNodesResponse{} }
func (m *ListWorkerNodesResponse) String() string { return proto.CompactTextString(m) }
func (*ListWorkerNodesResponse) ProtoMessage()    {}
func (*ListWorkerNodesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc1fe6125979b559, []int{5}
}

func (m *ListWorkerNodesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListWorkerNodesResponse.Unmarshal(m, b)
}
func (m *ListWorkerNodesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListWorkerNodesResponse.Marshal(b, m, deterministic)
}
func (m *ListWorkerNodesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListWorkerNodesResponse.Merge(m, src)
}
func (m *ListWorkerNodesResponse) XXX_Size() int {
	return xxx_messageInfo_ListWorkerNodesResponse.Size(m)
}
func (m *ListWorkerNodesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListWorkerNodesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListWorkerNodesResponse proto.InternalMessageInfo

func (m *ListWorkerNodesResponse) GetWorkerNodes() []*WorkerNode {
	if m != nil {
		return m.WorkerNodes
	}
	return nil
}

type SetAllWorkerNodeStateRequest struct {
	DeploymentId         *DeploymentId   `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	State                WorkerNodeState `protobuf:"varint,2,opt,name=state,proto3,enum=improbable.platform.deployment.WorkerNodeState" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SetAllWorkerNodeStateRequest) Reset()         { *m = SetAllWorkerNodeStateRequest{} }
func (m *SetAllWorkerNodeStateRequest) String() string { return proto.CompactTextString(m) }
func (*SetAllWorkerNodeStateRequest) ProtoMessage()    {}
func (*SetAllWorkerNodeStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc1fe6125979b559, []int{6}
}

func (m *SetAllWorkerNodeStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetAllWorkerNodeStateRequest.Unmarshal(m, b)
}
func (m *SetAllWorkerNodeStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetAllWorkerNodeStateRequest.Marshal(b, m, deterministic)
}
func (m *SetAllWorkerNodeStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetAllWorkerNodeStateRequest.Merge(m, src)
}
func (m *SetAllWorkerNodeStateRequest) XXX_Size() int {
	return xxx_messageInfo_SetAllWorkerNodeStateRequest.Size(m)
}
func (m *SetAllWorkerNodeStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetAllWorkerNodeStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetAllWorkerNodeStateRequest proto.InternalMessageInfo

func (m *SetAllWorkerNodeStateRequest) GetDeploymentId() *DeploymentId {
	if m != nil {
		return m.DeploymentId
	}
	return nil
}

func (m *SetAllWorkerNodeStateRequest) GetState() WorkerNodeState {
	if m != nil {
		return m.State
	}
	return WorkerNodeState_UNKNOWN_WORKER_NODE_STATE
}

type SetAllWorkerNodeStateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetAllWorkerNodeStateResponse) Reset()         { *m = SetAllWorkerNodeStateResponse{} }
func (m *SetAllWorkerNodeStateResponse) String() string { return proto.CompactTextString(m) }
func (*SetAllWorkerNodeStateResponse) ProtoMessage()    {}
func (*SetAllWorkerNodeStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc1fe6125979b559, []int{7}
}

func (m *SetAllWorkerNodeStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetAllWorkerNodeStateResponse.Unmarshal(m, b)
}
func (m *SetAllWorkerNodeStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetAllWorkerNodeStateResponse.Marshal(b, m, deterministic)
}
func (m *SetAllWorkerNodeStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetAllWorkerNodeStateResponse.Merge(m, src)
}
func (m *SetAllWorkerNodeStateResponse) XXX_Size() int {
	return xxx_messageInfo_SetAllWorkerNodeStateResponse.Size(m)
}
func (m *SetAllWorkerNodeStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetAllWorkerNodeStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetAllWorkerNodeStateResponse proto.InternalMessageInfo

type GetWorkerNodeCredsRequest struct {
	DeploymentId         *DeploymentId `protobuf:"bytes,2,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	WorkerName           string        `protobuf:"bytes,3,opt,name=WorkerName,proto3" json:"WorkerName,omitempty"`
	SecureFlow           bool          `protobuf:"varint,4,opt,name=secure_flow,json=secureFlow,proto3" json:"secure_flow,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetWorkerNodeCredsRequest) Reset()         { *m = GetWorkerNodeCredsRequest{} }
func (m *GetWorkerNodeCredsRequest) String() string { return proto.CompactTextString(m) }
func (*GetWorkerNodeCredsRequest) ProtoMessage()    {}
func (*GetWorkerNodeCredsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc1fe6125979b559, []int{8}
}

func (m *GetWorkerNodeCredsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWorkerNodeCredsRequest.Unmarshal(m, b)
}
func (m *GetWorkerNodeCredsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWorkerNodeCredsRequest.Marshal(b, m, deterministic)
}
func (m *GetWorkerNodeCredsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWorkerNodeCredsRequest.Merge(m, src)
}
func (m *GetWorkerNodeCredsRequest) XXX_Size() int {
	return xxx_messageInfo_GetWorkerNodeCredsRequest.Size(m)
}
func (m *GetWorkerNodeCredsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWorkerNodeCredsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetWorkerNodeCredsRequest proto.InternalMessageInfo

func (m *GetWorkerNodeCredsRequest) GetDeploymentId() *DeploymentId {
	if m != nil {
		return m.DeploymentId
	}
	return nil
}

func (m *GetWorkerNodeCredsRequest) GetWorkerName() string {
	if m != nil {
		return m.WorkerName
	}
	return ""
}

func (m *GetWorkerNodeCredsRequest) GetSecureFlow() bool {
	if m != nil {
		return m.SecureFlow
	}
	return false
}

type GetWorkerNodeCredsResponse struct {
	PublicCert           []byte   `protobuf:"bytes,1,opt,name=public_cert,json=publicCert,proto3" json:"public_cert,omitempty"`
	Ip                   string   `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	GrpcTlsPort          int32    `protobuf:"varint,3,opt,name=grpc_tls_port,json=grpcTlsPort,proto3" json:"grpc_tls_port,omitempty"`
	SignedToken          string   `protobuf:"bytes,4,opt,name=signed_token,json=signedToken,proto3" json:"signed_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetWorkerNodeCredsResponse) Reset()         { *m = GetWorkerNodeCredsResponse{} }
func (m *GetWorkerNodeCredsResponse) String() string { return proto.CompactTextString(m) }
func (*GetWorkerNodeCredsResponse) ProtoMessage()    {}
func (*GetWorkerNodeCredsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc1fe6125979b559, []int{9}
}

func (m *GetWorkerNodeCredsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWorkerNodeCredsResponse.Unmarshal(m, b)
}
func (m *GetWorkerNodeCredsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWorkerNodeCredsResponse.Marshal(b, m, deterministic)
}
func (m *GetWorkerNodeCredsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWorkerNodeCredsResponse.Merge(m, src)
}
func (m *GetWorkerNodeCredsResponse) XXX_Size() int {
	return xxx_messageInfo_GetWorkerNodeCredsResponse.Size(m)
}
func (m *GetWorkerNodeCredsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWorkerNodeCredsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetWorkerNodeCredsResponse proto.InternalMessageInfo

func (m *GetWorkerNodeCredsResponse) GetPublicCert() []byte {
	if m != nil {
		return m.PublicCert
	}
	return nil
}

func (m *GetWorkerNodeCredsResponse) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *GetWorkerNodeCredsResponse) GetGrpcTlsPort() int32 {
	if m != nil {
		return m.GrpcTlsPort
	}
	return 0
}

func (m *GetWorkerNodeCredsResponse) GetSignedToken() string {
	if m != nil {
		return m.SignedToken
	}
	return ""
}

func init() {
	proto.RegisterEnum("improbable.platform.deployment.WorkerNodeState", WorkerNodeState_name, WorkerNodeState_value)
	proto.RegisterType((*WorkerNodeId)(nil), "improbable.platform.deployment.WorkerNodeId")
	proto.RegisterType((*WorkerNode)(nil), "improbable.platform.deployment.WorkerNode")
	proto.RegisterType((*CreateMultiWorkerNodeRequest)(nil), "improbable.platform.deployment.CreateMultiWorkerNodeRequest")
	proto.RegisterType((*CreateMultiWorkerNodeResponse)(nil), "improbable.platform.deployment.CreateMultiWorkerNodeResponse")
	proto.RegisterType((*ListWorkerNodesRequest)(nil), "improbable.platform.deployment.ListWorkerNodesRequest")
	proto.RegisterType((*ListWorkerNodesResponse)(nil), "improbable.platform.deployment.ListWorkerNodesResponse")
	proto.RegisterType((*SetAllWorkerNodeStateRequest)(nil), "improbable.platform.deployment.SetAllWorkerNodeStateRequest")
	proto.RegisterType((*SetAllWorkerNodeStateResponse)(nil), "improbable.platform.deployment.SetAllWorkerNodeStateResponse")
	proto.RegisterType((*GetWorkerNodeCredsRequest)(nil), "improbable.platform.deployment.GetWorkerNodeCredsRequest")
	proto.RegisterType((*GetWorkerNodeCredsResponse)(nil), "improbable.platform.deployment.GetWorkerNodeCredsResponse")
}

func init() {
	proto.RegisterFile("improbable/platform/deployment/worker_node.proto", fileDescriptor_cc1fe6125979b559)
}

var fileDescriptor_cc1fe6125979b559 = []byte{
	// 843 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0x41, 0x73, 0xdb, 0x44,
	0x14, 0x46, 0xb6, 0xd3, 0x3a, 0x4f, 0xae, 0x6d, 0x96, 0x01, 0x54, 0xd3, 0x24, 0xae, 0x4e, 0x9e,
	0xd2, 0xd8, 0x4c, 0x98, 0x81, 0x01, 0xca, 0x21, 0xd8, 0x6e, 0x6a, 0xda, 0xc8, 0x65, 0xe3, 0x90,
	0xe1, 0xa4, 0x91, 0xa5, 0x17, 0x7b, 0x27, 0xb2, 0x56, 0xec, 0xae, 0x9a, 0x81, 0x23, 0x57, 0xae,
	0xf9, 0x05, 0x5c, 0x39, 0x33, 0xc3, 0x0f, 0xe1, 0xf7, 0x30, 0x8c, 0x24, 0x63, 0x69, 0x12, 0xc7,
	0x6e, 0x93, 0xc9, 0x6d, 0xf5, 0x76, 0xbf, 0x7d, 0xdf, 0x7b, 0xdf, 0xdb, 0x6f, 0x04, 0x9f, 0xb1,
	0x59, 0x28, 0xf8, 0xd8, 0x19, 0xfb, 0xd8, 0x09, 0x7d, 0x47, 0x9d, 0x72, 0x31, 0xeb, 0x78, 0x18,
	0xfa, 0xfc, 0x97, 0x19, 0x06, 0xaa, 0x73, 0xce, 0xc5, 0x19, 0x0a, 0x3b, 0xe0, 0x1e, 0xb6, 0x43,
	0xc1, 0x15, 0x27, 0xdb, 0x19, 0xa2, 0xfd, 0x3f, 0xa2, 0x9d, 0x21, 0x1a, 0x9f, 0xae, 0xb9, 0x51,
	0x4e, 0x1d, 0x81, 0x5e, 0x7a, 0x59, 0xa3, 0xb9, 0xec, 0xb0, 0xcb, 0x67, 0x33, 0x1e, 0xcc, 0x4f,
	0x7c, 0x33, 0x61, 0x6a, 0x1a, 0x8d, 0xdb, 0x2e, 0x9f, 0x75, 0xb2, 0xc3, 0xbb, 0x8c, 0x77, 0x26,
	0x7c, 0x37, 0x39, 0xb2, 0xeb, 0xf3, 0xc9, 0x29, 0x43, 0xdf, 0x93, 0x9d, 0xc5, 0x2a, 0x05, 0x9b,
	0x11, 0x54, 0x4e, 0x92, 0x02, 0x2c, 0xee, 0xe1, 0xc0, 0x23, 0x3f, 0xc0, 0x83, 0x8c, 0x89, 0xcd,
	0x3c, 0x43, 0x6b, 0x6a, 0x2d, 0x7d, 0xef, 0x69, 0x7b, 0x75, 0x4d, 0xed, 0xde, 0x62, 0x39, 0xf0,
	0x68, 0xc5, 0xcb, 0x7d, 0x11, 0x02, 0xa5, 0xc0, 0x99, 0xa1, 0x51, 0x68, 0x6a, 0xad, 0x4d, 0x9a,
	0xac, 0xcd, 0x8b, 0x22, 0x40, 0x96, 0x97, 0x50, 0xa8, 0xe6, 0xda, 0xf8, 0x0e, 0x69, 0xf3, 0xdc,
	0x69, 0xe5, 0x3c, 0x5f, 0x09, 0x81, 0x92, 0x64, 0xbf, 0x2e, 0xd2, 0xc6, 0x6b, 0xd2, 0x87, 0x0d,
	0xa9, 0x1c, 0x85, 0x46, 0xb1, 0xa9, 0xb5, 0xaa, 0x7b, 0x9d, 0xb7, 0xbf, 0xfe, 0x28, 0x86, 0xd1,
	0x14, 0x4d, 0xb6, 0x00, 0x42, 0xc1, 0xde, 0x38, 0x0a, 0x6d, 0x16, 0x1a, 0xa5, 0x24, 0xc1, 0xe6,
	0x3c, 0x32, 0x08, 0xc9, 0x27, 0xb0, 0x39, 0x11, 0xa1, 0x6b, 0x87, 0x5c, 0x28, 0x63, 0xa3, 0xa9,
	0xb5, 0x36, 0x68, 0x39, 0x0e, 0xbc, 0xe6, 0x42, 0x91, 0xed, 0x14, 0xcb, 0x7c, 0x9c, 0xa0, 0x67,
	0xdc, 0x6b, 0x6a, 0xad, 0x32, 0xcd, 0x45, 0xc8, 0x21, 0xd4, 0x7d, 0x47, 0xaa, 0x43, 0xc7, 0x9d,
	0xb2, 0x00, 0xfb, 0x42, 0x70, 0x61, 0xdc, 0x4f, 0x9a, 0xf1, 0x78, 0x29, 0xdb, 0x03, 0x0c, 0x50,
	0x30, 0x37, 0x39, 0x48, 0xaf, 0x40, 0xc9, 0x53, 0x20, 0x51, 0xe8, 0x73, 0xc7, 0xb3, 0x5d, 0xe1,
	0xc8, 0xa9, 0xed, 0x45, 0xb3, 0x50, 0x1a, 0xe5, 0x24, 0x6d, 0x3d, 0xdd, 0xe9, 0xc6, 0x1b, 0xbd,
	0x38, 0x6e, 0xfe, 0xab, 0xc1, 0xa3, 0xae, 0x40, 0x47, 0xe1, 0x61, 0xe4, 0x2b, 0x96, 0x95, 0x4f,
	0xf1, 0xe7, 0x08, 0xa5, 0xba, 0x8b, 0xf1, 0x38, 0x84, 0x4a, 0x4e, 0x7b, 0x69, 0x14, 0x9a, 0xc5,
	0x96, 0xbe, 0xf7, 0xe4, 0xed, 0xa5, 0xa1, 0x7a, 0xa6, 0xbb, 0x24, 0xcf, 0xa0, 0x96, 0x63, 0x18,
	0x45, 0xcc, 0x4b, 0xc4, 0x2e, 0x7e, 0xf7, 0xc1, 0x1f, 0x7f, 0x6e, 0xd7, 0x2e, 0xd1, 0xa7, 0xd5,
	0xec, 0xf3, 0x38, 0x62, 0x9e, 0xb9, 0x03, 0x5b, 0xd7, 0xd4, 0x2f, 0x43, 0x1e, 0x48, 0x34, 0xcf,
	0xe0, 0xa3, 0x57, 0x4c, 0xaa, 0x6c, 0x47, 0xde, 0x5d, 0x6b, 0xcc, 0x29, 0x7c, 0x7c, 0x25, 0x59,
	0xca, 0xe3, 0x4a, 0xd7, 0xb4, 0x5b, 0x75, 0xcd, 0xfc, 0x5b, 0x83, 0x47, 0x47, 0xa8, 0xf6, 0x7d,
	0xff, 0xf2, 0xc8, 0xdf, 0x9d, 0xf0, 0x8b, 0xc7, 0x58, 0xb8, 0xcd, 0x63, 0x8c, 0x25, 0xbb, 0x86,
	0xf9, 0x5c, 0xb2, 0xbf, 0x34, 0x78, 0x78, 0x80, 0xb9, 0x2e, 0x76, 0x05, 0x7a, 0xd7, 0xcb, 0x56,
	0xb8, 0x75, 0x61, 0xdb, 0x0b, 0x6f, 0x8b, 0x6d, 0xaf, 0x98, 0xd8, 0x43, 0x2e, 0x42, 0x76, 0x40,
	0x97, 0xe8, 0x46, 0x02, 0xed, 0x53, 0x9f, 0x9f, 0x27, 0xfe, 0x51, 0xa6, 0x90, 0x86, 0x9e, 0xfb,
	0xfc, 0xfc, 0xfb, 0x52, 0x59, 0xab, 0x17, 0xcc, 0x0b, 0x0d, 0x1a, 0xcb, 0x78, 0xcf, 0x27, 0x60,
	0x07, 0xf4, 0x30, 0x1a, 0xfb, 0xcc, 0xb5, 0x5d, 0x14, 0x2a, 0xd1, 0xa3, 0x42, 0x21, 0x0d, 0x75,
	0x51, 0x28, 0x52, 0x85, 0x02, 0x0b, 0xe7, 0xf6, 0x57, 0x60, 0x21, 0x31, 0xe1, 0x41, 0x62, 0x4b,
	0xca, 0x97, 0xa9, 0x35, 0x15, 0x13, 0x6b, 0xd2, 0xe3, 0xe0, 0xc8, 0x97, 0x89, 0x3b, 0x3d, 0x86,
	0x8a, 0x64, 0x93, 0x00, 0x3d, 0x5b, 0xf1, 0x33, 0x0c, 0xe6, 0xde, 0xa6, 0xa7, 0xb1, 0x51, 0x1c,
	0x7a, 0x72, 0x06, 0xb5, 0x4b, 0x9d, 0x26, 0x5b, 0xf0, 0xf0, 0xd8, 0x7a, 0x69, 0x0d, 0x4f, 0x2c,
	0xfb, 0x64, 0x48, 0x5f, 0xf6, 0xa9, 0x6d, 0x0d, 0x7b, 0x7d, 0xfb, 0x68, 0xb4, 0x3f, 0xea, 0xd7,
	0xdf, 0x23, 0x55, 0x80, 0xee, 0xd0, 0x7a, 0x3e, 0x38, 0x38, 0xa6, 0xfd, 0x5e, 0x5d, 0x23, 0x35,
	0xd0, 0x5f, 0xd3, 0xe1, 0x8f, 0x83, 0xa3, 0xc1, 0xd0, 0xea, 0xf7, 0xea, 0x05, 0xa2, 0xc3, 0x7d,
	0x7a, 0x6c, 0x59, 0x03, 0xeb, 0xa0, 0x5e, 0x8c, 0x3f, 0x5e, 0xf4, 0xf7, 0x5f, 0x8d, 0x5e, 0xfc,
	0x54, 0x2f, 0xed, 0xfd, 0x53, 0x82, 0xf7, 0x73, 0xd9, 0x50, 0xbc, 0x61, 0x2e, 0x92, 0x0b, 0x0d,
	0x3e, 0x5c, 0xfa, 0x4c, 0xc9, 0xb3, 0x75, 0xb2, 0xad, 0x72, 0xb7, 0xc6, 0xb7, 0x37, 0x44, 0xcf,
	0x15, 0x89, 0x69, 0x2d, 0x1d, 0xc5, 0xf5, 0xb4, 0x56, 0xbd, 0xbd, 0xf5, 0xb4, 0x56, 0xce, 0x3f,
	0xf9, 0x4d, 0x83, 0xda, 0x25, 0x1b, 0x21, 0x5f, 0xac, 0xbb, 0x72, 0xb9, 0xc9, 0x35, 0xbe, 0x7c,
	0x67, 0xdc, 0x9c, 0xc4, 0xef, 0x1a, 0x90, 0xab, 0xc3, 0x4c, 0xbe, 0x5a, 0x77, 0xdf, 0xb5, 0x0f,
	0xb7, 0xf1, 0xf5, 0x4d, 0xa0, 0x29, 0x9b, 0xf1, 0xbd, 0xe4, 0xe7, 0xe7, 0xf3, 0xff, 0x02, 0x00,
	0x00, 0xff, 0xff, 0x00, 0x5d, 0x13, 0x79, 0xdc, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// WorkerNodeServiceClient is the client API for WorkerNodeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WorkerNodeServiceClient interface {
	CreateMultiWorkerNode(ctx context.Context, in *CreateMultiWorkerNodeRequest, opts ...grpc.CallOption) (*CreateMultiWorkerNodeResponse, error)
	SetAllWorkerNodeState(ctx context.Context, in *SetAllWorkerNodeStateRequest, opts ...grpc.CallOption) (*SetAllWorkerNodeStateResponse, error)
	ListWorkerNodes(ctx context.Context, in *ListWorkerNodesRequest, opts ...grpc.CallOption) (*ListWorkerNodesResponse, error)
	GetWorkerNodeCreds(ctx context.Context, in *GetWorkerNodeCredsRequest, opts ...grpc.CallOption) (*GetWorkerNodeCredsResponse, error)
}

type workerNodeServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewWorkerNodeServiceClient(cc grpc.ClientConnInterface) WorkerNodeServiceClient {
	return &workerNodeServiceClient{cc}
}

func (c *workerNodeServiceClient) CreateMultiWorkerNode(ctx context.Context, in *CreateMultiWorkerNodeRequest, opts ...grpc.CallOption) (*CreateMultiWorkerNodeResponse, error) {
	out := new(CreateMultiWorkerNodeResponse)
	err := c.cc.Invoke(ctx, "/improbable.platform.deployment.WorkerNodeService/CreateMultiWorkerNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workerNodeServiceClient) SetAllWorkerNodeState(ctx context.Context, in *SetAllWorkerNodeStateRequest, opts ...grpc.CallOption) (*SetAllWorkerNodeStateResponse, error) {
	out := new(SetAllWorkerNodeStateResponse)
	err := c.cc.Invoke(ctx, "/improbable.platform.deployment.WorkerNodeService/SetAllWorkerNodeState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workerNodeServiceClient) ListWorkerNodes(ctx context.Context, in *ListWorkerNodesRequest, opts ...grpc.CallOption) (*ListWorkerNodesResponse, error) {
	out := new(ListWorkerNodesResponse)
	err := c.cc.Invoke(ctx, "/improbable.platform.deployment.WorkerNodeService/ListWorkerNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workerNodeServiceClient) GetWorkerNodeCreds(ctx context.Context, in *GetWorkerNodeCredsRequest, opts ...grpc.CallOption) (*GetWorkerNodeCredsResponse, error) {
	out := new(GetWorkerNodeCredsResponse)
	err := c.cc.Invoke(ctx, "/improbable.platform.deployment.WorkerNodeService/GetWorkerNodeCreds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WorkerNodeServiceServer is the server API for WorkerNodeService service.
type WorkerNodeServiceServer interface {
	CreateMultiWorkerNode(context.Context, *CreateMultiWorkerNodeRequest) (*CreateMultiWorkerNodeResponse, error)
	SetAllWorkerNodeState(context.Context, *SetAllWorkerNodeStateRequest) (*SetAllWorkerNodeStateResponse, error)
	ListWorkerNodes(context.Context, *ListWorkerNodesRequest) (*ListWorkerNodesResponse, error)
	GetWorkerNodeCreds(context.Context, *GetWorkerNodeCredsRequest) (*GetWorkerNodeCredsResponse, error)
}

// UnimplementedWorkerNodeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedWorkerNodeServiceServer struct {
}

func (*UnimplementedWorkerNodeServiceServer) CreateMultiWorkerNode(ctx context.Context, req *CreateMultiWorkerNodeRequest) (*CreateMultiWorkerNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMultiWorkerNode not implemented")
}
func (*UnimplementedWorkerNodeServiceServer) SetAllWorkerNodeState(ctx context.Context, req *SetAllWorkerNodeStateRequest) (*SetAllWorkerNodeStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetAllWorkerNodeState not implemented")
}
func (*UnimplementedWorkerNodeServiceServer) ListWorkerNodes(ctx context.Context, req *ListWorkerNodesRequest) (*ListWorkerNodesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListWorkerNodes not implemented")
}
func (*UnimplementedWorkerNodeServiceServer) GetWorkerNodeCreds(ctx context.Context, req *GetWorkerNodeCredsRequest) (*GetWorkerNodeCredsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorkerNodeCreds not implemented")
}

func RegisterWorkerNodeServiceServer(s *grpc.Server, srv WorkerNodeServiceServer) {
	s.RegisterService(&_WorkerNodeService_serviceDesc, srv)
}

func _WorkerNodeService_CreateMultiWorkerNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMultiWorkerNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkerNodeServiceServer).CreateMultiWorkerNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.platform.deployment.WorkerNodeService/CreateMultiWorkerNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkerNodeServiceServer).CreateMultiWorkerNode(ctx, req.(*CreateMultiWorkerNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkerNodeService_SetAllWorkerNodeState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetAllWorkerNodeStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkerNodeServiceServer).SetAllWorkerNodeState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.platform.deployment.WorkerNodeService/SetAllWorkerNodeState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkerNodeServiceServer).SetAllWorkerNodeState(ctx, req.(*SetAllWorkerNodeStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkerNodeService_ListWorkerNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListWorkerNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkerNodeServiceServer).ListWorkerNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.platform.deployment.WorkerNodeService/ListWorkerNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkerNodeServiceServer).ListWorkerNodes(ctx, req.(*ListWorkerNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkerNodeService_GetWorkerNodeCreds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWorkerNodeCredsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkerNodeServiceServer).GetWorkerNodeCreds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.platform.deployment.WorkerNodeService/GetWorkerNodeCreds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkerNodeServiceServer).GetWorkerNodeCreds(ctx, req.(*GetWorkerNodeCredsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WorkerNodeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "improbable.platform.deployment.WorkerNodeService",
	HandlerType: (*WorkerNodeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateMultiWorkerNode",
			Handler:    _WorkerNodeService_CreateMultiWorkerNode_Handler,
		},
		{
			MethodName: "SetAllWorkerNodeState",
			Handler:    _WorkerNodeService_SetAllWorkerNodeState_Handler,
		},
		{
			MethodName: "ListWorkerNodes",
			Handler:    _WorkerNodeService_ListWorkerNodes_Handler,
		},
		{
			MethodName: "GetWorkerNodeCreds",
			Handler:    _WorkerNodeService_GetWorkerNodeCreds_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "improbable/platform/deployment/worker_node.proto",
}
