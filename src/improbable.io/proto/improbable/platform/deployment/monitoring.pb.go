// Code generated by protoc-gen-go. DO NOT EDIT.
// source: improbable/platform/deployment/monitoring.proto

package improbable_platform_deployment

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AssignDeploymentRequest struct {
	DeploymentId         *DeploymentId `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	NumberOfNodes        int32         `protobuf:"varint,2,opt,name=number_of_nodes,json=numberOfNodes,proto3" json:"number_of_nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *AssignDeploymentRequest) Reset()         { *m = AssignDeploymentRequest{} }
func (m *AssignDeploymentRequest) String() string { return proto.CompactTextString(m) }
func (*AssignDeploymentRequest) ProtoMessage()    {}
func (*AssignDeploymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a34d59fa163e083b, []int{0}
}

func (m *AssignDeploymentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignDeploymentRequest.Unmarshal(m, b)
}
func (m *AssignDeploymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignDeploymentRequest.Marshal(b, m, deterministic)
}
func (m *AssignDeploymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignDeploymentRequest.Merge(m, src)
}
func (m *AssignDeploymentRequest) XXX_Size() int {
	return xxx_messageInfo_AssignDeploymentRequest.Size(m)
}
func (m *AssignDeploymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignDeploymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AssignDeploymentRequest proto.InternalMessageInfo

func (m *AssignDeploymentRequest) GetDeploymentId() *DeploymentId {
	if m != nil {
		return m.DeploymentId
	}
	return nil
}

func (m *AssignDeploymentRequest) GetNumberOfNodes() int32 {
	if m != nil {
		return m.NumberOfNodes
	}
	return 0
}

type AssignDeploymentResponse struct {
	Simleaf              string   `protobuf:"bytes,1,opt,name=simleaf,proto3" json:"simleaf,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AssignDeploymentResponse) Reset()         { *m = AssignDeploymentResponse{} }
func (m *AssignDeploymentResponse) String() string { return proto.CompactTextString(m) }
func (*AssignDeploymentResponse) ProtoMessage()    {}
func (*AssignDeploymentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a34d59fa163e083b, []int{1}
}

func (m *AssignDeploymentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignDeploymentResponse.Unmarshal(m, b)
}
func (m *AssignDeploymentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignDeploymentResponse.Marshal(b, m, deterministic)
}
func (m *AssignDeploymentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignDeploymentResponse.Merge(m, src)
}
func (m *AssignDeploymentResponse) XXX_Size() int {
	return xxx_messageInfo_AssignDeploymentResponse.Size(m)
}
func (m *AssignDeploymentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignDeploymentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AssignDeploymentResponse proto.InternalMessageInfo

func (m *AssignDeploymentResponse) GetSimleaf() string {
	if m != nil {
		return m.Simleaf
	}
	return ""
}

type ListAssignedDeploymentsRequest struct {
	Simleaf              string   `protobuf:"bytes,1,opt,name=simleaf,proto3" json:"simleaf,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListAssignedDeploymentsRequest) Reset()         { *m = ListAssignedDeploymentsRequest{} }
func (m *ListAssignedDeploymentsRequest) String() string { return proto.CompactTextString(m) }
func (*ListAssignedDeploymentsRequest) ProtoMessage()    {}
func (*ListAssignedDeploymentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a34d59fa163e083b, []int{2}
}

func (m *ListAssignedDeploymentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAssignedDeploymentsRequest.Unmarshal(m, b)
}
func (m *ListAssignedDeploymentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAssignedDeploymentsRequest.Marshal(b, m, deterministic)
}
func (m *ListAssignedDeploymentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAssignedDeploymentsRequest.Merge(m, src)
}
func (m *ListAssignedDeploymentsRequest) XXX_Size() int {
	return xxx_messageInfo_ListAssignedDeploymentsRequest.Size(m)
}
func (m *ListAssignedDeploymentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAssignedDeploymentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListAssignedDeploymentsRequest proto.InternalMessageInfo

func (m *ListAssignedDeploymentsRequest) GetSimleaf() string {
	if m != nil {
		return m.Simleaf
	}
	return ""
}

type ListAssignedDeploymentsResponse struct {
	AssignedDeployments  []*DeploymentId `protobuf:"bytes,1,rep,name=assigned_deployments,json=assignedDeployments,proto3" json:"assigned_deployments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListAssignedDeploymentsResponse) Reset()         { *m = ListAssignedDeploymentsResponse{} }
func (m *ListAssignedDeploymentsResponse) String() string { return proto.CompactTextString(m) }
func (*ListAssignedDeploymentsResponse) ProtoMessage()    {}
func (*ListAssignedDeploymentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a34d59fa163e083b, []int{3}
}

func (m *ListAssignedDeploymentsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAssignedDeploymentsResponse.Unmarshal(m, b)
}
func (m *ListAssignedDeploymentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAssignedDeploymentsResponse.Marshal(b, m, deterministic)
}
func (m *ListAssignedDeploymentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAssignedDeploymentsResponse.Merge(m, src)
}
func (m *ListAssignedDeploymentsResponse) XXX_Size() int {
	return xxx_messageInfo_ListAssignedDeploymentsResponse.Size(m)
}
func (m *ListAssignedDeploymentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAssignedDeploymentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListAssignedDeploymentsResponse proto.InternalMessageInfo

func (m *ListAssignedDeploymentsResponse) GetAssignedDeployments() []*DeploymentId {
	if m != nil {
		return m.AssignedDeployments
	}
	return nil
}

func init() {
	proto.RegisterType((*AssignDeploymentRequest)(nil), "improbable.platform.deployment.AssignDeploymentRequest")
	proto.RegisterType((*AssignDeploymentResponse)(nil), "improbable.platform.deployment.AssignDeploymentResponse")
	proto.RegisterType((*ListAssignedDeploymentsRequest)(nil), "improbable.platform.deployment.ListAssignedDeploymentsRequest")
	proto.RegisterType((*ListAssignedDeploymentsResponse)(nil), "improbable.platform.deployment.ListAssignedDeploymentsResponse")
}

func init() {
	proto.RegisterFile("improbable/platform/deployment/monitoring.proto", fileDescriptor_a34d59fa163e083b)
}

var fileDescriptor_a34d59fa163e083b = []byte{
	// 322 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0xcf, 0xcc, 0x2d, 0x28,
	0xca, 0x4f, 0x4a, 0x4c, 0xca, 0x49, 0xd5, 0x2f, 0xc8, 0x49, 0x2c, 0x49, 0xcb, 0x2f, 0xca, 0xd5,
	0x4f, 0x49, 0x2d, 0xc8, 0xc9, 0xaf, 0xcc, 0x4d, 0xcd, 0x2b, 0xd1, 0xcf, 0xcd, 0xcf, 0xcb, 0x2c,
	0xc9, 0x2f, 0xca, 0xcc, 0x4b, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x92, 0x43, 0x68, 0xd0,
	0x83, 0x69, 0xd0, 0x43, 0x68, 0x90, 0xd2, 0x26, 0x60, 0x60, 0x71, 0x46, 0x62, 0x51, 0x6a, 0x0a,
	0xc4, 0x30, 0xa5, 0x29, 0x8c, 0x5c, 0xe2, 0x8e, 0xc5, 0xc5, 0x99, 0xe9, 0x79, 0x2e, 0x70, 0x15,
	0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x81, 0x5c, 0xbc, 0x08, 0x6d, 0xf1, 0x99, 0x29,
	0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xdc, 0x46, 0x3a, 0x7a, 0xf8, 0x1d, 0xa0, 0x87, 0x30, 0xc9, 0x33,
	0x25, 0x88, 0x27, 0x05, 0x89, 0x27, 0xa4, 0xc6, 0xc5, 0x9f, 0x57, 0x9a, 0x9b, 0x94, 0x5a, 0x14,
	0x9f, 0x9f, 0x16, 0x9f, 0x97, 0x9f, 0x92, 0x5a, 0x2c, 0xc1, 0xa4, 0xc0, 0xa8, 0xc1, 0x1a, 0xc4,
	0x0b, 0x11, 0xf6, 0x4f, 0xf3, 0x03, 0x09, 0x2a, 0x99, 0x70, 0x49, 0x60, 0xba, 0xaa, 0xb8, 0x20,
	0x3f, 0xaf, 0x38, 0x55, 0x48, 0x82, 0x8b, 0xbd, 0x38, 0x33, 0x37, 0x27, 0x35, 0x31, 0x0d, 0xec,
	0x20, 0xce, 0x20, 0x18, 0x57, 0xc9, 0x8a, 0x4b, 0xce, 0x27, 0xb3, 0xb8, 0x04, 0xa2, 0x33, 0x35,
	0x05, 0xa1, 0xb7, 0x18, 0xe6, 0x25, 0xdc, 0x7a, 0x9b, 0x18, 0xb9, 0xe4, 0x71, 0x6a, 0x86, 0xda,
	0x1c, 0xcf, 0x25, 0x92, 0x08, 0x95, 0x8e, 0x47, 0x78, 0xab, 0x58, 0x82, 0x51, 0x81, 0x99, 0xe4,
	0x70, 0x11, 0x4e, 0xc4, 0xb4, 0xc8, 0x68, 0x07, 0x13, 0x97, 0xa0, 0x2f, 0x3c, 0xbe, 0x83, 0x53,
	0x8b, 0xca, 0x32, 0x93, 0x53, 0x85, 0x5a, 0x19, 0xb9, 0x04, 0xd0, 0x43, 0x43, 0xc8, 0x9c, 0x90,
	0x6d, 0x38, 0x62, 0x55, 0xca, 0x82, 0x74, 0x8d, 0x50, 0xef, 0xcf, 0x62, 0xe4, 0x12, 0xc7, 0x11,
	0x44, 0x42, 0x76, 0x84, 0x4c, 0xc5, 0x1f, 0x31, 0x52, 0xf6, 0x64, 0xeb, 0x87, 0x38, 0x2e, 0x89,
	0x0d, 0x9c, 0x9e, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xcd, 0x89, 0x19, 0xe3, 0x4f, 0x03,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MonitoringServiceClient is the client API for MonitoringService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MonitoringServiceClient interface {
	AssignDeployment(ctx context.Context, in *AssignDeploymentRequest, opts ...grpc.CallOption) (*AssignDeploymentResponse, error)
	ListAssignedDeployments(ctx context.Context, in *ListAssignedDeploymentsRequest, opts ...grpc.CallOption) (*ListAssignedDeploymentsResponse, error)
}

type monitoringServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMonitoringServiceClient(cc grpc.ClientConnInterface) MonitoringServiceClient {
	return &monitoringServiceClient{cc}
}

func (c *monitoringServiceClient) AssignDeployment(ctx context.Context, in *AssignDeploymentRequest, opts ...grpc.CallOption) (*AssignDeploymentResponse, error) {
	out := new(AssignDeploymentResponse)
	err := c.cc.Invoke(ctx, "/improbable.platform.deployment.MonitoringService/AssignDeployment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *monitoringServiceClient) ListAssignedDeployments(ctx context.Context, in *ListAssignedDeploymentsRequest, opts ...grpc.CallOption) (*ListAssignedDeploymentsResponse, error) {
	out := new(ListAssignedDeploymentsResponse)
	err := c.cc.Invoke(ctx, "/improbable.platform.deployment.MonitoringService/ListAssignedDeployments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MonitoringServiceServer is the server API for MonitoringService service.
type MonitoringServiceServer interface {
	AssignDeployment(context.Context, *AssignDeploymentRequest) (*AssignDeploymentResponse, error)
	ListAssignedDeployments(context.Context, *ListAssignedDeploymentsRequest) (*ListAssignedDeploymentsResponse, error)
}

// UnimplementedMonitoringServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMonitoringServiceServer struct {
}

func (*UnimplementedMonitoringServiceServer) AssignDeployment(ctx context.Context, req *AssignDeploymentRequest) (*AssignDeploymentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AssignDeployment not implemented")
}
func (*UnimplementedMonitoringServiceServer) ListAssignedDeployments(ctx context.Context, req *ListAssignedDeploymentsRequest) (*ListAssignedDeploymentsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAssignedDeployments not implemented")
}

func RegisterMonitoringServiceServer(s *grpc.Server, srv MonitoringServiceServer) {
	s.RegisterService(&_MonitoringService_serviceDesc, srv)
}

func _MonitoringService_AssignDeployment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AssignDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MonitoringServiceServer).AssignDeployment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.platform.deployment.MonitoringService/AssignDeployment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MonitoringServiceServer).AssignDeployment(ctx, req.(*AssignDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MonitoringService_ListAssignedDeployments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAssignedDeploymentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MonitoringServiceServer).ListAssignedDeployments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.platform.deployment.MonitoringService/ListAssignedDeployments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MonitoringServiceServer).ListAssignedDeployments(ctx, req.(*ListAssignedDeploymentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MonitoringService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "improbable.platform.deployment.MonitoringService",
	HandlerType: (*MonitoringServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AssignDeployment",
			Handler:    _MonitoringService_AssignDeployment_Handler,
		},
		{
			MethodName: "ListAssignedDeployments",
			Handler:    _MonitoringService_ListAssignedDeployments_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "improbable/platform/deployment/monitoring.proto",
}
