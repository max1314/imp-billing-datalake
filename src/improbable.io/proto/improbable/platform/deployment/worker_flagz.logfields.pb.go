// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/platform/deployment/worker_flagz.proto

package improbable_platform_deployment

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	github_com_improbable_io_go_proto_logfields "github.com/improbable-io/go-proto-logfields"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *WorkerType) LogFields() map[string]string {
	return map[string]string{}
}

func (this *WorkerType) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *WorkerFlagzId) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	deploymentIdFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.DeploymentId)
	hasInner = hasInner || len(deploymentIdFields) > 0
	workerTypeFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.WorkerType)
	hasInner = hasInner || len(workerTypeFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range deploymentIdFields {
		res[k] = v
	}
	for k, v := range workerTypeFields {
		res[k] = v
	}
	return res
}

func (this *WorkerFlagzId) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.DeploymentId, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.WorkerType, dst)
}

func (this *WorkerFlagz) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	workerFlagzIdFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.WorkerFlagzId)
	hasInner = hasInner || len(workerFlagzIdFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range workerFlagzIdFields {
		res[k] = v
	}
	return res
}

func (this *WorkerFlagz) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.WorkerFlagzId, dst)
}

func (this *ListWorkerFlagzRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	deploymentIdFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.DeploymentId)
	hasInner = hasInner || len(deploymentIdFields) > 0
	workerTypeFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.WorkerType)
	hasInner = hasInner || len(workerTypeFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range deploymentIdFields {
		res[k] = v
	}
	for k, v := range workerTypeFields {
		res[k] = v
	}
	return res
}

func (this *ListWorkerFlagzRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.DeploymentId, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.WorkerType, dst)
}

func (this *ListWorkerFlagzResponse) LogFields() map[string]string {
	return map[string]string{}
}

func (this *ListWorkerFlagzResponse) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *GetWorkerFlagzRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	workerFlagzIdFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.WorkerFlagzId)
	hasInner = hasInner || len(workerFlagzIdFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range workerFlagzIdFields {
		res[k] = v
	}
	return res
}

func (this *GetWorkerFlagzRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.WorkerFlagzId, dst)
}

func (this *GetWorkerFlagzResponse) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	workerFlagzFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.WorkerFlagz)
	hasInner = hasInner || len(workerFlagzFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range workerFlagzFields {
		res[k] = v
	}
	return res
}

func (this *GetWorkerFlagzResponse) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.WorkerFlagz, dst)
}

func (this *SetWorkerFlagzRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	workerFlagzFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.WorkerFlagz)
	hasInner = hasInner || len(workerFlagzFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range workerFlagzFields {
		res[k] = v
	}
	return res
}

func (this *SetWorkerFlagzRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.WorkerFlagz, dst)
}

func (this *SetWorkerFlagzResponse) LogFields() map[string]string {
	return map[string]string{}
}

func (this *SetWorkerFlagzResponse) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *SetAllWorkerFlagzRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	deploymentIdFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.DeploymentId)
	hasInner = hasInner || len(deploymentIdFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range deploymentIdFields {
		res[k] = v
	}
	return res
}

func (this *SetAllWorkerFlagzRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.DeploymentId, dst)
}

func (this *SetAllWorkerFlagzResponse) LogFields() map[string]string {
	return map[string]string{}
}

func (this *SetAllWorkerFlagzResponse) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *DeleteWorkerFlagzRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	workerFlagzIdFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.WorkerFlagzId)
	hasInner = hasInner || len(workerFlagzIdFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range workerFlagzIdFields {
		res[k] = v
	}
	return res
}

func (this *DeleteWorkerFlagzRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.WorkerFlagzId, dst)
}

func (this *DeleteWorkerFlagzResponse) LogFields() map[string]string {
	return map[string]string{}
}

func (this *DeleteWorkerFlagzResponse) ExtractRequestFields(dst map[string]interface{}) {
}
