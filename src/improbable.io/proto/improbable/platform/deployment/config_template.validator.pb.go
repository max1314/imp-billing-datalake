// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/platform/deployment/config_template.proto

package improbable_platform_deployment

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	_ "improbable.io/proto/improbable/platform"
	math "math"
	regexp "regexp"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

var _regex_CreateTemplateRequest_Name = regexp.MustCompile(`^[a-zA-Z0-9_]{1,}$`)

func (this *CreateTemplateRequest) Validate() error {
	if !_regex_CreateTemplateRequest_Name.MatchString(this.Name) {
		return github_com_mwitkow_go_proto_validators.FieldError("Name", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-zA-Z0-9_]{1,}$"`, this.Name))
	}
	if nil == this.ProjectId {
		return github_com_mwitkow_go_proto_validators.FieldError("ProjectId", fmt.Errorf("message must exist"))
	}
	if this.ProjectId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ProjectId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ProjectId", err)
		}
	}
	if nil == this.Configuration {
		return github_com_mwitkow_go_proto_validators.FieldError("Configuration", fmt.Errorf("message must exist"))
	}
	if this.Configuration != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Configuration); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Configuration", err)
		}
	}
	return nil
}

var _regex_CreateBaseTemplateRequest_Name = regexp.MustCompile(`^[a-zA-Z0-9_]{1,}$`)

func (this *CreateBaseTemplateRequest) Validate() error {
	if !_regex_CreateBaseTemplateRequest_Name.MatchString(this.Name) {
		return github_com_mwitkow_go_proto_validators.FieldError("Name", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-zA-Z0-9_]{1,}$"`, this.Name))
	}
	if nil == this.Configuration {
		return github_com_mwitkow_go_proto_validators.FieldError("Configuration", fmt.Errorf("message must exist"))
	}
	if this.Configuration != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Configuration); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Configuration", err)
		}
	}
	return nil
}
func (this *CreateTemplateResponse) Validate() error {
	return nil
}

var _regex_GetTemplateRequest_Name = regexp.MustCompile(`^[a-zA-Z0-9_]{1,}$`)

func (this *GetTemplateRequest) Validate() error {
	if !_regex_GetTemplateRequest_Name.MatchString(this.Name) {
		return github_com_mwitkow_go_proto_validators.FieldError("Name", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-zA-Z0-9_]{1,}$"`, this.Name))
	}
	if this.ProjectId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ProjectId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ProjectId", err)
		}
	}
	return nil
}
func (this *GetTemplateResponse) Validate() error {
	if this.Configuration != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Configuration); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Configuration", err)
		}
	}
	return nil
}
func (this *FromLaunchConfigurationRequest) Validate() error {
	if this.ProjectId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ProjectId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ProjectId", err)
		}
	}
	if nil == this.LaunchConfiguration {
		return github_com_mwitkow_go_proto_validators.FieldError("LaunchConfiguration", fmt.Errorf("message must exist"))
	}
	if this.LaunchConfiguration != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.LaunchConfiguration); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("LaunchConfiguration", err)
		}
	}
	return nil
}
func (this *FromLaunchConfigurationResponse) Validate() error {
	if this.Configuration != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Configuration); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Configuration", err)
		}
	}
	return nil
}
