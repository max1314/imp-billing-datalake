// Code generated by protoc-gen-go. DO NOT EDIT.
// source: improbable/platform/deployment/archive.proto

package improbable_platform_deployment

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	platform "improbable.io/proto/improbable/platform"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ArchiveConfigurationGetRequest struct {
	DeploymentId         *DeploymentId `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	Uuid                 string        `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ArchiveConfigurationGetRequest) Reset()         { *m = ArchiveConfigurationGetRequest{} }
func (m *ArchiveConfigurationGetRequest) String() string { return proto.CompactTextString(m) }
func (*ArchiveConfigurationGetRequest) ProtoMessage()    {}
func (*ArchiveConfigurationGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dee5bd334fd6a7c4, []int{0}
}

func (m *ArchiveConfigurationGetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArchiveConfigurationGetRequest.Unmarshal(m, b)
}
func (m *ArchiveConfigurationGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArchiveConfigurationGetRequest.Marshal(b, m, deterministic)
}
func (m *ArchiveConfigurationGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArchiveConfigurationGetRequest.Merge(m, src)
}
func (m *ArchiveConfigurationGetRequest) XXX_Size() int {
	return xxx_messageInfo_ArchiveConfigurationGetRequest.Size(m)
}
func (m *ArchiveConfigurationGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ArchiveConfigurationGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ArchiveConfigurationGetRequest proto.InternalMessageInfo

func (m *ArchiveConfigurationGetRequest) GetDeploymentId() *DeploymentId {
	if m != nil {
		return m.DeploymentId
	}
	return nil
}

func (m *ArchiveConfigurationGetRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type ArchiveConfigurationResponse struct {
	Config               *DeploymentConfiguration `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	LaunchConfig         *LaunchConfiguration     `protobuf:"bytes,2,opt,name=launch_config,json=launchConfig,proto3" json:"launch_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ArchiveConfigurationResponse) Reset()         { *m = ArchiveConfigurationResponse{} }
func (m *ArchiveConfigurationResponse) String() string { return proto.CompactTextString(m) }
func (*ArchiveConfigurationResponse) ProtoMessage()    {}
func (*ArchiveConfigurationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dee5bd334fd6a7c4, []int{1}
}

func (m *ArchiveConfigurationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArchiveConfigurationResponse.Unmarshal(m, b)
}
func (m *ArchiveConfigurationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArchiveConfigurationResponse.Marshal(b, m, deterministic)
}
func (m *ArchiveConfigurationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArchiveConfigurationResponse.Merge(m, src)
}
func (m *ArchiveConfigurationResponse) XXX_Size() int {
	return xxx_messageInfo_ArchiveConfigurationResponse.Size(m)
}
func (m *ArchiveConfigurationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ArchiveConfigurationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ArchiveConfigurationResponse proto.InternalMessageInfo

func (m *ArchiveConfigurationResponse) GetConfig() *DeploymentConfiguration {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *ArchiveConfigurationResponse) GetLaunchConfig() *LaunchConfiguration {
	if m != nil {
		return m.LaunchConfig
	}
	return nil
}

type MachineRunTimes struct {
	MachineSize          string   `protobuf:"bytes,1,opt,name=machine_size,json=machineSize,proto3" json:"machine_size,omitempty"`
	Time                 int32    `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MachineRunTimes) Reset()         { *m = MachineRunTimes{} }
func (m *MachineRunTimes) String() string { return proto.CompactTextString(m) }
func (*MachineRunTimes) ProtoMessage()    {}
func (*MachineRunTimes) Descriptor() ([]byte, []int) {
	return fileDescriptor_dee5bd334fd6a7c4, []int{2}
}

func (m *MachineRunTimes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineRunTimes.Unmarshal(m, b)
}
func (m *MachineRunTimes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineRunTimes.Marshal(b, m, deterministic)
}
func (m *MachineRunTimes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineRunTimes.Merge(m, src)
}
func (m *MachineRunTimes) XXX_Size() int {
	return xxx_messageInfo_MachineRunTimes.Size(m)
}
func (m *MachineRunTimes) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineRunTimes.DiscardUnknown(m)
}

var xxx_messageInfo_MachineRunTimes proto.InternalMessageInfo

func (m *MachineRunTimes) GetMachineSize() string {
	if m != nil {
		return m.MachineSize
	}
	return ""
}

func (m *MachineRunTimes) GetTime() int32 {
	if m != nil {
		return m.Time
	}
	return 0
}

type LegacyDeploymentArchive struct {
	Deployment           *Deployment          `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
	TerminationTime      *timestamp.Timestamp `protobuf:"bytes,2,opt,name=termination_time,json=terminationTime,proto3" json:"termination_time,omitempty"`
	Terminator           string               `protobuf:"bytes,3,opt,name=terminator,proto3" json:"terminator,omitempty"`
	Cause                string               `protobuf:"bytes,4,opt,name=Cause,proto3" json:"Cause,omitempty"`
	RunTimes             []*MachineRunTimes   `protobuf:"bytes,5,rep,name=run_times,json=runTimes,proto3" json:"run_times,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *LegacyDeploymentArchive) Reset()         { *m = LegacyDeploymentArchive{} }
func (m *LegacyDeploymentArchive) String() string { return proto.CompactTextString(m) }
func (*LegacyDeploymentArchive) ProtoMessage()    {}
func (*LegacyDeploymentArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_dee5bd334fd6a7c4, []int{3}
}

func (m *LegacyDeploymentArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LegacyDeploymentArchive.Unmarshal(m, b)
}
func (m *LegacyDeploymentArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LegacyDeploymentArchive.Marshal(b, m, deterministic)
}
func (m *LegacyDeploymentArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LegacyDeploymentArchive.Merge(m, src)
}
func (m *LegacyDeploymentArchive) XXX_Size() int {
	return xxx_messageInfo_LegacyDeploymentArchive.Size(m)
}
func (m *LegacyDeploymentArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_LegacyDeploymentArchive.DiscardUnknown(m)
}

var xxx_messageInfo_LegacyDeploymentArchive proto.InternalMessageInfo

func (m *LegacyDeploymentArchive) GetDeployment() *Deployment {
	if m != nil {
		return m.Deployment
	}
	return nil
}

func (m *LegacyDeploymentArchive) GetTerminationTime() *timestamp.Timestamp {
	if m != nil {
		return m.TerminationTime
	}
	return nil
}

func (m *LegacyDeploymentArchive) GetTerminator() string {
	if m != nil {
		return m.Terminator
	}
	return ""
}

func (m *LegacyDeploymentArchive) GetCause() string {
	if m != nil {
		return m.Cause
	}
	return ""
}

func (m *LegacyDeploymentArchive) GetRunTimes() []*MachineRunTimes {
	if m != nil {
		return m.RunTimes
	}
	return nil
}

type DeploymentArchive struct {
	Deployment           *Deployment              `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
	TerminationTime      *timestamp.Timestamp     `protobuf:"bytes,2,opt,name=termination_time,json=terminationTime,proto3" json:"termination_time,omitempty"`
	Terminator           string                   `protobuf:"bytes,3,opt,name=terminator,proto3" json:"terminator,omitempty"`
	Cause                string                   `protobuf:"bytes,4,opt,name=Cause,proto3" json:"Cause,omitempty"`
	Uuid                 string                   `protobuf:"bytes,5,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Config               *DeploymentConfiguration `protobuf:"bytes,6,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *DeploymentArchive) Reset()         { *m = DeploymentArchive{} }
func (m *DeploymentArchive) String() string { return proto.CompactTextString(m) }
func (*DeploymentArchive) ProtoMessage()    {}
func (*DeploymentArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_dee5bd334fd6a7c4, []int{4}
}

func (m *DeploymentArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeploymentArchive.Unmarshal(m, b)
}
func (m *DeploymentArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeploymentArchive.Marshal(b, m, deterministic)
}
func (m *DeploymentArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeploymentArchive.Merge(m, src)
}
func (m *DeploymentArchive) XXX_Size() int {
	return xxx_messageInfo_DeploymentArchive.Size(m)
}
func (m *DeploymentArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_DeploymentArchive.DiscardUnknown(m)
}

var xxx_messageInfo_DeploymentArchive proto.InternalMessageInfo

func (m *DeploymentArchive) GetDeployment() *Deployment {
	if m != nil {
		return m.Deployment
	}
	return nil
}

func (m *DeploymentArchive) GetTerminationTime() *timestamp.Timestamp {
	if m != nil {
		return m.TerminationTime
	}
	return nil
}

func (m *DeploymentArchive) GetTerminator() string {
	if m != nil {
		return m.Terminator
	}
	return ""
}

func (m *DeploymentArchive) GetCause() string {
	if m != nil {
		return m.Cause
	}
	return ""
}

func (m *DeploymentArchive) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *DeploymentArchive) GetConfig() *DeploymentConfiguration {
	if m != nil {
		return m.Config
	}
	return nil
}

type ArchiveListAllRequest struct {
	TerminatedBefore     *timestamp.Timestamp `protobuf:"bytes,1,opt,name=terminated_before,json=terminatedBefore,proto3" json:"terminated_before,omitempty"`
	TerminatedAfter      *timestamp.Timestamp `protobuf:"bytes,2,opt,name=terminated_after,json=terminatedAfter,proto3" json:"terminated_after,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ArchiveListAllRequest) Reset()         { *m = ArchiveListAllRequest{} }
func (m *ArchiveListAllRequest) String() string { return proto.CompactTextString(m) }
func (*ArchiveListAllRequest) ProtoMessage()    {}
func (*ArchiveListAllRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dee5bd334fd6a7c4, []int{5}
}

func (m *ArchiveListAllRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArchiveListAllRequest.Unmarshal(m, b)
}
func (m *ArchiveListAllRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArchiveListAllRequest.Marshal(b, m, deterministic)
}
func (m *ArchiveListAllRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArchiveListAllRequest.Merge(m, src)
}
func (m *ArchiveListAllRequest) XXX_Size() int {
	return xxx_messageInfo_ArchiveListAllRequest.Size(m)
}
func (m *ArchiveListAllRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ArchiveListAllRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ArchiveListAllRequest proto.InternalMessageInfo

func (m *ArchiveListAllRequest) GetTerminatedBefore() *timestamp.Timestamp {
	if m != nil {
		return m.TerminatedBefore
	}
	return nil
}

func (m *ArchiveListAllRequest) GetTerminatedAfter() *timestamp.Timestamp {
	if m != nil {
		return m.TerminatedAfter
	}
	return nil
}

type ArchiveListProjectRequest struct {
	TerminatedBefore     *timestamp.Timestamp `protobuf:"bytes,1,opt,name=terminated_before,json=terminatedBefore,proto3" json:"terminated_before,omitempty"`
	TerminatedAfter      *timestamp.Timestamp `protobuf:"bytes,2,opt,name=terminated_after,json=terminatedAfter,proto3" json:"terminated_after,omitempty"`
	ProjectId            *platform.ProjectId  `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ArchiveListProjectRequest) Reset()         { *m = ArchiveListProjectRequest{} }
func (m *ArchiveListProjectRequest) String() string { return proto.CompactTextString(m) }
func (*ArchiveListProjectRequest) ProtoMessage()    {}
func (*ArchiveListProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dee5bd334fd6a7c4, []int{6}
}

func (m *ArchiveListProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArchiveListProjectRequest.Unmarshal(m, b)
}
func (m *ArchiveListProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArchiveListProjectRequest.Marshal(b, m, deterministic)
}
func (m *ArchiveListProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArchiveListProjectRequest.Merge(m, src)
}
func (m *ArchiveListProjectRequest) XXX_Size() int {
	return xxx_messageInfo_ArchiveListProjectRequest.Size(m)
}
func (m *ArchiveListProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ArchiveListProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ArchiveListProjectRequest proto.InternalMessageInfo

func (m *ArchiveListProjectRequest) GetTerminatedBefore() *timestamp.Timestamp {
	if m != nil {
		return m.TerminatedBefore
	}
	return nil
}

func (m *ArchiveListProjectRequest) GetTerminatedAfter() *timestamp.Timestamp {
	if m != nil {
		return m.TerminatedAfter
	}
	return nil
}

func (m *ArchiveListProjectRequest) GetProjectId() *platform.ProjectId {
	if m != nil {
		return m.ProjectId
	}
	return nil
}

type ArchiveListDeploymentRequest struct {
	TerminatedBefore     *timestamp.Timestamp `protobuf:"bytes,1,opt,name=terminated_before,json=terminatedBefore,proto3" json:"terminated_before,omitempty"`
	TerminatedAfter      *timestamp.Timestamp `protobuf:"bytes,2,opt,name=terminated_after,json=terminatedAfter,proto3" json:"terminated_after,omitempty"`
	Limit                uint32               `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	DeploymentId         *DeploymentId        `protobuf:"bytes,4,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ArchiveListDeploymentRequest) Reset()         { *m = ArchiveListDeploymentRequest{} }
func (m *ArchiveListDeploymentRequest) String() string { return proto.CompactTextString(m) }
func (*ArchiveListDeploymentRequest) ProtoMessage()    {}
func (*ArchiveListDeploymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dee5bd334fd6a7c4, []int{7}
}

func (m *ArchiveListDeploymentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArchiveListDeploymentRequest.Unmarshal(m, b)
}
func (m *ArchiveListDeploymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArchiveListDeploymentRequest.Marshal(b, m, deterministic)
}
func (m *ArchiveListDeploymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArchiveListDeploymentRequest.Merge(m, src)
}
func (m *ArchiveListDeploymentRequest) XXX_Size() int {
	return xxx_messageInfo_ArchiveListDeploymentRequest.Size(m)
}
func (m *ArchiveListDeploymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ArchiveListDeploymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ArchiveListDeploymentRequest proto.InternalMessageInfo

func (m *ArchiveListDeploymentRequest) GetTerminatedBefore() *timestamp.Timestamp {
	if m != nil {
		return m.TerminatedBefore
	}
	return nil
}

func (m *ArchiveListDeploymentRequest) GetTerminatedAfter() *timestamp.Timestamp {
	if m != nil {
		return m.TerminatedAfter
	}
	return nil
}

func (m *ArchiveListDeploymentRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ArchiveListDeploymentRequest) GetDeploymentId() *DeploymentId {
	if m != nil {
		return m.DeploymentId
	}
	return nil
}

type ArchiveListDeploymentWithConfigsRequest struct {
	TerminatedBefore     *timestamp.Timestamp `protobuf:"bytes,1,opt,name=terminated_before,json=terminatedBefore,proto3" json:"terminated_before,omitempty"`
	TerminatedAfter      *timestamp.Timestamp `protobuf:"bytes,2,opt,name=terminated_after,json=terminatedAfter,proto3" json:"terminated_after,omitempty"`
	DeploymentId         *DeploymentId        `protobuf:"bytes,3,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ArchiveListDeploymentWithConfigsRequest) Reset() {
	*m = ArchiveListDeploymentWithConfigsRequest{}
}
func (m *ArchiveListDeploymentWithConfigsRequest) String() string { return proto.CompactTextString(m) }
func (*ArchiveListDeploymentWithConfigsRequest) ProtoMessage()    {}
func (*ArchiveListDeploymentWithConfigsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dee5bd334fd6a7c4, []int{8}
}

func (m *ArchiveListDeploymentWithConfigsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArchiveListDeploymentWithConfigsRequest.Unmarshal(m, b)
}
func (m *ArchiveListDeploymentWithConfigsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArchiveListDeploymentWithConfigsRequest.Marshal(b, m, deterministic)
}
func (m *ArchiveListDeploymentWithConfigsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArchiveListDeploymentWithConfigsRequest.Merge(m, src)
}
func (m *ArchiveListDeploymentWithConfigsRequest) XXX_Size() int {
	return xxx_messageInfo_ArchiveListDeploymentWithConfigsRequest.Size(m)
}
func (m *ArchiveListDeploymentWithConfigsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ArchiveListDeploymentWithConfigsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ArchiveListDeploymentWithConfigsRequest proto.InternalMessageInfo

func (m *ArchiveListDeploymentWithConfigsRequest) GetTerminatedBefore() *timestamp.Timestamp {
	if m != nil {
		return m.TerminatedBefore
	}
	return nil
}

func (m *ArchiveListDeploymentWithConfigsRequest) GetTerminatedAfter() *timestamp.Timestamp {
	if m != nil {
		return m.TerminatedAfter
	}
	return nil
}

func (m *ArchiveListDeploymentWithConfigsRequest) GetDeploymentId() *DeploymentId {
	if m != nil {
		return m.DeploymentId
	}
	return nil
}

func init() {
	proto.RegisterType((*ArchiveConfigurationGetRequest)(nil), "improbable.platform.deployment.ArchiveConfigurationGetRequest")
	proto.RegisterType((*ArchiveConfigurationResponse)(nil), "improbable.platform.deployment.ArchiveConfigurationResponse")
	proto.RegisterType((*MachineRunTimes)(nil), "improbable.platform.deployment.MachineRunTimes")
	proto.RegisterType((*LegacyDeploymentArchive)(nil), "improbable.platform.deployment.LegacyDeploymentArchive")
	proto.RegisterType((*DeploymentArchive)(nil), "improbable.platform.deployment.DeploymentArchive")
	proto.RegisterType((*ArchiveListAllRequest)(nil), "improbable.platform.deployment.ArchiveListAllRequest")
	proto.RegisterType((*ArchiveListProjectRequest)(nil), "improbable.platform.deployment.ArchiveListProjectRequest")
	proto.RegisterType((*ArchiveListDeploymentRequest)(nil), "improbable.platform.deployment.ArchiveListDeploymentRequest")
	proto.RegisterType((*ArchiveListDeploymentWithConfigsRequest)(nil), "improbable.platform.deployment.ArchiveListDeploymentWithConfigsRequest")
}

func init() {
	proto.RegisterFile("improbable/platform/deployment/archive.proto", fileDescriptor_dee5bd334fd6a7c4)
}

var fileDescriptor_dee5bd334fd6a7c4 = []byte{
	// 920 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe4, 0x56, 0x4f, 0x8f, 0xdb, 0x44,
	0x14, 0xd7, 0x78, 0x37, 0x4b, 0xf3, 0xb2, 0x4b, 0xdb, 0xd1, 0x02, 0x69, 0x54, 0xed, 0x06, 0x0b,
	0x89, 0x55, 0xd9, 0xd8, 0x21, 0xcb, 0x1f, 0x55, 0xaa, 0x90, 0x76, 0x4b, 0x15, 0x90, 0x52, 0x15,
	0xb9, 0x45, 0xfc, 0xa9, 0x4a, 0x34, 0xb1, 0x27, 0xc9, 0x80, 0xed, 0x31, 0xf6, 0x38, 0x55, 0xb7,
	0xda, 0x0b, 0x5f, 0x01, 0x2e, 0x9c, 0x38, 0x70, 0xe0, 0xc0, 0x89, 0x1b, 0x5f, 0x81, 0x33, 0xe2,
	0xc2, 0xa5, 0x52, 0x05, 0x57, 0x0e, 0x7c, 0x02, 0x94, 0xf1, 0x38, 0x76, 0x36, 0x49, 0x93, 0x0d,
	0x39, 0xac, 0xd4, 0xdb, 0xf8, 0xcd, 0x7b, 0xcf, 0xbf, 0xf7, 0x7b, 0xf3, 0x7e, 0x33, 0xb0, 0xcf,
	0xbc, 0x20, 0xe4, 0x1d, 0xd2, 0x71, 0xa9, 0x19, 0xb8, 0x44, 0x74, 0x79, 0xe8, 0x99, 0x0e, 0x0d,
	0x5c, 0xfe, 0xc8, 0xa3, 0xbe, 0x30, 0x49, 0x68, 0xf7, 0xd9, 0x80, 0x1a, 0x41, 0xc8, 0x05, 0xc7,
	0x3b, 0x99, 0xb7, 0x91, 0x7a, 0x1b, 0x99, 0x77, 0xc5, 0x9c, 0x93, 0x2d, 0x5b, 0x26, 0x09, 0x2b,
	0x8d, 0x39, 0x01, 0x36, 0xf7, 0xbb, 0xac, 0x17, 0x87, 0x44, 0x30, 0xee, 0xab, 0x98, 0x37, 0xe6,
	0xc4, 0xb8, 0x24, 0xf6, 0xed, 0xbe, 0x72, 0xae, 0x4e, 0x73, 0xb6, 0xb9, 0xe7, 0x2d, 0x9c, 0x2e,
	0xea, 0x93, 0x90, 0x3a, 0xca, 0xf9, 0x6a, 0x8f, 0xf3, 0x9e, 0x4b, 0x4d, 0x12, 0x30, 0x93, 0xf8,
	0x3e, 0x17, 0x12, 0x58, 0xa4, 0x76, 0x77, 0xd5, 0xae, 0xfc, 0xea, 0xc4, 0x5d, 0x53, 0x30, 0x8f,
	0x46, 0x82, 0x78, 0x81, 0x72, 0x78, 0xa7, 0xc7, 0x44, 0x3f, 0xee, 0x18, 0x36, 0xf7, 0x4c, 0xef,
	0x21, 0x13, 0x5f, 0xf1, 0x87, 0x66, 0x8f, 0xd7, 0xe4, 0x66, 0x6d, 0x40, 0x5c, 0xe6, 0x10, 0xc1,
	0xc3, 0xc8, 0x1c, 0x2d, 0x93, 0x38, 0xfd, 0x67, 0x04, 0x3b, 0x87, 0x49, 0x27, 0x6e, 0xe6, 0x19,
	0x69, 0x52, 0x61, 0xd1, 0xaf, 0x63, 0x1a, 0x09, 0xfc, 0x19, 0x6c, 0x65, 0xa0, 0xdb, 0xcc, 0x29,
	0xa3, 0x2a, 0xda, 0x2b, 0x35, 0xf6, 0x8d, 0x67, 0xb7, 0xcc, 0x78, 0x7f, 0xb4, 0xfc, 0xd0, 0x39,
	0xda, 0x78, 0xfa, 0x64, 0x57, 0xab, 0x22, 0x6b, 0xd3, 0xc9, 0x59, 0xb1, 0x01, 0xeb, 0x71, 0xcc,
	0x9c, 0xb2, 0x56, 0x45, 0x7b, 0xc5, 0xa3, 0xca, 0xd3, 0x27, 0xbb, 0x2f, 0xc3, 0xf6, 0x17, 0xf7,
	0x0f, 0x6b, 0x9f, 0x93, 0xda, 0x71, 0xbd, 0x76, 0xbd, 0xf6, 0xe0, 0x71, 0x63, 0xff, 0xad, 0xfa,
	0xc9, 0x6b, 0x96, 0xf4, 0xd3, 0x7f, 0x43, 0x70, 0x75, 0x1a, 0x5a, 0x8b, 0x46, 0x01, 0xf7, 0x23,
	0x8a, 0xef, 0xc0, 0x46, 0xd2, 0x58, 0x05, 0xf2, 0xdd, 0xc5, 0x41, 0x8e, 0x27, 0x54, 0x69, 0xf0,
	0xa7, 0xb0, 0x95, 0x74, 0xbd, 0xad, 0xf2, 0x6a, 0x32, 0xef, 0xc1, 0xbc, 0xbc, 0x2d, 0x19, 0x34,
	0x9e, 0x73, 0xd3, 0xcd, 0x19, 0xf5, 0x0f, 0xe0, 0xe2, 0x6d, 0x62, 0xf7, 0x99, 0x4f, 0xad, 0xd8,
	0xbf, 0x37, 0x6c, 0x27, 0x7e, 0x15, 0x36, 0xbd, 0xc4, 0xd4, 0x8e, 0xd8, 0x31, 0x95, 0x35, 0x14,
	0xad, 0x92, 0xb2, 0xdd, 0x65, 0xc7, 0x14, 0x63, 0x58, 0x1f, 0xb6, 0x5e, 0xc2, 0x28, 0x58, 0x72,
	0xad, 0xff, 0xaa, 0xc1, 0x2b, 0x2d, 0xda, 0x23, 0xf6, 0xa3, 0xac, 0x1a, 0xc5, 0x12, 0xb6, 0x00,
	0x32, 0x54, 0x8a, 0x94, 0x6b, 0x8b, 0x93, 0x32, 0xea, 0x5b, 0x2e, 0x0b, 0xbe, 0x05, 0x97, 0x04,
	0x0d, 0x3d, 0xe6, 0xcb, 0xb2, 0xda, 0x23, 0x3c, 0xa5, 0x46, 0xc5, 0x48, 0xce, 0xa9, 0x91, 0x9e,
	0x53, 0xe3, 0x5e, 0x7a, 0x4e, 0xad, 0x8b, 0xb9, 0x98, 0xa1, 0x15, 0xef, 0x00, 0xa4, 0x26, 0x1e,
	0x96, 0xd7, 0x64, 0xad, 0x39, 0x0b, 0xde, 0x86, 0xc2, 0x4d, 0x12, 0x47, 0xb4, 0xbc, 0x2e, 0xb7,
	0x92, 0x0f, 0xdc, 0x82, 0x62, 0x18, 0x27, 0x3f, 0x8d, 0xca, 0x85, 0xea, 0xda, 0x5e, 0xa9, 0x61,
	0xce, 0xab, 0xe7, 0x14, 0xcf, 0xd6, 0x85, 0x50, 0xad, 0xf4, 0xbf, 0x35, 0xb8, 0xfc, 0x1c, 0x90,
	0x96, 0xce, 0x59, 0x61, 0xb1, 0x39, 0xcb, 0x8d, 0xd1, 0xc6, 0x4a, 0xc6, 0x48, 0xff, 0x09, 0xc1,
	0x4b, 0x8a, 0xdd, 0x16, 0x8b, 0xc4, 0xa1, 0xeb, 0xa6, 0xea, 0xd2, 0x84, 0xcb, 0x29, 0x7c, 0xea,
	0xb4, 0x3b, 0xb4, 0xcb, 0x43, 0xaa, 0x28, 0x7f, 0x16, 0x31, 0x97, 0xb2, 0xa0, 0x23, 0x19, 0x93,
	0x27, 0x98, 0x3a, 0x6d, 0xd2, 0x15, 0x34, 0x3c, 0x0b, 0xc1, 0xd4, 0x39, 0x1c, 0x86, 0xe8, 0xff,
	0x22, 0xb8, 0x92, 0x43, 0xfa, 0x51, 0xc8, 0xbf, 0xa4, 0xb6, 0x38, 0xa7, 0x68, 0xf1, 0x2d, 0x80,
	0x20, 0x41, 0x38, 0x14, 0xe6, 0x35, 0x99, 0x60, 0x67, 0x6a, 0xb3, 0x54, 0x21, 0x39, 0x29, 0x2e,
	0x06, 0xa9, 0x49, 0xff, 0x41, 0x1b, 0xe9, 0xea, 0xb0, 0xe8, 0xac, 0x9b, 0xe7, 0xb5, 0xee, 0x6d,
	0x28, 0xb8, 0xcc, 0x63, 0x42, 0x96, 0xbc, 0x65, 0x25, 0x1f, 0x93, 0x37, 0xd5, 0xfa, 0xaa, 0x6e,
	0x2a, 0xfd, 0x3b, 0x0d, 0x5e, 0x9f, 0xca, 0xd0, 0x27, 0x4c, 0x28, 0x45, 0x8f, 0xce, 0x2b, 0x59,
	0x13, 0xb4, 0xac, 0xad, 0x8a, 0x96, 0xc6, 0x1f, 0x17, 0xa0, 0x3c, 0xa1, 0x9f, 0x77, 0x69, 0x38,
	0x60, 0x36, 0xc5, 0x3f, 0x22, 0xd8, 0x4a, 0xee, 0x25, 0x35, 0xf3, 0xf8, 0xed, 0x79, 0xbf, 0x9c,
	0xaa, 0x11, 0x95, 0xb9, 0xf2, 0x33, 0xe3, 0xf6, 0xd3, 0xab, 0xdf, 0xfc, 0xfe, 0xd7, 0xb7, 0x5a,
	0x05, 0x97, 0xd3, 0xd7, 0xa6, 0xd3, 0xce, 0xa2, 0x22, 0x73, 0x70, 0x50, 0x47, 0xf8, 0x1f, 0x04,
	0xc5, 0x26, 0x55, 0xba, 0x85, 0xdf, 0x5b, 0x10, 0xe1, 0x8c, 0xc7, 0x52, 0xe5, 0xc6, 0x32, 0xf1,
	0xe9, 0xf3, 0x45, 0xb7, 0x25, 0xde, 0x07, 0xf8, 0xfe, 0x2c, 0xbc, 0xe6, 0xe3, 0xb1, 0x4e, 0x1a,
	0xd9, 0xf0, 0x1b, 0x3e, 0xf1, 0xe8, 0xc9, 0xe9, 0x7d, 0x65, 0x1c, 0x8a, 0xfa, 0x89, 0x7a, 0xf2,
	0xe2, 0x18, 0x5e, 0xf8, 0x9f, 0xfd, 0x78, 0x73, 0xf1, 0x93, 0xa3, 0x12, 0xd4, 0x11, 0xfe, 0x05,
	0x41, 0x29, 0xa7, 0xa8, 0xf8, 0xfa, 0x19, 0xfe, 0x3d, 0xae, 0xc2, 0x4b, 0xfc, 0x5f, 0x6f, 0x48,
	0x66, 0xf7, 0xf1, 0xb5, 0xd9, 0xcc, 0x9e, 0xe6, 0xb2, 0x8e, 0xf0, 0x9f, 0x08, 0x5e, 0x1c, 0x1f,
	0x77, 0x7c, 0xe3, 0x0c, 0xb0, 0x27, 0x74, 0x74, 0x19, 0xe4, 0x1f, 0x4b, 0xe4, 0x77, 0xf0, 0xed,
	0x95, 0x9e, 0x89, 0x3a, 0xc2, 0xdf, 0x23, 0xb8, 0x32, 0x53, 0xcb, 0x70, 0x73, 0xa9, 0x3a, 0x27,
	0xd5, 0x70, 0xa9, 0xc3, 0xd2, 0xd9, 0x90, 0xba, 0x76, 0xf0, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x62, 0x32, 0x07, 0xf2, 0x45, 0x0e, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DeploymentArchiveServiceClient is the client API for DeploymentArchiveService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeploymentArchiveServiceClient interface {
	LegacyListAll(ctx context.Context, in *ArchiveListAllRequest, opts ...grpc.CallOption) (DeploymentArchiveService_LegacyListAllClient, error)
	GetConfig(ctx context.Context, in *ArchiveConfigurationGetRequest, opts ...grpc.CallOption) (*ArchiveConfigurationResponse, error)
	ListAll(ctx context.Context, in *ArchiveListAllRequest, opts ...grpc.CallOption) (DeploymentArchiveService_ListAllClient, error)
	ListProject(ctx context.Context, in *ArchiveListProjectRequest, opts ...grpc.CallOption) (DeploymentArchiveService_ListProjectClient, error)
	ListDeployment(ctx context.Context, in *ArchiveListDeploymentRequest, opts ...grpc.CallOption) (DeploymentArchiveService_ListDeploymentClient, error)
	ListDeploymentWithConfigs(ctx context.Context, in *ArchiveListDeploymentWithConfigsRequest, opts ...grpc.CallOption) (DeploymentArchiveService_ListDeploymentWithConfigsClient, error)
}

type deploymentArchiveServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDeploymentArchiveServiceClient(cc grpc.ClientConnInterface) DeploymentArchiveServiceClient {
	return &deploymentArchiveServiceClient{cc}
}

func (c *deploymentArchiveServiceClient) LegacyListAll(ctx context.Context, in *ArchiveListAllRequest, opts ...grpc.CallOption) (DeploymentArchiveService_LegacyListAllClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DeploymentArchiveService_serviceDesc.Streams[0], "/improbable.platform.deployment.DeploymentArchiveService/LegacyListAll", opts...)
	if err != nil {
		return nil, err
	}
	x := &deploymentArchiveServiceLegacyListAllClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DeploymentArchiveService_LegacyListAllClient interface {
	Recv() (*LegacyDeploymentArchive, error)
	grpc.ClientStream
}

type deploymentArchiveServiceLegacyListAllClient struct {
	grpc.ClientStream
}

func (x *deploymentArchiveServiceLegacyListAllClient) Recv() (*LegacyDeploymentArchive, error) {
	m := new(LegacyDeploymentArchive)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *deploymentArchiveServiceClient) GetConfig(ctx context.Context, in *ArchiveConfigurationGetRequest, opts ...grpc.CallOption) (*ArchiveConfigurationResponse, error) {
	out := new(ArchiveConfigurationResponse)
	err := c.cc.Invoke(ctx, "/improbable.platform.deployment.DeploymentArchiveService/GetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deploymentArchiveServiceClient) ListAll(ctx context.Context, in *ArchiveListAllRequest, opts ...grpc.CallOption) (DeploymentArchiveService_ListAllClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DeploymentArchiveService_serviceDesc.Streams[1], "/improbable.platform.deployment.DeploymentArchiveService/ListAll", opts...)
	if err != nil {
		return nil, err
	}
	x := &deploymentArchiveServiceListAllClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DeploymentArchiveService_ListAllClient interface {
	Recv() (*DeploymentArchive, error)
	grpc.ClientStream
}

type deploymentArchiveServiceListAllClient struct {
	grpc.ClientStream
}

func (x *deploymentArchiveServiceListAllClient) Recv() (*DeploymentArchive, error) {
	m := new(DeploymentArchive)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *deploymentArchiveServiceClient) ListProject(ctx context.Context, in *ArchiveListProjectRequest, opts ...grpc.CallOption) (DeploymentArchiveService_ListProjectClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DeploymentArchiveService_serviceDesc.Streams[2], "/improbable.platform.deployment.DeploymentArchiveService/ListProject", opts...)
	if err != nil {
		return nil, err
	}
	x := &deploymentArchiveServiceListProjectClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DeploymentArchiveService_ListProjectClient interface {
	Recv() (*DeploymentArchive, error)
	grpc.ClientStream
}

type deploymentArchiveServiceListProjectClient struct {
	grpc.ClientStream
}

func (x *deploymentArchiveServiceListProjectClient) Recv() (*DeploymentArchive, error) {
	m := new(DeploymentArchive)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *deploymentArchiveServiceClient) ListDeployment(ctx context.Context, in *ArchiveListDeploymentRequest, opts ...grpc.CallOption) (DeploymentArchiveService_ListDeploymentClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DeploymentArchiveService_serviceDesc.Streams[3], "/improbable.platform.deployment.DeploymentArchiveService/ListDeployment", opts...)
	if err != nil {
		return nil, err
	}
	x := &deploymentArchiveServiceListDeploymentClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DeploymentArchiveService_ListDeploymentClient interface {
	Recv() (*DeploymentArchive, error)
	grpc.ClientStream
}

type deploymentArchiveServiceListDeploymentClient struct {
	grpc.ClientStream
}

func (x *deploymentArchiveServiceListDeploymentClient) Recv() (*DeploymentArchive, error) {
	m := new(DeploymentArchive)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *deploymentArchiveServiceClient) ListDeploymentWithConfigs(ctx context.Context, in *ArchiveListDeploymentWithConfigsRequest, opts ...grpc.CallOption) (DeploymentArchiveService_ListDeploymentWithConfigsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DeploymentArchiveService_serviceDesc.Streams[4], "/improbable.platform.deployment.DeploymentArchiveService/ListDeploymentWithConfigs", opts...)
	if err != nil {
		return nil, err
	}
	x := &deploymentArchiveServiceListDeploymentWithConfigsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DeploymentArchiveService_ListDeploymentWithConfigsClient interface {
	Recv() (*DeploymentArchive, error)
	grpc.ClientStream
}

type deploymentArchiveServiceListDeploymentWithConfigsClient struct {
	grpc.ClientStream
}

func (x *deploymentArchiveServiceListDeploymentWithConfigsClient) Recv() (*DeploymentArchive, error) {
	m := new(DeploymentArchive)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DeploymentArchiveServiceServer is the server API for DeploymentArchiveService service.
type DeploymentArchiveServiceServer interface {
	LegacyListAll(*ArchiveListAllRequest, DeploymentArchiveService_LegacyListAllServer) error
	GetConfig(context.Context, *ArchiveConfigurationGetRequest) (*ArchiveConfigurationResponse, error)
	ListAll(*ArchiveListAllRequest, DeploymentArchiveService_ListAllServer) error
	ListProject(*ArchiveListProjectRequest, DeploymentArchiveService_ListProjectServer) error
	ListDeployment(*ArchiveListDeploymentRequest, DeploymentArchiveService_ListDeploymentServer) error
	ListDeploymentWithConfigs(*ArchiveListDeploymentWithConfigsRequest, DeploymentArchiveService_ListDeploymentWithConfigsServer) error
}

// UnimplementedDeploymentArchiveServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDeploymentArchiveServiceServer struct {
}

func (*UnimplementedDeploymentArchiveServiceServer) LegacyListAll(req *ArchiveListAllRequest, srv DeploymentArchiveService_LegacyListAllServer) error {
	return status.Errorf(codes.Unimplemented, "method LegacyListAll not implemented")
}
func (*UnimplementedDeploymentArchiveServiceServer) GetConfig(ctx context.Context, req *ArchiveConfigurationGetRequest) (*ArchiveConfigurationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConfig not implemented")
}
func (*UnimplementedDeploymentArchiveServiceServer) ListAll(req *ArchiveListAllRequest, srv DeploymentArchiveService_ListAllServer) error {
	return status.Errorf(codes.Unimplemented, "method ListAll not implemented")
}
func (*UnimplementedDeploymentArchiveServiceServer) ListProject(req *ArchiveListProjectRequest, srv DeploymentArchiveService_ListProjectServer) error {
	return status.Errorf(codes.Unimplemented, "method ListProject not implemented")
}
func (*UnimplementedDeploymentArchiveServiceServer) ListDeployment(req *ArchiveListDeploymentRequest, srv DeploymentArchiveService_ListDeploymentServer) error {
	return status.Errorf(codes.Unimplemented, "method ListDeployment not implemented")
}
func (*UnimplementedDeploymentArchiveServiceServer) ListDeploymentWithConfigs(req *ArchiveListDeploymentWithConfigsRequest, srv DeploymentArchiveService_ListDeploymentWithConfigsServer) error {
	return status.Errorf(codes.Unimplemented, "method ListDeploymentWithConfigs not implemented")
}

func RegisterDeploymentArchiveServiceServer(s *grpc.Server, srv DeploymentArchiveServiceServer) {
	s.RegisterService(&_DeploymentArchiveService_serviceDesc, srv)
}

func _DeploymentArchiveService_LegacyListAll_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ArchiveListAllRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DeploymentArchiveServiceServer).LegacyListAll(m, &deploymentArchiveServiceLegacyListAllServer{stream})
}

type DeploymentArchiveService_LegacyListAllServer interface {
	Send(*LegacyDeploymentArchive) error
	grpc.ServerStream
}

type deploymentArchiveServiceLegacyListAllServer struct {
	grpc.ServerStream
}

func (x *deploymentArchiveServiceLegacyListAllServer) Send(m *LegacyDeploymentArchive) error {
	return x.ServerStream.SendMsg(m)
}

func _DeploymentArchiveService_GetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArchiveConfigurationGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploymentArchiveServiceServer).GetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.platform.deployment.DeploymentArchiveService/GetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploymentArchiveServiceServer).GetConfig(ctx, req.(*ArchiveConfigurationGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeploymentArchiveService_ListAll_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ArchiveListAllRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DeploymentArchiveServiceServer).ListAll(m, &deploymentArchiveServiceListAllServer{stream})
}

type DeploymentArchiveService_ListAllServer interface {
	Send(*DeploymentArchive) error
	grpc.ServerStream
}

type deploymentArchiveServiceListAllServer struct {
	grpc.ServerStream
}

func (x *deploymentArchiveServiceListAllServer) Send(m *DeploymentArchive) error {
	return x.ServerStream.SendMsg(m)
}

func _DeploymentArchiveService_ListProject_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ArchiveListProjectRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DeploymentArchiveServiceServer).ListProject(m, &deploymentArchiveServiceListProjectServer{stream})
}

type DeploymentArchiveService_ListProjectServer interface {
	Send(*DeploymentArchive) error
	grpc.ServerStream
}

type deploymentArchiveServiceListProjectServer struct {
	grpc.ServerStream
}

func (x *deploymentArchiveServiceListProjectServer) Send(m *DeploymentArchive) error {
	return x.ServerStream.SendMsg(m)
}

func _DeploymentArchiveService_ListDeployment_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ArchiveListDeploymentRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DeploymentArchiveServiceServer).ListDeployment(m, &deploymentArchiveServiceListDeploymentServer{stream})
}

type DeploymentArchiveService_ListDeploymentServer interface {
	Send(*DeploymentArchive) error
	grpc.ServerStream
}

type deploymentArchiveServiceListDeploymentServer struct {
	grpc.ServerStream
}

func (x *deploymentArchiveServiceListDeploymentServer) Send(m *DeploymentArchive) error {
	return x.ServerStream.SendMsg(m)
}

func _DeploymentArchiveService_ListDeploymentWithConfigs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ArchiveListDeploymentWithConfigsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DeploymentArchiveServiceServer).ListDeploymentWithConfigs(m, &deploymentArchiveServiceListDeploymentWithConfigsServer{stream})
}

type DeploymentArchiveService_ListDeploymentWithConfigsServer interface {
	Send(*DeploymentArchive) error
	grpc.ServerStream
}

type deploymentArchiveServiceListDeploymentWithConfigsServer struct {
	grpc.ServerStream
}

func (x *deploymentArchiveServiceListDeploymentWithConfigsServer) Send(m *DeploymentArchive) error {
	return x.ServerStream.SendMsg(m)
}

var _DeploymentArchiveService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "improbable.platform.deployment.DeploymentArchiveService",
	HandlerType: (*DeploymentArchiveServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetConfig",
			Handler:    _DeploymentArchiveService_GetConfig_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "LegacyListAll",
			Handler:       _DeploymentArchiveService_LegacyListAll_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ListAll",
			Handler:       _DeploymentArchiveService_ListAll_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ListProject",
			Handler:       _DeploymentArchiveService_ListProject_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ListDeployment",
			Handler:       _DeploymentArchiveService_ListDeployment_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ListDeploymentWithConfigs",
			Handler:       _DeploymentArchiveService_ListDeploymentWithConfigs_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "improbable/platform/deployment/archive.proto",
}
