// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/platform/deployment/cluster.proto

package improbable_platform_deployment

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
	regexp "regexp"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

var _regex_ClusterId_Name = regexp.MustCompile(`^[a-zA-Z0-9-]{2,50}$`)

func (this *ClusterId) Validate() error {
	if !_regex_ClusterId_Name.MatchString(this.Name) {
		return github_com_mwitkow_go_proto_validators.FieldError("Name", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-zA-Z0-9-]{2,50}$"`, this.Name))
	}
	return nil
}

var _regex_Cluster_Provider = regexp.MustCompile(`^(|gce|aws|tct)$`)

func (this *Cluster) Validate() error {
	if nil == this.ClusterId {
		return github_com_mwitkow_go_proto_validators.FieldError("ClusterId", fmt.Errorf("message must exist"))
	}
	if this.ClusterId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ClusterId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ClusterId", err)
		}
	}
	if !_regex_Cluster_Provider.MatchString(this.Provider) {
		return github_com_mwitkow_go_proto_validators.FieldError("Provider", fmt.Errorf(`value '%v' must be a string conforming to regex "^(|gce|aws|tct)$"`, this.Provider))
	}
	return nil
}
func (this *ListClusterRequest) Validate() error {
	return nil
}
func (this *ListClusterResponse) Validate() error {
	for _, item := range this.Clusters {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Clusters", err)
			}
		}
	}
	return nil
}
