// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/platform/deployment/archive.proto

package improbable_platform_deployment

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "improbable.io/proto/improbable/platform"
	math "math"
	regexp "regexp"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

var _regex_ArchiveConfigurationGetRequest_Uuid = regexp.MustCompile(`^[A-Za-z0-9-]{2,40}$`)

func (this *ArchiveConfigurationGetRequest) Validate() error {
	if nil == this.DeploymentId {
		return github_com_mwitkow_go_proto_validators.FieldError("DeploymentId", fmt.Errorf("message must exist"))
	}
	if this.DeploymentId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.DeploymentId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("DeploymentId", err)
		}
	}
	if !_regex_ArchiveConfigurationGetRequest_Uuid.MatchString(this.Uuid) {
		return github_com_mwitkow_go_proto_validators.FieldError("Uuid", fmt.Errorf(`value '%v' must be a string conforming to regex "^[A-Za-z0-9-]{2,40}$"`, this.Uuid))
	}
	return nil
}
func (this *ArchiveConfigurationResponse) Validate() error {
	if this.Config != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Config); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Config", err)
		}
	}
	if this.LaunchConfig != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.LaunchConfig); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("LaunchConfig", err)
		}
	}
	return nil
}
func (this *MachineRunTimes) Validate() error {
	return nil
}
func (this *LegacyDeploymentArchive) Validate() error {
	if nil == this.Deployment {
		return github_com_mwitkow_go_proto_validators.FieldError("Deployment", fmt.Errorf("message must exist"))
	}
	if this.Deployment != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Deployment); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Deployment", err)
		}
	}
	if this.TerminationTime != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.TerminationTime); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("TerminationTime", err)
		}
	}
	for _, item := range this.RunTimes {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("RunTimes", err)
			}
		}
	}
	return nil
}

var _regex_DeploymentArchive_Uuid = regexp.MustCompile(`^[A-Za-z0-9-]{2,40}$`)

func (this *DeploymentArchive) Validate() error {
	if nil == this.Deployment {
		return github_com_mwitkow_go_proto_validators.FieldError("Deployment", fmt.Errorf("message must exist"))
	}
	if this.Deployment != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Deployment); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Deployment", err)
		}
	}
	if this.TerminationTime != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.TerminationTime); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("TerminationTime", err)
		}
	}
	if !_regex_DeploymentArchive_Uuid.MatchString(this.Uuid) {
		return github_com_mwitkow_go_proto_validators.FieldError("Uuid", fmt.Errorf(`value '%v' must be a string conforming to regex "^[A-Za-z0-9-]{2,40}$"`, this.Uuid))
	}
	if this.Config != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Config); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Config", err)
		}
	}
	return nil
}
func (this *ArchiveListAllRequest) Validate() error {
	if this.TerminatedBefore != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.TerminatedBefore); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("TerminatedBefore", err)
		}
	}
	if this.TerminatedAfter != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.TerminatedAfter); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("TerminatedAfter", err)
		}
	}
	return nil
}
func (this *ArchiveListProjectRequest) Validate() error {
	if this.TerminatedBefore != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.TerminatedBefore); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("TerminatedBefore", err)
		}
	}
	if this.TerminatedAfter != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.TerminatedAfter); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("TerminatedAfter", err)
		}
	}
	if nil == this.ProjectId {
		return github_com_mwitkow_go_proto_validators.FieldError("ProjectId", fmt.Errorf("message must exist"))
	}
	if this.ProjectId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ProjectId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ProjectId", err)
		}
	}
	return nil
}
func (this *ArchiveListDeploymentRequest) Validate() error {
	if this.TerminatedBefore != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.TerminatedBefore); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("TerminatedBefore", err)
		}
	}
	if this.TerminatedAfter != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.TerminatedAfter); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("TerminatedAfter", err)
		}
	}
	if nil == this.DeploymentId {
		return github_com_mwitkow_go_proto_validators.FieldError("DeploymentId", fmt.Errorf("message must exist"))
	}
	if this.DeploymentId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.DeploymentId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("DeploymentId", err)
		}
	}
	return nil
}
func (this *ArchiveListDeploymentWithConfigsRequest) Validate() error {
	if this.TerminatedBefore != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.TerminatedBefore); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("TerminatedBefore", err)
		}
	}
	if this.TerminatedAfter != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.TerminatedAfter); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("TerminatedAfter", err)
		}
	}
	if nil == this.DeploymentId {
		return github_com_mwitkow_go_proto_validators.FieldError("DeploymentId", fmt.Errorf("message must exist"))
	}
	if this.DeploymentId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.DeploymentId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("DeploymentId", err)
		}
	}
	return nil
}
