// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/platform/deployment/worker_flagz.proto

package improbable_platform_deployment

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
	regexp "regexp"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

var _regex_WorkerType_Name = regexp.MustCompile(`^[a-zA-Z0-9_-]{3,128}$`)

func (this *WorkerType) Validate() error {
	if !_regex_WorkerType_Name.MatchString(this.Name) {
		return github_com_mwitkow_go_proto_validators.FieldError("Name", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-zA-Z0-9_-]{3,128}$"`, this.Name))
	}
	return nil
}

var _regex_WorkerFlagzId_Name = regexp.MustCompile(`^[a-zA-Z0-9_-]{3,128}$`)

func (this *WorkerFlagzId) Validate() error {
	if nil == this.DeploymentId {
		return github_com_mwitkow_go_proto_validators.FieldError("DeploymentId", fmt.Errorf("message must exist"))
	}
	if this.DeploymentId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.DeploymentId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("DeploymentId", err)
		}
	}
	if nil == this.WorkerType {
		return github_com_mwitkow_go_proto_validators.FieldError("WorkerType", fmt.Errorf("message must exist"))
	}
	if this.WorkerType != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.WorkerType); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("WorkerType", err)
		}
	}
	if !_regex_WorkerFlagzId_Name.MatchString(this.Name) {
		return github_com_mwitkow_go_proto_validators.FieldError("Name", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-zA-Z0-9_-]{3,128}$"`, this.Name))
	}
	return nil
}
func (this *WorkerFlagz) Validate() error {
	if nil == this.WorkerFlagzId {
		return github_com_mwitkow_go_proto_validators.FieldError("WorkerFlagzId", fmt.Errorf("message must exist"))
	}
	if this.WorkerFlagzId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.WorkerFlagzId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("WorkerFlagzId", err)
		}
	}
	return nil
}
func (this *ListWorkerFlagzRequest) Validate() error {
	if this.DeploymentId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.DeploymentId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("DeploymentId", err)
		}
	}
	if this.WorkerType != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.WorkerType); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("WorkerType", err)
		}
	}
	return nil
}
func (this *ListWorkerFlagzResponse) Validate() error {
	for _, item := range this.WorkerFlagz {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("WorkerFlagz", err)
			}
		}
	}
	return nil
}
func (this *GetWorkerFlagzRequest) Validate() error {
	if this.WorkerFlagzId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.WorkerFlagzId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("WorkerFlagzId", err)
		}
	}
	return nil
}
func (this *GetWorkerFlagzResponse) Validate() error {
	if this.WorkerFlagz != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.WorkerFlagz); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("WorkerFlagz", err)
		}
	}
	return nil
}
func (this *SetWorkerFlagzRequest) Validate() error {
	if this.WorkerFlagz != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.WorkerFlagz); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("WorkerFlagz", err)
		}
	}
	return nil
}
func (this *SetWorkerFlagzResponse) Validate() error {
	return nil
}
func (this *SetAllWorkerFlagzRequest) Validate() error {
	if nil == this.DeploymentId {
		return github_com_mwitkow_go_proto_validators.FieldError("DeploymentId", fmt.Errorf("message must exist"))
	}
	if this.DeploymentId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.DeploymentId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("DeploymentId", err)
		}
	}
	for _, item := range this.WorkerFlagz {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("WorkerFlagz", err)
			}
		}
	}
	return nil
}
func (this *SetAllWorkerFlagzResponse) Validate() error {
	return nil
}
func (this *DeleteWorkerFlagzRequest) Validate() error {
	if this.WorkerFlagzId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.WorkerFlagzId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("WorkerFlagzId", err)
		}
	}
	return nil
}
func (this *DeleteWorkerFlagzResponse) Validate() error {
	return nil
}
