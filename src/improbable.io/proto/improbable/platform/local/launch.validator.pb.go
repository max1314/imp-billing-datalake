// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/platform/local/launch.proto

package improbable_platform_local

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *LaunchConfiguration) Validate() error {
	for _, item := range this.Javaparams {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Javaparams", err)
			}
		}
	}
	for _, item := range this.Flagz {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Flagz", err)
			}
		}
	}
	for _, item := range this.WorkerFlagz {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("WorkerFlagz", err)
			}
		}
	}
	return nil
}
func (this *Parameter) Validate() error {
	return nil
}
func (this *WorkerFlagz) Validate() error {
	for _, item := range this.Flagz {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Flagz", err)
			}
		}
	}
	return nil
}
func (this *FlagValue) Validate() error {
	return nil
}
