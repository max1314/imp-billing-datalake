// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/platform/assembly/bridge_config.proto

package improbable_platform_assembly

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	github_com_improbable_io_go_proto_logfields "github.com/improbable-io/go-proto-logfields"
	_ "improbable.io/proto/improbable/platform/runtime"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *RangeEntityInterest) LogFields() map[string]string {
	return map[string]string{}
}

func (this *RangeEntityInterest) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *EntityInterest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	var entityInterestFields map[string]string
	switch f := this.EntityInterest.(type) {
	case *EntityInterest_RangeEntityInterest:
		entityInterestFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.RangeEntityInterest)
	default:
		entityInterestFields = map[string]string{}
	}
	hasInner = hasInner || len(entityInterestFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range entityInterestFields {
		res[k] = v
	}
	return res
}

func (this *EntityInterest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	if f, ok := this.EntityInterest.(*EntityInterest_RangeEntityInterest); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.RangeEntityInterest, dst)
	}
}

func (this *ComponentDelivery) LogFields() map[string]string {
	return map[string]string{}
}

func (this *ComponentDelivery) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *ComponentDeliveryConfiguration) LogFields() map[string]string {
	return map[string]string{}
}

func (this *ComponentDeliveryConfiguration) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *AssetContextConfiguration) LogFields() map[string]string {
	return map[string]string{}
}

func (this *AssetContextConfiguration) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *BoundedTagsStreamingQuery) LogFields() map[string]string {
	return map[string]string{}
}

func (this *BoundedTagsStreamingQuery) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *GlobalTagStreamingQuery) LogFields() map[string]string {
	return map[string]string{}
}

func (this *GlobalTagStreamingQuery) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *GlobalComponentStreamingQuery) LogFields() map[string]string {
	return map[string]string{}
}

func (this *GlobalComponentStreamingQuery) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *BoundedComponentStreamingQuery) LogFields() map[string]string {
	return map[string]string{}
}

func (this *BoundedComponentStreamingQuery) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *StreamingQuery) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	var streamingQueryFields map[string]string
	switch f := this.StreamingQuery.(type) {
	case *StreamingQuery_BoundedTagsStreamingQuery:
		streamingQueryFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.BoundedTagsStreamingQuery)
	case *StreamingQuery_GlobalTagStreamingQuery:
		streamingQueryFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.GlobalTagStreamingQuery)
	case *StreamingQuery_GlobalComponentStreamingQuery:
		streamingQueryFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.GlobalComponentStreamingQuery)
	case *StreamingQuery_BoundedComponentStreamingQuery:
		streamingQueryFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.BoundedComponentStreamingQuery)
	default:
		streamingQueryFields = map[string]string{}
	}
	hasInner = hasInner || len(streamingQueryFields) > 0
	componentsStreamedFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.ComponentsStreamed)
	hasInner = hasInner || len(componentsStreamedFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range streamingQueryFields {
		res[k] = v
	}
	for k, v := range componentsStreamedFields {
		res[k] = v
	}
	return res
}

func (this *StreamingQuery) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	if f, ok := this.StreamingQuery.(*StreamingQuery_BoundedTagsStreamingQuery); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.BoundedTagsStreamingQuery, dst)
	}
	if f, ok := this.StreamingQuery.(*StreamingQuery_GlobalTagStreamingQuery); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.GlobalTagStreamingQuery, dst)
	}
	if f, ok := this.StreamingQuery.(*StreamingQuery_GlobalComponentStreamingQuery); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.GlobalComponentStreamingQuery, dst)
	}
	if f, ok := this.StreamingQuery.(*StreamingQuery_BoundedComponentStreamingQuery); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.BoundedComponentStreamingQuery, dst)
	}
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.ComponentsStreamed, dst)
}

func (this *ComponentsSet) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	var componentSetFields map[string]string
	switch f := this.ComponentSet.(type) {
	case *ComponentsSet_AllComponents:
		componentSetFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.AllComponents)
	case *ComponentsSet_SpecificComponents:
		componentSetFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.SpecificComponents)
	default:
		componentSetFields = map[string]string{}
	}
	hasInner = hasInner || len(componentSetFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range componentSetFields {
		res[k] = v
	}
	return res
}

func (this *ComponentsSet) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	if f, ok := this.ComponentSet.(*ComponentsSet_AllComponents); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.AllComponents, dst)
	}
	if f, ok := this.ComponentSet.(*ComponentsSet_SpecificComponents); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.SpecificComponents, dst)
	}
}

func (this *AllComponents) LogFields() map[string]string {
	return map[string]string{}
}

func (this *AllComponents) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *SpecificComponents) LogFields() map[string]string {
	return map[string]string{}
}

func (this *SpecificComponents) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *ComponentEncodingSetting) LogFields() map[string]string {
	return map[string]string{}
}

func (this *ComponentEncodingSetting) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *PerComponentSettings) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	encodingFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Encoding)
	hasInner = hasInner || len(encodingFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range encodingFields {
		res[k] = v
	}
	return res
}

func (this *PerComponentSettings) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Encoding, dst)
}

func (this *ComponentsSettings) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	defaultFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Default)
	hasInner = hasInner || len(defaultFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range defaultFields {
		res[k] = v
	}
	return res
}

func (this *ComponentsSettings) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Default, dst)
}

func (this *BridgeConfiguration) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	workerAttributeSetFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.WorkerAttributeSet)
	hasInner = hasInner || len(workerAttributeSetFields) > 0
	entityInterestFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.EntityInterest)
	hasInner = hasInner || len(entityInterestFields) > 0
	loadbalancingFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Loadbalancing)
	hasInner = hasInner || len(loadbalancingFields) > 0
	componentDeliveryFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.ComponentDelivery)
	hasInner = hasInner || len(componentDeliveryFields) > 0
	componentSettingsFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.ComponentSettings)
	hasInner = hasInner || len(componentSettingsFields) > 0
	assetContextFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.AssetContext)
	hasInner = hasInner || len(assetContextFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range workerAttributeSetFields {
		res[k] = v
	}
	for k, v := range entityInterestFields {
		res[k] = v
	}
	for k, v := range loadbalancingFields {
		res[k] = v
	}
	for k, v := range componentDeliveryFields {
		res[k] = v
	}
	for k, v := range componentSettingsFields {
		res[k] = v
	}
	for k, v := range assetContextFields {
		res[k] = v
	}
	return res
}

func (this *BridgeConfiguration) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.WorkerAttributeSet, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.EntityInterest, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Loadbalancing, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.ComponentDelivery, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.ComponentSettings, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.AssetContext, dst)
}
