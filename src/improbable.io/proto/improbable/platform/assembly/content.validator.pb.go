// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/platform/assembly/content.proto

package improbable_platform_assembly

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "improbable.io/proto/improbable/ext/plugin/auth"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *ContentArtifact) Validate() error {
	if nil == this.ArtifactId {
		return github_com_mwitkow_go_proto_validators.FieldError("ArtifactId", fmt.Errorf("message must exist"))
	}
	if this.ArtifactId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ArtifactId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ArtifactId", err)
		}
	}
	return nil
}
func (this *BatchGetResponse) Validate() error {
	for _, item := range this.Artifacts {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Artifacts", err)
			}
		}
	}
	return nil
}
func (this *GetArtifactRequest) Validate() error {
	if nil == this.ArtifactId {
		return github_com_mwitkow_go_proto_validators.FieldError("ArtifactId", fmt.Errorf("message must exist"))
	}
	if this.ArtifactId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ArtifactId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ArtifactId", err)
		}
	}
	return nil
}
func (this *GetArtifactResponse) Validate() error {
	if this.Artifact != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Artifact); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Artifact", err)
		}
	}
	return nil
}
