// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/platform/assembly/worker.proto

package improbable_platform_assembly

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	github_com_improbable_io_go_proto_logfields "github.com/improbable-io/go-proto-logfields"
	_ "github.com/mwitkow/go-proto-validators"
	_ "improbable.io/proto/improbable/ext/plugin/auth"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *WorkerName) LogFields() map[string]string {
	return map[string]string{}
}

func (this *WorkerName) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *WorkerAssemblyId) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	assemblyIdFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.AssemblyId)
	hasInner = hasInner || len(assemblyIdFields) > 0
	nameFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Name)
	hasInner = hasInner || len(nameFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range assemblyIdFields {
		res[k] = v
	}
	for k, v := range nameFields {
		res[k] = v
	}
	return res
}

func (this *WorkerAssemblyId) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.AssemblyId, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Name, dst)
}

func (this *WorkerAssembly) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	workerAssemblyIdFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.WorkerAssemblyId)
	hasInner = hasInner || len(workerAssemblyIdFields) > 0
	bridgeConfigurationFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.BridgeConfiguration)
	hasInner = hasInner || len(bridgeConfigurationFields) > 0
	workerConfigJsonFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.WorkerConfigJson)
	hasInner = hasInner || len(workerConfigJsonFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range workerAssemblyIdFields {
		res[k] = v
	}
	for k, v := range bridgeConfigurationFields {
		res[k] = v
	}
	for k, v := range workerConfigJsonFields {
		res[k] = v
	}
	return res
}

func (this *WorkerAssembly) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.WorkerAssemblyId, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.BridgeConfiguration, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.WorkerConfigJson, dst)
}

func (this *WorkerConfigJson) LogFields() map[string]string {
	return map[string]string{}
}

func (this *WorkerConfigJson) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *ListWorkerAssembliesRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	assemblyIdFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.AssemblyId)
	hasInner = hasInner || len(assemblyIdFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range assemblyIdFields {
		res[k] = v
	}
	return res
}

func (this *ListWorkerAssembliesRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.AssemblyId, dst)
}

func (this *ListWorkerAssembliesResponse) LogFields() map[string]string {
	return map[string]string{}
}

func (this *ListWorkerAssembliesResponse) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *GetWorkerAssemblyRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	workerAssemblyIdFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.WorkerAssemblyId)
	hasInner = hasInner || len(workerAssemblyIdFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range workerAssemblyIdFields {
		res[k] = v
	}
	return res
}

func (this *GetWorkerAssemblyRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.WorkerAssemblyId, dst)
}

func (this *GetWorkerAssemblyResponse) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	workerFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Worker)
	hasInner = hasInner || len(workerFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range workerFields {
		res[k] = v
	}
	return res
}

func (this *GetWorkerAssemblyResponse) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Worker, dst)
}

func (this *SetWorkerAssemblyRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	workerFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Worker)
	hasInner = hasInner || len(workerFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range workerFields {
		res[k] = v
	}
	return res
}

func (this *SetWorkerAssemblyRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Worker, dst)
}

func (this *SetWorkerAssemblyResponse) LogFields() map[string]string {
	return map[string]string{}
}

func (this *SetWorkerAssemblyResponse) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *DeleteWorkerAssemblyRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	workerAssemblyIdFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.WorkerAssemblyId)
	hasInner = hasInner || len(workerAssemblyIdFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range workerAssemblyIdFields {
		res[k] = v
	}
	return res
}

func (this *DeleteWorkerAssemblyRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.WorkerAssemblyId, dst)
}

func (this *DeleteWorkerAssemblyResponse) LogFields() map[string]string {
	return map[string]string{}
}

func (this *DeleteWorkerAssemblyResponse) ExtractRequestFields(dst map[string]interface{}) {
}
