// Code generated by protoc-gen-go. DO NOT EDIT.
// source: improbable/platform/assembly/artifact.proto

package improbable_platform_assembly

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/improbable-io/go-proto-logfields"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	_ "improbable.io/proto/improbable/ext/plugin/auth"
	platform "improbable.io/proto/improbable/platform"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ArtifactId struct {
	AssemblyId           *AssemblyId `protobuf:"bytes,1,opt,name=assembly_id,json=assemblyId,proto3" json:"assembly_id,omitempty"`
	Name                 string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	WorkerName           string      `protobuf:"bytes,3,opt,name=worker_name,json=workerName,proto3" json:"worker_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ArtifactId) Reset()         { *m = ArtifactId{} }
func (m *ArtifactId) String() string { return proto.CompactTextString(m) }
func (*ArtifactId) ProtoMessage()    {}
func (*ArtifactId) Descriptor() ([]byte, []int) {
	return fileDescriptor_f965b5c49c1461f6, []int{0}
}

func (m *ArtifactId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArtifactId.Unmarshal(m, b)
}
func (m *ArtifactId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArtifactId.Marshal(b, m, deterministic)
}
func (m *ArtifactId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArtifactId.Merge(m, src)
}
func (m *ArtifactId) XXX_Size() int {
	return xxx_messageInfo_ArtifactId.Size(m)
}
func (m *ArtifactId) XXX_DiscardUnknown() {
	xxx_messageInfo_ArtifactId.DiscardUnknown(m)
}

var xxx_messageInfo_ArtifactId proto.InternalMessageInfo

func (m *ArtifactId) GetAssemblyId() *AssemblyId {
	if m != nil {
		return m.AssemblyId
	}
	return nil
}

func (m *ArtifactId) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ArtifactId) GetWorkerName() string {
	if m != nil {
		return m.WorkerName
	}
	return ""
}

type Artifact struct {
	ArtifactId           *ArtifactId          `protobuf:"bytes,1,opt,name=artifact_id,json=artifactId,proto3" json:"artifact_id,omitempty"`
	ArtifactType         string               `protobuf:"bytes,2,opt,name=artifact_type,json=artifactType,proto3" json:"artifact_type,omitempty"` // Deprecated: Do not use.
	CreatorEmail         string               `protobuf:"bytes,3,opt,name=creator_email,json=creatorEmail,proto3" json:"creator_email,omitempty"`
	Md5                  string               `protobuf:"bytes,4,opt,name=md5,proto3" json:"md5,omitempty"`
	CreationTime         *timestamp.Timestamp `protobuf:"bytes,5,opt,name=creation_time,json=creationTime,proto3" json:"creation_time,omitempty"`
	Url                  string               `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	Size                 uint64               `protobuf:"varint,7,opt,name=size,proto3" json:"size,omitempty"`
	Public               bool                 `protobuf:"varint,100,opt,name=public,proto3" json:"public,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Artifact) Reset()         { *m = Artifact{} }
func (m *Artifact) String() string { return proto.CompactTextString(m) }
func (*Artifact) ProtoMessage()    {}
func (*Artifact) Descriptor() ([]byte, []int) {
	return fileDescriptor_f965b5c49c1461f6, []int{1}
}

func (m *Artifact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Artifact.Unmarshal(m, b)
}
func (m *Artifact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Artifact.Marshal(b, m, deterministic)
}
func (m *Artifact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Artifact.Merge(m, src)
}
func (m *Artifact) XXX_Size() int {
	return xxx_messageInfo_Artifact.Size(m)
}
func (m *Artifact) XXX_DiscardUnknown() {
	xxx_messageInfo_Artifact.DiscardUnknown(m)
}

var xxx_messageInfo_Artifact proto.InternalMessageInfo

func (m *Artifact) GetArtifactId() *ArtifactId {
	if m != nil {
		return m.ArtifactId
	}
	return nil
}

// Deprecated: Do not use.
func (m *Artifact) GetArtifactType() string {
	if m != nil {
		return m.ArtifactType
	}
	return ""
}

func (m *Artifact) GetCreatorEmail() string {
	if m != nil {
		return m.CreatorEmail
	}
	return ""
}

func (m *Artifact) GetMd5() string {
	if m != nil {
		return m.Md5
	}
	return ""
}

func (m *Artifact) GetCreationTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreationTime
	}
	return nil
}

func (m *Artifact) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Artifact) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Artifact) GetPublic() bool {
	if m != nil {
		return m.Public
	}
	return false
}

type ArtifactUploadUrl struct {
	ArtifactId           *ArtifactId `protobuf:"bytes,1,opt,name=artifact_id,json=artifactId,proto3" json:"artifact_id,omitempty"`
	Url                  string      `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	AlreadyUploaded      bool        `protobuf:"varint,3,opt,name=already_uploaded,json=alreadyUploaded,proto3" json:"already_uploaded,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ArtifactUploadUrl) Reset()         { *m = ArtifactUploadUrl{} }
func (m *ArtifactUploadUrl) String() string { return proto.CompactTextString(m) }
func (*ArtifactUploadUrl) ProtoMessage()    {}
func (*ArtifactUploadUrl) Descriptor() ([]byte, []int) {
	return fileDescriptor_f965b5c49c1461f6, []int{2}
}

func (m *ArtifactUploadUrl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArtifactUploadUrl.Unmarshal(m, b)
}
func (m *ArtifactUploadUrl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArtifactUploadUrl.Marshal(b, m, deterministic)
}
func (m *ArtifactUploadUrl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArtifactUploadUrl.Merge(m, src)
}
func (m *ArtifactUploadUrl) XXX_Size() int {
	return xxx_messageInfo_ArtifactUploadUrl.Size(m)
}
func (m *ArtifactUploadUrl) XXX_DiscardUnknown() {
	xxx_messageInfo_ArtifactUploadUrl.DiscardUnknown(m)
}

var xxx_messageInfo_ArtifactUploadUrl proto.InternalMessageInfo

func (m *ArtifactUploadUrl) GetArtifactId() *ArtifactId {
	if m != nil {
		return m.ArtifactId
	}
	return nil
}

func (m *ArtifactUploadUrl) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *ArtifactUploadUrl) GetAlreadyUploaded() bool {
	if m != nil {
		return m.AlreadyUploaded
	}
	return false
}

type ArtifactListRequest struct {
	AssemblyId           *AssemblyId `protobuf:"bytes,1,opt,name=assembly_id,json=assemblyId,proto3" json:"assembly_id,omitempty"`
	ArtifactType         string      `protobuf:"bytes,2,opt,name=artifact_type,json=artifactType,proto3" json:"artifact_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ArtifactListRequest) Reset()         { *m = ArtifactListRequest{} }
func (m *ArtifactListRequest) String() string { return proto.CompactTextString(m) }
func (*ArtifactListRequest) ProtoMessage()    {}
func (*ArtifactListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f965b5c49c1461f6, []int{3}
}

func (m *ArtifactListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArtifactListRequest.Unmarshal(m, b)
}
func (m *ArtifactListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArtifactListRequest.Marshal(b, m, deterministic)
}
func (m *ArtifactListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArtifactListRequest.Merge(m, src)
}
func (m *ArtifactListRequest) XXX_Size() int {
	return xxx_messageInfo_ArtifactListRequest.Size(m)
}
func (m *ArtifactListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ArtifactListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ArtifactListRequest proto.InternalMessageInfo

func (m *ArtifactListRequest) GetAssemblyId() *AssemblyId {
	if m != nil {
		return m.AssemblyId
	}
	return nil
}

func (m *ArtifactListRequest) GetArtifactType() string {
	if m != nil {
		return m.ArtifactType
	}
	return ""
}

type ListSupportedFileStorageProvidersRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListSupportedFileStorageProvidersRequest) Reset() {
	*m = ListSupportedFileStorageProvidersRequest{}
}
func (m *ListSupportedFileStorageProvidersRequest) String() string { return proto.CompactTextString(m) }
func (*ListSupportedFileStorageProvidersRequest) ProtoMessage()    {}
func (*ListSupportedFileStorageProvidersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f965b5c49c1461f6, []int{4}
}

func (m *ListSupportedFileStorageProvidersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSupportedFileStorageProvidersRequest.Unmarshal(m, b)
}
func (m *ListSupportedFileStorageProvidersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSupportedFileStorageProvidersRequest.Marshal(b, m, deterministic)
}
func (m *ListSupportedFileStorageProvidersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSupportedFileStorageProvidersRequest.Merge(m, src)
}
func (m *ListSupportedFileStorageProvidersRequest) XXX_Size() int {
	return xxx_messageInfo_ListSupportedFileStorageProvidersRequest.Size(m)
}
func (m *ListSupportedFileStorageProvidersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSupportedFileStorageProvidersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListSupportedFileStorageProvidersRequest proto.InternalMessageInfo

type ListSupportedFileStorageProvidersResponse struct {
	SupportedStorageProviders []platform.StorageProvider `protobuf:"varint,1,rep,packed,name=supported_storage_providers,json=supportedStorageProviders,proto3,enum=improbable.platform.StorageProvider" json:"supported_storage_providers,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                   `json:"-"`
	XXX_unrecognized          []byte                     `json:"-"`
	XXX_sizecache             int32                      `json:"-"`
}

func (m *ListSupportedFileStorageProvidersResponse) Reset() {
	*m = ListSupportedFileStorageProvidersResponse{}
}
func (m *ListSupportedFileStorageProvidersResponse) String() string {
	return proto.CompactTextString(m)
}
func (*ListSupportedFileStorageProvidersResponse) ProtoMessage() {}
func (*ListSupportedFileStorageProvidersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f965b5c49c1461f6, []int{5}
}

func (m *ListSupportedFileStorageProvidersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSupportedFileStorageProvidersResponse.Unmarshal(m, b)
}
func (m *ListSupportedFileStorageProvidersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSupportedFileStorageProvidersResponse.Marshal(b, m, deterministic)
}
func (m *ListSupportedFileStorageProvidersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSupportedFileStorageProvidersResponse.Merge(m, src)
}
func (m *ListSupportedFileStorageProvidersResponse) XXX_Size() int {
	return xxx_messageInfo_ListSupportedFileStorageProvidersResponse.Size(m)
}
func (m *ListSupportedFileStorageProvidersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSupportedFileStorageProvidersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListSupportedFileStorageProvidersResponse proto.InternalMessageInfo

func (m *ListSupportedFileStorageProvidersResponse) GetSupportedStorageProviders() []platform.StorageProvider {
	if m != nil {
		return m.SupportedStorageProviders
	}
	return nil
}

type CreateResumableRequest struct {
	Artifact             *Artifact `protobuf:"bytes,1,opt,name=artifact,proto3" json:"artifact,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateResumableRequest) Reset()         { *m = CreateResumableRequest{} }
func (m *CreateResumableRequest) String() string { return proto.CompactTextString(m) }
func (*CreateResumableRequest) ProtoMessage()    {}
func (*CreateResumableRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f965b5c49c1461f6, []int{6}
}

func (m *CreateResumableRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResumableRequest.Unmarshal(m, b)
}
func (m *CreateResumableRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResumableRequest.Marshal(b, m, deterministic)
}
func (m *CreateResumableRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResumableRequest.Merge(m, src)
}
func (m *CreateResumableRequest) XXX_Size() int {
	return xxx_messageInfo_CreateResumableRequest.Size(m)
}
func (m *CreateResumableRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResumableRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResumableRequest proto.InternalMessageInfo

func (m *CreateResumableRequest) GetArtifact() *Artifact {
	if m != nil {
		return m.Artifact
	}
	return nil
}

type CreateResumableResponse struct {
	AlreadyUploaded      bool     `protobuf:"varint,1,opt,name=already_uploaded,json=alreadyUploaded,proto3" json:"already_uploaded,omitempty"`
	Url                  string   `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateResumableResponse) Reset()         { *m = CreateResumableResponse{} }
func (m *CreateResumableResponse) String() string { return proto.CompactTextString(m) }
func (*CreateResumableResponse) ProtoMessage()    {}
func (*CreateResumableResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f965b5c49c1461f6, []int{7}
}

func (m *CreateResumableResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResumableResponse.Unmarshal(m, b)
}
func (m *CreateResumableResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResumableResponse.Marshal(b, m, deterministic)
}
func (m *CreateResumableResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResumableResponse.Merge(m, src)
}
func (m *CreateResumableResponse) XXX_Size() int {
	return xxx_messageInfo_CreateResumableResponse.Size(m)
}
func (m *CreateResumableResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResumableResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResumableResponse proto.InternalMessageInfo

func (m *CreateResumableResponse) GetAlreadyUploaded() bool {
	if m != nil {
		return m.AlreadyUploaded
	}
	return false
}

func (m *CreateResumableResponse) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type CreateMultipartRequest struct {
	Artifact             *Artifact `protobuf:"bytes,1,opt,name=artifact,proto3" json:"artifact,omitempty"`
	FilePartMd5S         []string  `protobuf:"bytes,2,rep,name=file_part_md5s,json=filePartMd5s,proto3" json:"file_part_md5s,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateMultipartRequest) Reset()         { *m = CreateMultipartRequest{} }
func (m *CreateMultipartRequest) String() string { return proto.CompactTextString(m) }
func (*CreateMultipartRequest) ProtoMessage()    {}
func (*CreateMultipartRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f965b5c49c1461f6, []int{8}
}

func (m *CreateMultipartRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateMultipartRequest.Unmarshal(m, b)
}
func (m *CreateMultipartRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateMultipartRequest.Marshal(b, m, deterministic)
}
func (m *CreateMultipartRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateMultipartRequest.Merge(m, src)
}
func (m *CreateMultipartRequest) XXX_Size() int {
	return xxx_messageInfo_CreateMultipartRequest.Size(m)
}
func (m *CreateMultipartRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateMultipartRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateMultipartRequest proto.InternalMessageInfo

func (m *CreateMultipartRequest) GetArtifact() *Artifact {
	if m != nil {
		return m.Artifact
	}
	return nil
}

func (m *CreateMultipartRequest) GetFilePartMd5S() []string {
	if m != nil {
		return m.FilePartMd5S
	}
	return nil
}

type CreateMultipartResponse struct {
	AlreadyUploaded            bool     `protobuf:"varint,1,opt,name=already_uploaded,json=alreadyUploaded,proto3" json:"already_uploaded,omitempty"`
	UploadPartUrls             []string `protobuf:"bytes,2,rep,name=upload_part_urls,json=uploadPartUrls,proto3" json:"upload_part_urls,omitempty"`
	CompleteMultipartUploadUrl string   `protobuf:"bytes,3,opt,name=complete_multipart_upload_url,json=completeMultipartUploadUrl,proto3" json:"complete_multipart_upload_url,omitempty"`
	XXX_NoUnkeyedLiteral       struct{} `json:"-"`
	XXX_unrecognized           []byte   `json:"-"`
	XXX_sizecache              int32    `json:"-"`
}

func (m *CreateMultipartResponse) Reset()         { *m = CreateMultipartResponse{} }
func (m *CreateMultipartResponse) String() string { return proto.CompactTextString(m) }
func (*CreateMultipartResponse) ProtoMessage()    {}
func (*CreateMultipartResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f965b5c49c1461f6, []int{9}
}

func (m *CreateMultipartResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateMultipartResponse.Unmarshal(m, b)
}
func (m *CreateMultipartResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateMultipartResponse.Marshal(b, m, deterministic)
}
func (m *CreateMultipartResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateMultipartResponse.Merge(m, src)
}
func (m *CreateMultipartResponse) XXX_Size() int {
	return xxx_messageInfo_CreateMultipartResponse.Size(m)
}
func (m *CreateMultipartResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateMultipartResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateMultipartResponse proto.InternalMessageInfo

func (m *CreateMultipartResponse) GetAlreadyUploaded() bool {
	if m != nil {
		return m.AlreadyUploaded
	}
	return false
}

func (m *CreateMultipartResponse) GetUploadPartUrls() []string {
	if m != nil {
		return m.UploadPartUrls
	}
	return nil
}

func (m *CreateMultipartResponse) GetCompleteMultipartUploadUrl() string {
	if m != nil {
		return m.CompleteMultipartUploadUrl
	}
	return ""
}

func init() {
	proto.RegisterType((*ArtifactId)(nil), "improbable.platform.assembly.ArtifactId")
	proto.RegisterType((*Artifact)(nil), "improbable.platform.assembly.Artifact")
	proto.RegisterType((*ArtifactUploadUrl)(nil), "improbable.platform.assembly.ArtifactUploadUrl")
	proto.RegisterType((*ArtifactListRequest)(nil), "improbable.platform.assembly.ArtifactListRequest")
	proto.RegisterType((*ListSupportedFileStorageProvidersRequest)(nil), "improbable.platform.assembly.ListSupportedFileStorageProvidersRequest")
	proto.RegisterType((*ListSupportedFileStorageProvidersResponse)(nil), "improbable.platform.assembly.ListSupportedFileStorageProvidersResponse")
	proto.RegisterType((*CreateResumableRequest)(nil), "improbable.platform.assembly.CreateResumableRequest")
	proto.RegisterType((*CreateResumableResponse)(nil), "improbable.platform.assembly.CreateResumableResponse")
	proto.RegisterType((*CreateMultipartRequest)(nil), "improbable.platform.assembly.CreateMultipartRequest")
	proto.RegisterType((*CreateMultipartResponse)(nil), "improbable.platform.assembly.CreateMultipartResponse")
}

func init() {
	proto.RegisterFile("improbable/platform/assembly/artifact.proto", fileDescriptor_f965b5c49c1461f6)
}

var fileDescriptor_f965b5c49c1461f6 = []byte{
	// 1130 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0x4f, 0x6f, 0x1b, 0xc5,
	0x1b, 0xfe, 0x8d, 0x93, 0x9f, 0x09, 0xd3, 0xfc, 0x63, 0x2a, 0xa5, 0x8b, 0x5b, 0x88, 0xd9, 0x86,
	0xe2, 0x06, 0xbc, 0xdb, 0xa4, 0x04, 0xd1, 0x80, 0x54, 0x52, 0x48, 0xa3, 0x20, 0x5a, 0x05, 0xa7,
	0xe1, 0x40, 0xd4, 0xae, 0xc6, 0xde, 0x89, 0x33, 0xed, 0xae, 0x67, 0x99, 0x99, 0x4d, 0x48, 0xa3,
	0x5c, 0x38, 0x22, 0xf5, 0x80, 0x2a, 0x71, 0xe8, 0x81, 0x4a, 0x5c, 0x39, 0x71, 0x41, 0x08, 0x71,
	0x47, 0x9c, 0x38, 0xf0, 0x01, 0x22, 0x05, 0xae, 0x9c, 0xf8, 0x02, 0x68, 0x76, 0x67, 0xd6, 0x8e,
	0x63, 0x92, 0xb5, 0x68, 0x6e, 0xe3, 0x77, 0xde, 0x7f, 0xcf, 0xf3, 0x3e, 0xfb, 0x8e, 0xe1, 0xeb,
	0x34, 0x8c, 0x38, 0xab, 0xe3, 0x7a, 0x40, 0xdc, 0x28, 0xc0, 0x72, 0x83, 0xf1, 0xd0, 0xc5, 0x42,
	0x90, 0xb0, 0x1e, 0xec, 0xb8, 0x98, 0x4b, 0xba, 0x81, 0x1b, 0xd2, 0x89, 0x38, 0x93, 0x0c, 0x5d,
	0x68, 0x3b, 0x3b, 0xc6, 0xd9, 0x31, 0xce, 0xa5, 0x13, 0x52, 0xe9, 0x43, 0x9a, 0xaa, 0xf4, 0x56,
	0x93, 0xca, 0xcd, 0xb8, 0xee, 0x34, 0x58, 0xe8, 0x86, 0xdb, 0x54, 0x3e, 0x60, 0xdb, 0x6e, 0x93,
	0x55, 0x93, 0xcb, 0xea, 0x16, 0x0e, 0xa8, 0x8f, 0x25, 0xe3, 0xc2, 0xcd, 0x8e, 0x3a, 0xee, 0x42,
	0x93, 0xb1, 0x66, 0x40, 0x5c, 0x1c, 0x51, 0x17, 0xb7, 0x5a, 0x4c, 0x62, 0x49, 0x59, 0x4b, 0xe8,
	0xdb, 0xf3, 0xfa, 0x36, 0xf9, 0x55, 0x8f, 0x37, 0x5c, 0x12, 0x46, 0xd2, 0x94, 0x9c, 0xec, 0xbe,
	0x94, 0x34, 0x24, 0x42, 0xe2, 0x30, 0xd2, 0x0e, 0xef, 0x74, 0xf4, 0xd4, 0xc6, 0x52, 0xa5, 0xac,
	0xdd, 0x59, 0xc0, 0x9a, 0x1b, 0x94, 0x04, 0xbe, 0x70, 0xb3, 0x93, 0x0e, 0xbe, 0xd4, 0x81, 0x9e,
	0x7c, 0x2e, 0xdd, 0x28, 0x88, 0x9b, 0xb4, 0xe5, 0xe2, 0x58, 0x6e, 0xba, 0x11, 0xe1, 0xa1, 0xf1,
	0x2b, 0xf7, 0x62, 0xa9, 0xc1, 0xc2, 0x90, 0xb5, 0x52, 0x0f, 0xfb, 0x17, 0x00, 0xe1, 0x82, 0x26,
	0x7e, 0xd9, 0x47, 0x1f, 0xc3, 0x33, 0x86, 0x3b, 0x8f, 0xfa, 0x16, 0x28, 0x83, 0xca, 0x99, 0xd9,
	0x8a, 0x73, 0xdc, 0x28, 0x9c, 0x05, 0x7d, 0x58, 0xf6, 0x6f, 0x14, 0x0f, 0xf6, 0x27, 0x0b, 0x65,
	0x50, 0x83, 0x38, 0xb3, 0xa1, 0x45, 0x38, 0xd8, 0xc2, 0x21, 0xb1, 0x0a, 0x65, 0x50, 0x79, 0xfe,
	0xc6, 0xcc, 0xb7, 0xdf, 0xbd, 0x3c, 0x06, 0x47, 0xcc, 0xac, 0x3d, 0x75, 0x75, 0xb0, 0x3f, 0x59,
	0x82, 0xd6, 0xbd, 0x75, 0x5c, 0x7d, 0xb8, 0x50, 0xfd, 0xf4, 0x4a, 0xf5, 0x9a, 0xf7, 0x9e, 0x53,
	0xbd, 0xbb, 0x3b, 0xfb, 0xc6, 0xcc, 0xec, 0xdb, 0x7b, 0x53, 0xb5, 0x24, 0x1c, 0x4d, 0xc2, 0x33,
	0xdb, 0x8c, 0x3f, 0x20, 0x3c, 0x09, 0xb1, 0x06, 0x54, 0xb6, 0x1a, 0x4c, 0x4d, 0xb7, 0x71, 0x48,
	0xec, 0x9f, 0x0b, 0x70, 0xc8, 0x20, 0x49, 0x70, 0x98, 0x12, 0xb9, 0x71, 0x64, 0x34, 0x74, 0xe0,
	0x68, 0x53, 0xf3, 0x5a, 0x47, 0xd7, 0x72, 0x27, 0x32, 0x80, 0x0a, 0x16, 0xa8, 0x0d, 0x9b, 0x8b,
	0x3b, 0x3b, 0x11, 0x41, 0x17, 0xe1, 0x48, 0x83, 0x13, 0x25, 0x23, 0x8f, 0x84, 0x98, 0x06, 0xba,
	0xd7, 0x61, 0x6d, 0x5c, 0x54, 0x36, 0x34, 0x0e, 0x07, 0x42, 0x7f, 0xce, 0x1a, 0x4c, 0xae, 0xd4,
	0x11, 0x5d, 0xd7, 0x61, 0x94, 0xb5, 0x3c, 0x25, 0x16, 0xeb, 0xff, 0x49, 0xd3, 0x25, 0x27, 0x55,
	0x92, 0x63, 0x94, 0xe4, 0xdc, 0x31, 0x4a, 0xd2, 0x29, 0x29, 0x6b, 0x29, 0x93, 0x4a, 0x19, 0xf3,
	0xc0, 0x2a, 0xa6, 0x29, 0x63, 0x1e, 0x20, 0x04, 0x07, 0x05, 0x7d, 0x48, 0xac, 0xe7, 0xca, 0xa0,
	0x32, 0x58, 0x4b, 0xce, 0x68, 0x02, 0x16, 0xa3, 0xb8, 0x1e, 0xd0, 0x86, 0xe5, 0x97, 0x41, 0x65,
	0xa8, 0xa6, 0x7f, 0xd9, 0x3f, 0x02, 0xf8, 0x82, 0x61, 0x60, 0x2d, 0x0a, 0x18, 0xf6, 0xd7, 0x78,
	0x70, 0x1a, 0x3c, 0xbe, 0x9a, 0xb6, 0x99, 0xb2, 0x77, 0xf6, 0x60, 0x7f, 0x72, 0x0c, 0x8e, 0xdc,
	0xdb, 0x94, 0x32, 0x12, 0xd7, 0xe7, 0x5d, 0xd7, 0x99, 0x9e, 0x4a, 0x7b, 0xbf, 0x0c, 0xc7, 0x71,
	0xc0, 0x09, 0xf6, 0x77, 0xbc, 0x38, 0x69, 0x87, 0xf8, 0x09, 0x91, 0x43, 0xb5, 0x31, 0x6d, 0x5f,
	0xd3, 0x66, 0xfb, 0x11, 0x80, 0x67, 0x4d, 0xd1, 0x8f, 0xa8, 0x90, 0x35, 0xf2, 0x59, 0x4c, 0x84,
	0x3c, 0x0d, 0x31, 0x5f, 0xec, 0x29, 0x82, 0xc3, 0x02, 0xb0, 0xa7, 0x61, 0x45, 0xb5, 0xb1, 0x1a,
	0x47, 0x11, 0xe3, 0x92, 0xf8, 0x37, 0x69, 0x40, 0x56, 0x25, 0xe3, 0xb8, 0x49, 0x56, 0x38, 0xdb,
	0xa2, 0x3e, 0xe1, 0x42, 0xf7, 0x68, 0x7f, 0x05, 0xe0, 0xe5, 0x1c, 0xce, 0x22, 0x62, 0x2d, 0x41,
	0x90, 0x0f, 0xcf, 0x0b, 0xe3, 0xe8, 0x89, 0xd4, 0xcb, 0x8b, 0x8c, 0x9b, 0x05, 0xca, 0x03, 0x95,
	0xd1, 0xd9, 0xa9, 0x9e, 0x08, 0xbb, 0x72, 0xd6, 0x5e, 0xcc, 0x12, 0x75, 0x57, 0xb3, 0x7d, 0x38,
	0xf1, 0xbe, 0x12, 0x16, 0xa9, 0x11, 0x11, 0x87, 0x2a, 0x8d, 0x61, 0xf4, 0x43, 0x38, 0x64, 0x90,
	0x6a, 0x3a, 0x2f, 0xe5, 0xd3, 0x42, 0x46, 0x66, 0x16, 0x6f, 0x7f, 0x02, 0xcf, 0x1d, 0xa9, 0xa2,
	0x61, 0xf6, 0x9a, 0x3d, 0xe8, 0x39, 0x7b, 0x23, 0xfa, 0x42, 0x26, 0x7a, 0xfb, 0x4b, 0x60, 0xda,
	0xbf, 0x15, 0x07, 0x92, 0x46, 0x98, 0xcb, 0x53, 0x68, 0x1f, 0x4d, 0xc1, 0xd1, 0x0d, 0x1a, 0x10,
	0x4f, 0xe5, 0xf7, 0x42, 0x7f, 0x4e, 0x58, 0x85, 0xf2, 0x80, 0x92, 0x82, 0xb2, 0xae, 0x60, 0x2e,
	0x6f, 0xf9, 0x73, 0xc2, 0xfe, 0x1e, 0x18, 0x94, 0x1d, 0xcd, 0xf4, 0x8f, 0xb2, 0x02, 0xc7, 0x53,
	0x97, 0xb4, 0x5c, 0xcc, 0x03, 0x53, 0x6e, 0x34, 0xb5, 0xab, 0x82, 0x6b, 0x3c, 0x10, 0x68, 0x01,
	0xbe, 0xd4, 0x60, 0x61, 0x14, 0x10, 0x49, 0xbc, 0xd0, 0x94, 0xd4, 0xf9, 0x55, 0x9c, 0x5e, 0x46,
	0x25, 0xe3, 0x94, 0xb5, 0x95, 0x7d, 0xf3, 0xb3, 0xbf, 0x0d, 0xc3, 0x31, 0x03, 0x7c, 0x95, 0xf0,
	0x2d, 0xda, 0x20, 0xe8, 0x2f, 0x00, 0x07, 0x96, 0x88, 0x44, 0xb9, 0x3f, 0xfd, 0x52, 0x4e, 0x66,
	0xed, 0xc7, 0xe0, 0xc9, 0x53, 0xfb, 0x5a, 0x7b, 0xcd, 0xa8, 0x2a, 0xd3, 0xeb, 0xfc, 0xee, 0x7c,
	0xc4, 0xef, 0xbb, 0xbb, 0x98, 0x37, 0x93, 0xb7, 0xec, 0x3e, 0x69, 0xc8, 0x3d, 0x17, 0x8b, 0x50,
	0x9b, 0x4c, 0x9e, 0xbd, 0x2f, 0x7e, 0xff, 0xf3, 0x71, 0x61, 0x05, 0xdd, 0x6e, 0xbf, 0xfd, 0x5b,
	0x57, 0xdd, 0xdd, 0x8e, 0xcf, 0xde, 0x44, 0xab, 0xa3, 0x7a, 0x39, 0xf6, 0x0e, 0xdf, 0xa6, 0x26,
	0x53, 0x5c, 0xb8, 0xbb, 0x89, 0x01, 0xfd, 0x01, 0x60, 0xf1, 0x03, 0xa2, 0x08, 0xea, 0x03, 0xf2,
	0xc4, 0x91, 0x55, 0xbd, 0xa8, 0xfe, 0x11, 0xd8, 0x5f, 0x2b, 0x88, 0xef, 0xc2, 0x51, 0x53, 0x45,
	0x27, 0x9e, 0x5e, 0xdf, 0xee, 0x0f, 0xe5, 0xf4, 0xb3, 0x46, 0xf9, 0x37, 0x80, 0x83, 0x6a, 0xf9,
	0xa0, 0x99, 0x7c, 0x18, 0x3b, 0x96, 0x6b, 0xee, 0xf9, 0x3e, 0x52, 0xe0, 0xe7, 0x61, 0xb6, 0x21,
	0x93, 0x7a, 0xfd, 0x0e, 0x78, 0x19, 0x2d, 0x3d, 0x23, 0xe8, 0x57, 0x00, 0xfa, 0x01, 0xc0, 0x57,
	0x4e, 0x5c, 0xb9, 0xe8, 0xe6, 0xf1, 0xf8, 0xf2, 0x2e, 0xf8, 0xd2, 0xd2, 0x7f, 0xce, 0x93, 0xae,
	0x0b, 0xfb, 0x7f, 0xe8, 0x9b, 0x02, 0x2c, 0xa6, 0xcb, 0x04, 0xe5, 0x64, 0xbf, 0xe4, 0xe6, 0xf3,
	0xcb, 0x3e, 0x7e, 0xfb, 0xa7, 0x2e, 0xad, 0xea, 0x7a, 0xfd, 0x6a, 0x55, 0x96, 0x78, 0xd7, 0xc0,
	0xda, 0xff, 0x22, 0x9c, 0x13, 0x86, 0xf7, 0x2f, 0x9e, 0x47, 0x34, 0xdc, 0xe9, 0x98, 0xea, 0xf9,
	0x57, 0x00, 0xc7, 0xba, 0xde, 0x14, 0xf4, 0xe6, 0xf1, 0x0c, 0xf4, 0x7e, 0xe8, 0x4a, 0x73, 0x7d,
	0x46, 0xe9, 0x19, 0x2d, 0x3f, 0x79, 0x6a, 0x2f, 0xc2, 0x73, 0x87, 0xc9, 0x6b, 0xf7, 0xd2, 0x07,
	0x8b, 0x1d, 0x58, 0xb2, 0x15, 0x9d, 0x0f, 0x4b, 0xf7, 0xab, 0x97, 0x0f, 0xcb, 0x91, 0xe7, 0xa9,
	0x37, 0x96, 0x76, 0x2f, 0x7d, 0x60, 0xa9, 0x17, 0x93, 0x85, 0x78, 0xf5, 0x9f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x02, 0xca, 0x50, 0x06, 0x00, 0x0e, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ArtifactServiceClient is the client API for ArtifactService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ArtifactServiceClient interface {
	Get(ctx context.Context, in *ArtifactId, opts ...grpc.CallOption) (*Artifact, error)
	Delete(ctx context.Context, in *ArtifactId, opts ...grpc.CallOption) (*empty.Empty, error)
	List(ctx context.Context, in *ArtifactListRequest, opts ...grpc.CallOption) (ArtifactService_ListClient, error)
	ListSupportedFileStorageProviders(ctx context.Context, in *ListSupportedFileStorageProvidersRequest, opts ...grpc.CallOption) (*ListSupportedFileStorageProvidersResponse, error)
	Create(ctx context.Context, in *Artifact, opts ...grpc.CallOption) (*ArtifactUploadUrl, error)
	CreateResumable(ctx context.Context, in *CreateResumableRequest, opts ...grpc.CallOption) (*CreateResumableResponse, error)
	CreateMultipart(ctx context.Context, in *CreateMultipartRequest, opts ...grpc.CallOption) (*CreateMultipartResponse, error)
}

type artifactServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewArtifactServiceClient(cc grpc.ClientConnInterface) ArtifactServiceClient {
	return &artifactServiceClient{cc}
}

func (c *artifactServiceClient) Get(ctx context.Context, in *ArtifactId, opts ...grpc.CallOption) (*Artifact, error) {
	out := new(Artifact)
	err := c.cc.Invoke(ctx, "/improbable.platform.assembly.ArtifactService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *artifactServiceClient) Delete(ctx context.Context, in *ArtifactId, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/improbable.platform.assembly.ArtifactService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *artifactServiceClient) List(ctx context.Context, in *ArtifactListRequest, opts ...grpc.CallOption) (ArtifactService_ListClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ArtifactService_serviceDesc.Streams[0], "/improbable.platform.assembly.ArtifactService/List", opts...)
	if err != nil {
		return nil, err
	}
	x := &artifactServiceListClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ArtifactService_ListClient interface {
	Recv() (*Artifact, error)
	grpc.ClientStream
}

type artifactServiceListClient struct {
	grpc.ClientStream
}

func (x *artifactServiceListClient) Recv() (*Artifact, error) {
	m := new(Artifact)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *artifactServiceClient) ListSupportedFileStorageProviders(ctx context.Context, in *ListSupportedFileStorageProvidersRequest, opts ...grpc.CallOption) (*ListSupportedFileStorageProvidersResponse, error) {
	out := new(ListSupportedFileStorageProvidersResponse)
	err := c.cc.Invoke(ctx, "/improbable.platform.assembly.ArtifactService/ListSupportedFileStorageProviders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *artifactServiceClient) Create(ctx context.Context, in *Artifact, opts ...grpc.CallOption) (*ArtifactUploadUrl, error) {
	out := new(ArtifactUploadUrl)
	err := c.cc.Invoke(ctx, "/improbable.platform.assembly.ArtifactService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *artifactServiceClient) CreateResumable(ctx context.Context, in *CreateResumableRequest, opts ...grpc.CallOption) (*CreateResumableResponse, error) {
	out := new(CreateResumableResponse)
	err := c.cc.Invoke(ctx, "/improbable.platform.assembly.ArtifactService/CreateResumable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *artifactServiceClient) CreateMultipart(ctx context.Context, in *CreateMultipartRequest, opts ...grpc.CallOption) (*CreateMultipartResponse, error) {
	out := new(CreateMultipartResponse)
	err := c.cc.Invoke(ctx, "/improbable.platform.assembly.ArtifactService/CreateMultipart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ArtifactServiceServer is the server API for ArtifactService service.
type ArtifactServiceServer interface {
	Get(context.Context, *ArtifactId) (*Artifact, error)
	Delete(context.Context, *ArtifactId) (*empty.Empty, error)
	List(*ArtifactListRequest, ArtifactService_ListServer) error
	ListSupportedFileStorageProviders(context.Context, *ListSupportedFileStorageProvidersRequest) (*ListSupportedFileStorageProvidersResponse, error)
	Create(context.Context, *Artifact) (*ArtifactUploadUrl, error)
	CreateResumable(context.Context, *CreateResumableRequest) (*CreateResumableResponse, error)
	CreateMultipart(context.Context, *CreateMultipartRequest) (*CreateMultipartResponse, error)
}

// UnimplementedArtifactServiceServer can be embedded to have forward compatible implementations.
type UnimplementedArtifactServiceServer struct {
}

func (*UnimplementedArtifactServiceServer) Get(ctx context.Context, req *ArtifactId) (*Artifact, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedArtifactServiceServer) Delete(ctx context.Context, req *ArtifactId) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedArtifactServiceServer) List(req *ArtifactListRequest, srv ArtifactService_ListServer) error {
	return status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedArtifactServiceServer) ListSupportedFileStorageProviders(ctx context.Context, req *ListSupportedFileStorageProvidersRequest) (*ListSupportedFileStorageProvidersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListSupportedFileStorageProviders not implemented")
}
func (*UnimplementedArtifactServiceServer) Create(ctx context.Context, req *Artifact) (*ArtifactUploadUrl, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedArtifactServiceServer) CreateResumable(ctx context.Context, req *CreateResumableRequest) (*CreateResumableResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateResumable not implemented")
}
func (*UnimplementedArtifactServiceServer) CreateMultipart(ctx context.Context, req *CreateMultipartRequest) (*CreateMultipartResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMultipart not implemented")
}

func RegisterArtifactServiceServer(s *grpc.Server, srv ArtifactServiceServer) {
	s.RegisterService(&_ArtifactService_serviceDesc, srv)
}

func _ArtifactService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArtifactId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArtifactServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.platform.assembly.ArtifactService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArtifactServiceServer).Get(ctx, req.(*ArtifactId))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArtifactService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArtifactId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArtifactServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.platform.assembly.ArtifactService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArtifactServiceServer).Delete(ctx, req.(*ArtifactId))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArtifactService_List_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ArtifactListRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ArtifactServiceServer).List(m, &artifactServiceListServer{stream})
}

type ArtifactService_ListServer interface {
	Send(*Artifact) error
	grpc.ServerStream
}

type artifactServiceListServer struct {
	grpc.ServerStream
}

func (x *artifactServiceListServer) Send(m *Artifact) error {
	return x.ServerStream.SendMsg(m)
}

func _ArtifactService_ListSupportedFileStorageProviders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListSupportedFileStorageProvidersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArtifactServiceServer).ListSupportedFileStorageProviders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.platform.assembly.ArtifactService/ListSupportedFileStorageProviders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArtifactServiceServer).ListSupportedFileStorageProviders(ctx, req.(*ListSupportedFileStorageProvidersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArtifactService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Artifact)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArtifactServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.platform.assembly.ArtifactService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArtifactServiceServer).Create(ctx, req.(*Artifact))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArtifactService_CreateResumable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateResumableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArtifactServiceServer).CreateResumable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.platform.assembly.ArtifactService/CreateResumable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArtifactServiceServer).CreateResumable(ctx, req.(*CreateResumableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArtifactService_CreateMultipart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMultipartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArtifactServiceServer).CreateMultipart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.platform.assembly.ArtifactService/CreateMultipart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArtifactServiceServer).CreateMultipart(ctx, req.(*CreateMultipartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ArtifactService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "improbable.platform.assembly.ArtifactService",
	HandlerType: (*ArtifactServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _ArtifactService_Get_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ArtifactService_Delete_Handler,
		},
		{
			MethodName: "ListSupportedFileStorageProviders",
			Handler:    _ArtifactService_ListSupportedFileStorageProviders_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _ArtifactService_Create_Handler,
		},
		{
			MethodName: "CreateResumable",
			Handler:    _ArtifactService_CreateResumable_Handler,
		},
		{
			MethodName: "CreateMultipart",
			Handler:    _ArtifactService_CreateMultipart_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "List",
			Handler:       _ArtifactService_List_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "improbable/platform/assembly/artifact.proto",
}
