// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/platform/assembly/worker_launch_config.proto

package improbable_platform_assembly

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	github_com_improbable_io_go_proto_logfields "github.com/improbable-io/go-proto-logfields"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *WorkerZip) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	zipFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Zip)
	hasInner = hasInner || len(zipFields) > 0
	workerLocationFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.WorkerLocation)
	hasInner = hasInner || len(workerLocationFields) > 0
	exposedPortsFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.ExposedPorts)
	hasInner = hasInner || len(exposedPortsFields) > 0
	containerConfigFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.ContainerConfig)
	hasInner = hasInner || len(containerConfigFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range zipFields {
		res[k] = v
	}
	for k, v := range workerLocationFields {
		res[k] = v
	}
	for k, v := range exposedPortsFields {
		res[k] = v
	}
	for k, v := range containerConfigFields {
		res[k] = v
	}
	return res
}

func (this *WorkerZip) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Zip, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.WorkerLocation, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.ExposedPorts, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.ContainerConfig, dst)
}

func (this *WorkerZip_WorkerLocation) LogFields() map[string]string {
	return map[string]string{}
}

func (this *WorkerZip_WorkerLocation) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *ContainerConfig) LogFields() map[string]string {
	return map[string]string{}
}

func (this *ContainerConfig) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *ExposedPort) LogFields() map[string]string {
	return map[string]string{}
}

func (this *ExposedPort) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *WorkerLaunchConfiguration) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	var workerLaunchFields map[string]string
	switch f := this.WorkerLaunch.(type) {
	case *WorkerLaunchConfiguration_WorkerZip:
		workerLaunchFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.WorkerZip)
	default:
		workerLaunchFields = map[string]string{}
	}
	hasInner = hasInner || len(workerLaunchFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range workerLaunchFields {
		res[k] = v
	}
	return res
}

func (this *WorkerLaunchConfiguration) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	if f, ok := this.WorkerLaunch.(*WorkerLaunchConfiguration_WorkerZip); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.WorkerZip, dst)
	}
}

func (this *WorkerLaunchDescriptor) LogFields() map[string]string {
	return map[string]string{}
}

func (this *WorkerLaunchDescriptor) ExtractRequestFields(dst map[string]interface{}) {
}
