// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/fabric/regisseur/expectation.proto

package improbable_regisseur

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *Expectation) Validate() error {
	if oneOfNester, ok := this.GetExpectationType().(*Expectation_MetricExpectation); ok {
		if oneOfNester.MetricExpectation != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.MetricExpectation); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("MetricExpectation", err)
			}
		}
	}
	if oneOfNester, ok := this.GetExpectationType().(*Expectation_SnapshotExpectation); ok {
		if oneOfNester.SnapshotExpectation != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.SnapshotExpectation); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("SnapshotExpectation", err)
			}
		}
	}
	if oneOfNester, ok := this.GetExpectationType().(*Expectation_ChiSquaredMetricExpectation); ok {
		if oneOfNester.ChiSquaredMetricExpectation != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.ChiSquaredMetricExpectation); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("ChiSquaredMetricExpectation", err)
			}
		}
	}
	if this.MinValue != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.MinValue); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("MinValue", err)
		}
	}
	if this.MaxValue != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.MaxValue); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("MaxValue", err)
		}
	}
	return nil
}
func (this *SnapshotExpectation) Validate() error {
	if oneOfNester, ok := this.GetSnapshotExpectationType().(*SnapshotExpectation_PresentEntities); ok {
		if oneOfNester.PresentEntities != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.PresentEntities); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("PresentEntities", err)
			}
		}
	}
	if oneOfNester, ok := this.GetSnapshotExpectationType().(*SnapshotExpectation_NumberOfSnapshots); ok {
		if oneOfNester.NumberOfSnapshots != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.NumberOfSnapshots); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("NumberOfSnapshots", err)
			}
		}
	}
	if oneOfNester, ok := this.GetSnapshotExpectationType().(*SnapshotExpectation_SnapshotSize); ok {
		if oneOfNester.SnapshotSize != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.SnapshotSize); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("SnapshotSize", err)
			}
		}
	}
	return nil
}
func (this *SnapshotExpectation_PresentEntitiesSnapshotExpectation) Validate() error {
	for _, item := range this.EntityIdRanges {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("EntityIdRanges", err)
			}
		}
	}
	return nil
}
func (this *SnapshotExpectation_NumberOfSnapshotsExpectation) Validate() error {
	if this.MinSnapshotsTaken != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.MinSnapshotsTaken); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("MinSnapshotsTaken", err)
		}
	}
	if this.MaxSnapshotsTaken != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.MaxSnapshotsTaken); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("MaxSnapshotsTaken", err)
		}
	}
	return nil
}
func (this *SnapshotExpectation_SnapshotSizeExpectation) Validate() error {
	if this.MinSizeBytes != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.MinSizeBytes); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("MinSizeBytes", err)
		}
	}
	if this.MaxSizeBytes != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.MaxSizeBytes); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("MaxSizeBytes", err)
		}
	}
	return nil
}
func (this *MetricExpectation) Validate() error {
	if this.MinValue != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.MinValue); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("MinValue", err)
		}
	}
	if this.MaxValue != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.MaxValue); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("MaxValue", err)
		}
	}
	return nil
}
func (this *ChiSquaredMetricExpectation) Validate() error {
	return nil
}
func (this *DoubleValue) Validate() error {
	return nil
}
func (this *LongValue) Validate() error {
	return nil
}
func (this *LongRange) Validate() error {
	return nil
}
