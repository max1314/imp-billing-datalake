// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/fabric/regisseur/scenario.proto

package improbable_regisseur

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	_ "improbable.io/proto/improbable/inner/fabric_bundle"
	_ "improbable.io/proto/improbable/platform"
	_ "improbable.io/proto/improbable/platform/deployment"
	math "math"
	regexp "regexp"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

var _regex_Scenario_DeploymentName = regexp.MustCompile(`^([a-z0-9_]{2,32})?$`)

func (this *Scenario) Validate() error {
	if this.Identifier != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Identifier); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Identifier", err)
		}
	}
	if this.ProjectId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ProjectId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ProjectId", err)
		}
	}
	if this.Assembly != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Assembly); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Assembly", err)
		}
	}
	if this.DeploymentConfiguration != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.DeploymentConfiguration); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("DeploymentConfiguration", err)
		}
	}
	if !_regex_Scenario_DeploymentName.MatchString(this.DeploymentName) {
		return github_com_mwitkow_go_proto_validators.FieldError("DeploymentName", fmt.Errorf(`value '%v' must be a string conforming to regex "^([a-z0-9_]{2,32})?$"`, this.DeploymentName))
	}
	for _, item := range this.Metrics {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Metrics", err)
			}
		}
	}
	if this.Lifetime != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Lifetime); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Lifetime", err)
		}
	}
	for _, item := range this.Events {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Events", err)
			}
		}
	}
	for _, item := range this.Expectations {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Expectations", err)
			}
		}
	}
	for _, item := range this.ClientConnectionBatches {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("ClientConnectionBatches", err)
			}
		}
	}
	for _, item := range this.GenericClientNodes {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("GenericClientNodes", err)
			}
		}
	}
	for _, item := range this.ExternalWorkers {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("ExternalWorkers", err)
			}
		}
	}
	for _, item := range this.LocalClientConnections {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("LocalClientConnections", err)
			}
		}
	}
	for _, item := range this.Tags {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Tags", err)
			}
		}
	}
	if this.FabricVersion != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.FabricVersion); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("FabricVersion", err)
		}
	}
	if this.InitialState != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.InitialState); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("InitialState", err)
		}
	}
	if this.LaunchConfiguration != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.LaunchConfiguration); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("LaunchConfiguration", err)
		}
	}
	return nil
}
func (this *Scenario_Lifetime) Validate() error {
	return nil
}
func (this *InitialState) Validate() error {
	if this.SnapshotId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.SnapshotId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("SnapshotId", err)
		}
	}
	if this.TaggedSnapshot != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.TaggedSnapshot); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("TaggedSnapshot", err)
		}
	}
	return nil
}

var _regex_TaggedSnapshot_HistoryName = regexp.MustCompile(`^[a-zA-Z0-9_]{2,32}$`)

func (this *TaggedSnapshot) Validate() error {
	if !_regex_TaggedSnapshot_HistoryName.MatchString(this.HistoryName) {
		return github_com_mwitkow_go_proto_validators.FieldError("HistoryName", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-zA-Z0-9_]{2,32}$"`, this.HistoryName))
	}
	return nil
}
func (this *SnapshotId) Validate() error {
	if nil == this.HistoryId {
		return github_com_mwitkow_go_proto_validators.FieldError("HistoryId", fmt.Errorf("message must exist"))
	}
	if this.HistoryId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.HistoryId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("HistoryId", err)
		}
	}
	return nil
}

var _regex_HistoryId_Name = regexp.MustCompile(`^[a-zA-Z0-9_]{2,32}$`)

func (this *HistoryId) Validate() error {
	if this.ProjectId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ProjectId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ProjectId", err)
		}
	}
	if !_regex_HistoryId_Name.MatchString(this.Name) {
		return github_com_mwitkow_go_proto_validators.FieldError("Name", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-zA-Z0-9_]{2,32}$"`, this.Name))
	}
	return nil
}

var _regex_ScenarioIdentifier_Name = regexp.MustCompile(`^[a-zA-Z0-9_]{5,30}$`)

func (this *ScenarioIdentifier) Validate() error {
	if !_regex_ScenarioIdentifier_Name.MatchString(this.Name) {
		return github_com_mwitkow_go_proto_validators.FieldError("Name", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-zA-Z0-9_]{5,30}$"`, this.Name))
	}
	return nil
}
func (this *ScenarioTag) Validate() error {
	return nil
}
func (this *Assembly) Validate() error {
	return nil
}
func (this *Event) Validate() error {
	if oneOfNester, ok := this.GetEventType().(*Event_WorkerFlagUpdate); ok {
		if oneOfNester.WorkerFlagUpdate != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.WorkerFlagUpdate); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("WorkerFlagUpdate", err)
			}
		}
	}
	if oneOfNester, ok := this.GetEventType().(*Event_ProfileRuntime); ok {
		if oneOfNester.ProfileRuntime != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.ProfileRuntime); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("ProfileRuntime", err)
			}
		}
	}
	return nil
}
func (this *UpdateWorkerFlagEvent) Validate() error {
	if this.WorkerType != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.WorkerType); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("WorkerType", err)
		}
	}
	for _, item := range this.WorkerFlagUpdates {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("WorkerFlagUpdates", err)
			}
		}
	}
	return nil
}
func (this *UpdateWorkerFlagEvent_WorkerFlagUpdate) Validate() error {
	return nil
}
func (this *AsyncProfilerEvent) Validate() error {
	return nil
}
func (this *Metric) Validate() error {
	if this.Fallback != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Fallback); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Fallback", err)
		}
	}
	return nil
}
func (this *Metric_Fallback) Validate() error {
	if this.ValueFallback != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ValueFallback); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ValueFallback", err)
		}
	}
	return nil
}
