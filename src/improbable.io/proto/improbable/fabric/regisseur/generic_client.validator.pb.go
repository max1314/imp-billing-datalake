// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/fabric/regisseur/generic_client.proto

package improbable_regisseur

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	math "math"
	regexp "regexp"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

var _regex_GenericClientNode_Name = regexp.MustCompile(`^[a-zA-Z0-9_]{2,20}$`)

func (this *GenericClientNode) Validate() error {
	if !_regex_GenericClientNode_Name.MatchString(this.Name) {
		return github_com_mwitkow_go_proto_validators.FieldError("Name", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-zA-Z0-9_]{2,20}$"`, this.Name))
	}
	if this.Config != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Config); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Config", err)
		}
	}
	return nil
}
func (this *TestRunnerConfig) Validate() error {
	if nil == this.Command {
		return github_com_mwitkow_go_proto_validators.FieldError("Command", fmt.Errorf("message must exist"))
	}
	if this.Command != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Command); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Command", err)
		}
	}
	return nil
}
func (this *TestRunnerCommand) Validate() error {
	return nil
}
