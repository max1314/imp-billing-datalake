// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/fabric/regisseur/scenario_result.proto

package improbable_regisseur

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	_ "improbable.io/proto/improbable/platform/history"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *ScenarioResult) Validate() error {
	if this.Identifier != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Identifier); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Identifier", err)
		}
	}
	for _, item := range this.Metrics {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Metrics", err)
			}
		}
	}
	for _, item := range this.ExpectationResults {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("ExpectationResults", err)
			}
		}
	}
	return nil
}
func (this *CapturedMetric) Validate() error {
	for _, item := range this.PrometheusResults {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("PrometheusResults", err)
			}
		}
	}
	if this.Fallback != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Fallback); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Fallback", err)
		}
	}
	return nil
}
func (this *PrometheusResult) Validate() error {
	for _, item := range this.Samples {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Samples", err)
			}
		}
	}
	for _, item := range this.LabelPairs {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("LabelPairs", err)
			}
		}
	}
	return nil
}
func (this *LabelPair) Validate() error {
	return nil
}
func (this *SamplePair) Validate() error {
	if this.Timestamp != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Timestamp); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Timestamp", err)
		}
	}
	return nil
}
func (this *CapturedSnapshot) Validate() error {
	if this.Metadata != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Metadata); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Metadata", err)
		}
	}
	return nil
}
func (this *ExpectationResult) Validate() error {
	return nil
}
