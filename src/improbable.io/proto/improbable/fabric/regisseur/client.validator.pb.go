// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/fabric/regisseur/client.proto

package improbable_regisseur

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *ClientConnectionBatch) Validate() error {
	if this.ClientConfiguration != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ClientConfiguration); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ClientConfiguration", err)
		}
	}
	return nil
}
func (this *ClientConfiguration) Validate() error {
	if this.RedTeamArenaConfig != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.RedTeamArenaConfig); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("RedTeamArenaConfig", err)
		}
	}
	if this.WorldsBereftConfig != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.WorldsBereftConfig); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("WorldsBereftConfig", err)
		}
	}
	if this.GamexConfig != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.GamexConfig); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("GamexConfig", err)
		}
	}
	return nil
}
func (this *WorldsBereftClientConfiguration) Validate() error {
	if this.SpawnSpec != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.SpawnSpec); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("SpawnSpec", err)
		}
	}
	return nil
}
func (this *WorldsBereftClientConfiguration_SpawnSpec) Validate() error {
	if this.SpecificIsland != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.SpecificIsland); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("SpecificIsland", err)
		}
	}
	return nil
}
func (this *WorldsBereftClientConfiguration_SpawnSpec_SpecificIslandSpec) Validate() error {
	return nil
}
func (this *GameXClientConfiguration) Validate() error {
	for _, item := range this.PlayerSpecs {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("PlayerSpecs", err)
			}
		}
	}
	return nil
}
func (this *GameXClientConfiguration_PlayerSpec) Validate() error {
	if this.LinkSettings != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.LinkSettings); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("LinkSettings", err)
		}
	}
	return nil
}
func (this *GameXClientConfiguration_PlayerSpec_RakNetLinkSettings) Validate() error {
	return nil
}
func (this *GameXClientConfiguration_PlayerSpec_TcpLinkSettings) Validate() error {
	return nil
}
func (this *GameXClientConfiguration_PlayerSpec_LinkSettings) Validate() error {
	if this.Tcp != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Tcp); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Tcp", err)
		}
	}
	if this.Raknet != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Raknet); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Raknet", err)
		}
	}
	return nil
}
