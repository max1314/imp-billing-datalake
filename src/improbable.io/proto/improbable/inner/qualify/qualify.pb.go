// Code generated by protoc-gen-go. DO NOT EDIT.
// source: improbable/inner/qualify/qualify.proto

package improbable_inner_qualify

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/improbable-io/go-proto-logfields"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	deployment "improbable.io/proto/improbable/platform/deployment"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type QualificationRequest struct {
	ClusterId            *deployment.ClusterId `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	Groups               []string              `protobuf:"bytes,2,rep,name=groups,proto3" json:"groups,omitempty"`
	DeploymentName       string                `protobuf:"bytes,3,opt,name=deployment_name,json=deploymentName,proto3" json:"deployment_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *QualificationRequest) Reset()         { *m = QualificationRequest{} }
func (m *QualificationRequest) String() string { return proto.CompactTextString(m) }
func (*QualificationRequest) ProtoMessage()    {}
func (*QualificationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4326c88f79672dc2, []int{0}
}

func (m *QualificationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QualificationRequest.Unmarshal(m, b)
}
func (m *QualificationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QualificationRequest.Marshal(b, m, deterministic)
}
func (m *QualificationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QualificationRequest.Merge(m, src)
}
func (m *QualificationRequest) XXX_Size() int {
	return xxx_messageInfo_QualificationRequest.Size(m)
}
func (m *QualificationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QualificationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QualificationRequest proto.InternalMessageInfo

func (m *QualificationRequest) GetClusterId() *deployment.ClusterId {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *QualificationRequest) GetGroups() []string {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *QualificationRequest) GetDeploymentName() string {
	if m != nil {
		return m.DeploymentName
	}
	return ""
}

type CancellationRequest struct {
	ClusterId            *deployment.ClusterId `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	DeploymentName       string                `protobuf:"bytes,2,opt,name=deployment_name,json=deploymentName,proto3" json:"deployment_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CancellationRequest) Reset()         { *m = CancellationRequest{} }
func (m *CancellationRequest) String() string { return proto.CompactTextString(m) }
func (*CancellationRequest) ProtoMessage()    {}
func (*CancellationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4326c88f79672dc2, []int{1}
}

func (m *CancellationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancellationRequest.Unmarshal(m, b)
}
func (m *CancellationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancellationRequest.Marshal(b, m, deterministic)
}
func (m *CancellationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancellationRequest.Merge(m, src)
}
func (m *CancellationRequest) XXX_Size() int {
	return xxx_messageInfo_CancellationRequest.Size(m)
}
func (m *CancellationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CancellationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CancellationRequest proto.InternalMessageInfo

func (m *CancellationRequest) GetClusterId() *deployment.ClusterId {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *CancellationRequest) GetDeploymentName() string {
	if m != nil {
		return m.DeploymentName
	}
	return ""
}

func init() {
	proto.RegisterType((*QualificationRequest)(nil), "improbable.inner.qualify.QualificationRequest")
	proto.RegisterType((*CancellationRequest)(nil), "improbable.inner.qualify.CancellationRequest")
}

func init() {
	proto.RegisterFile("improbable/inner/qualify/qualify.proto", fileDescriptor_4326c88f79672dc2)
}

var fileDescriptor_4326c88f79672dc2 = []byte{
	// 480 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x53, 0x41, 0x8b, 0xd3, 0x40,
	0x14, 0x26, 0x59, 0x28, 0x74, 0x84, 0x95, 0x9d, 0x2e, 0x35, 0x54, 0xdd, 0x2d, 0x61, 0x91, 0xba,
	0x34, 0x33, 0xd2, 0x82, 0xe0, 0x7a, 0xdb, 0xe2, 0xc1, 0x8b, 0x68, 0x55, 0x10, 0xc4, 0x2d, 0x93,
	0x64, 0x1a, 0x07, 0x27, 0x79, 0xd9, 0xc9, 0xa4, 0x4b, 0x57, 0xf7, 0xe2, 0xd5, 0xa3, 0xff, 0xc0,
	0xab, 0xff, 0xc1, 0x3f, 0xe1, 0xcd, 0xcb, 0xc2, 0xe2, 0x0f, 0x91, 0x26, 0x93, 0xa6, 0xb2, 0x2d,
	0x9e, 0x3c, 0xe5, 0x4d, 0xbe, 0xf7, 0xbd, 0x2f, 0xdf, 0x37, 0x2f, 0xe8, 0x9e, 0x88, 0x53, 0x05,
	0x3e, 0xf3, 0x25, 0xa7, 0x22, 0x49, 0xb8, 0xa2, 0xa7, 0x39, 0x93, 0x62, 0x3a, 0xaf, 0x9e, 0x24,
	0x55, 0xa0, 0x01, 0x3b, 0x75, 0x1f, 0x29, 0xfa, 0x88, 0xc1, 0x3b, 0xfd, 0x95, 0x09, 0xa9, 0x64,
	0x7a, 0x0a, 0x2a, 0xa6, 0x21, 0x4f, 0x25, 0xcc, 0x63, 0x9e, 0x68, 0x1a, 0xc8, 0x3c, 0xd3, 0x5c,
	0x95, 0x73, 0x3a, 0x0f, 0x23, 0xa1, 0xdf, 0xe7, 0x3e, 0x09, 0x20, 0xa6, 0xf1, 0x99, 0xd0, 0x1f,
	0xe0, 0x8c, 0x46, 0xe0, 0x15, 0xa0, 0x37, 0x63, 0x52, 0x84, 0x4c, 0x83, 0xca, 0xe8, 0xb2, 0x34,
	0xbc, 0xc7, 0x2b, 0xbc, 0x5a, 0xd0, 0x13, 0x50, 0xb3, 0x25, 0x44, 0x53, 0xc1, 0x65, 0x98, 0xd1,
	0x65, 0x65, 0xc8, 0xb7, 0x23, 0x80, 0x68, 0xf1, 0x79, 0x8b, 0x93, 0x9f, 0x4f, 0x29, 0x8f, 0x53,
	0x6d, 0x9c, 0x75, 0xee, 0x18, 0x90, 0xa5, 0x82, 0xb2, 0x24, 0x01, 0xcd, 0xb4, 0x80, 0xc4, 0x50,
	0xdd, 0x5f, 0x16, 0xda, 0x7d, 0x51, 0x38, 0x15, 0x41, 0x01, 0x8c, 0xf9, 0x69, 0xce, 0x33, 0x8d,
	0x9f, 0x23, 0x64, 0x9c, 0x4d, 0x44, 0xe8, 0x58, 0x5d, 0xab, 0x77, 0x63, 0x70, 0x9f, 0xac, 0xa4,
	0x54, 0x65, 0x41, 0xea, 0x2c, 0xc8, 0xa8, 0x64, 0x3c, 0x0d, 0x8f, 0x1b, 0x57, 0x97, 0xfb, 0x76,
	0xd7, 0x1a, 0x37, 0x83, 0xea, 0x15, 0x6e, 0xa3, 0x46, 0xa4, 0x20, 0x4f, 0x33, 0xc7, 0xee, 0x6e,
	0xf5, 0x9a, 0x63, 0x73, 0xc2, 0x6f, 0xd0, 0xcd, 0x7a, 0xc4, 0x24, 0x61, 0x31, 0x77, 0xb6, 0xba,
	0x56, 0xaf, 0x79, 0x4c, 0xbf, 0x7d, 0xdf, 0xdb, 0xb9, 0x06, 0x5e, 0x5d, 0xee, 0xb7, 0xd1, 0xee,
	0xc9, 0xc1, 0xa7, 0x93, 0xb7, 0xcc, 0x3b, 0x7f, 0xe0, 0x3d, 0x9a, 0xbc, 0xfb, 0x38, 0xe8, 0x0f,
	0x07, 0x17, 0x07, 0xe3, 0xed, 0xba, 0xf5, 0x19, 0x8b, 0xb9, 0xfb, 0xc3, 0x42, 0xad, 0x11, 0x4b,
	0x02, 0x2e, 0xe5, 0x7f, 0xf6, 0xf6, 0xfa, 0xba, 0x07, 0xbb, 0xf0, 0xd0, 0xdf, 0xe4, 0xa1, 0x85,
	0x76, 0xfe, 0x69, 0x60, 0xf0, 0xc5, 0x46, 0xdb, 0xe5, 0xed, 0xcc, 0x5f, 0x72, 0x35, 0x13, 0x01,
	0xc7, 0x17, 0xa8, 0xf5, 0x4a, 0x89, 0x28, 0xe2, 0x6a, 0x24, 0x21, 0x0f, 0x0d, 0x8a, 0x09, 0xd9,
	0xb4, 0xc0, 0x64, 0xdd, 0xf5, 0x76, 0xda, 0xa4, 0x5c, 0x0b, 0x52, 0xed, 0x0c, 0x79, 0xb2, 0xd8,
	0x19, 0x77, 0xef, 0xf3, 0xcf, 0xdf, 0x5f, 0x6d, 0xc7, 0x6d, 0x2d, 0xff, 0x93, 0xd9, 0xb0, 0x2a,
	0x8f, 0xac, 0x43, 0x7c, 0x8e, 0x70, 0x99, 0xe8, 0x5f, 0xea, 0xde, 0x66, 0xf5, 0x35, 0xf9, 0x6f,
	0x14, 0xbf, 0x5b, 0x88, 0xdf, 0x72, 0xf1, 0xaa, 0x78, 0x50, 0x0c, 0x38, 0xb2, 0x0e, 0xfd, 0x46,
	0xd1, 0x3e, 0xfc, 0x13, 0x00, 0x00, 0xff, 0xff, 0x6b, 0xbd, 0xc1, 0x89, 0xd4, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// QualifyServiceClient is the client API for QualifyService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QualifyServiceClient interface {
	TriggerCloudQualify(ctx context.Context, in *QualificationRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	CancelCloudQualify(ctx context.Context, in *CancellationRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type qualifyServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewQualifyServiceClient(cc grpc.ClientConnInterface) QualifyServiceClient {
	return &qualifyServiceClient{cc}
}

func (c *qualifyServiceClient) TriggerCloudQualify(ctx context.Context, in *QualificationRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/improbable.inner.qualify.QualifyService/TriggerCloudQualify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qualifyServiceClient) CancelCloudQualify(ctx context.Context, in *CancellationRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/improbable.inner.qualify.QualifyService/CancelCloudQualify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QualifyServiceServer is the server API for QualifyService service.
type QualifyServiceServer interface {
	TriggerCloudQualify(context.Context, *QualificationRequest) (*empty.Empty, error)
	CancelCloudQualify(context.Context, *CancellationRequest) (*empty.Empty, error)
}

// UnimplementedQualifyServiceServer can be embedded to have forward compatible implementations.
type UnimplementedQualifyServiceServer struct {
}

func (*UnimplementedQualifyServiceServer) TriggerCloudQualify(ctx context.Context, req *QualificationRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TriggerCloudQualify not implemented")
}
func (*UnimplementedQualifyServiceServer) CancelCloudQualify(ctx context.Context, req *CancellationRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelCloudQualify not implemented")
}

func RegisterQualifyServiceServer(s *grpc.Server, srv QualifyServiceServer) {
	s.RegisterService(&_QualifyService_serviceDesc, srv)
}

func _QualifyService_TriggerCloudQualify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QualificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QualifyServiceServer).TriggerCloudQualify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.inner.qualify.QualifyService/TriggerCloudQualify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QualifyServiceServer).TriggerCloudQualify(ctx, req.(*QualificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QualifyService_CancelCloudQualify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancellationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QualifyServiceServer).CancelCloudQualify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.inner.qualify.QualifyService/CancelCloudQualify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QualifyServiceServer).CancelCloudQualify(ctx, req.(*CancellationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _QualifyService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "improbable.inner.qualify.QualifyService",
	HandlerType: (*QualifyServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TriggerCloudQualify",
			Handler:    _QualifyService_TriggerCloudQualify_Handler,
		},
		{
			MethodName: "CancelCloudQualify",
			Handler:    _QualifyService_CancelCloudQualify_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "improbable/inner/qualify/qualify.proto",
}
