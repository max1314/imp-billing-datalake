// Code generated by protoc-gen-go. DO NOT EDIT.
// source: improbable/inner/token/token.proto

package improbable_inner_token

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DecodeRefreshTokenRequest struct {
	RefreshToken         string   `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecodeRefreshTokenRequest) Reset()         { *m = DecodeRefreshTokenRequest{} }
func (m *DecodeRefreshTokenRequest) String() string { return proto.CompactTextString(m) }
func (*DecodeRefreshTokenRequest) ProtoMessage()    {}
func (*DecodeRefreshTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a1651fef5e73d27, []int{0}
}

func (m *DecodeRefreshTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecodeRefreshTokenRequest.Unmarshal(m, b)
}
func (m *DecodeRefreshTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecodeRefreshTokenRequest.Marshal(b, m, deterministic)
}
func (m *DecodeRefreshTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecodeRefreshTokenRequest.Merge(m, src)
}
func (m *DecodeRefreshTokenRequest) XXX_Size() int {
	return xxx_messageInfo_DecodeRefreshTokenRequest.Size(m)
}
func (m *DecodeRefreshTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DecodeRefreshTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DecodeRefreshTokenRequest proto.InternalMessageInfo

func (m *DecodeRefreshTokenRequest) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

type DecodeRefreshTokenResponse struct {
	DecodedRefreshToken  string   `protobuf:"bytes,1,opt,name=decoded_refresh_token,json=decodedRefreshToken,proto3" json:"decoded_refresh_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecodeRefreshTokenResponse) Reset()         { *m = DecodeRefreshTokenResponse{} }
func (m *DecodeRefreshTokenResponse) String() string { return proto.CompactTextString(m) }
func (*DecodeRefreshTokenResponse) ProtoMessage()    {}
func (*DecodeRefreshTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a1651fef5e73d27, []int{1}
}

func (m *DecodeRefreshTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecodeRefreshTokenResponse.Unmarshal(m, b)
}
func (m *DecodeRefreshTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecodeRefreshTokenResponse.Marshal(b, m, deterministic)
}
func (m *DecodeRefreshTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecodeRefreshTokenResponse.Merge(m, src)
}
func (m *DecodeRefreshTokenResponse) XXX_Size() int {
	return xxx_messageInfo_DecodeRefreshTokenResponse.Size(m)
}
func (m *DecodeRefreshTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DecodeRefreshTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DecodeRefreshTokenResponse proto.InternalMessageInfo

func (m *DecodeRefreshTokenResponse) GetDecodedRefreshToken() string {
	if m != nil {
		return m.DecodedRefreshToken
	}
	return ""
}

func init() {
	proto.RegisterType((*DecodeRefreshTokenRequest)(nil), "improbable.inner.token.DecodeRefreshTokenRequest")
	proto.RegisterType((*DecodeRefreshTokenResponse)(nil), "improbable.inner.token.DecodeRefreshTokenResponse")
}

func init() {
	proto.RegisterFile("improbable/inner/token/token.proto", fileDescriptor_5a1651fef5e73d27)
}

var fileDescriptor_5a1651fef5e73d27 = []byte{
	// 232 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0xca, 0xcc, 0x2d, 0x28,
	0xca, 0x4f, 0x4a, 0x4c, 0xca, 0x49, 0xd5, 0xcf, 0xcc, 0xcb, 0x4b, 0x2d, 0xd2, 0x2f, 0xc9, 0xcf,
	0x4e, 0xcd, 0x83, 0x90, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0x62, 0x08, 0x35, 0x7a, 0x60,
	0x35, 0x7a, 0x60, 0x59, 0x29, 0x99, 0xf4, 0xfc, 0xfc, 0xf4, 0x9c, 0x54, 0xfd, 0xc4, 0x82, 0x4c,
	0xfd, 0xc4, 0xbc, 0xbc, 0xfc, 0x92, 0xc4, 0x92, 0xcc, 0xfc, 0xbc, 0x62, 0x88, 0x2e, 0x25, 0x07,
	0x2e, 0x49, 0x97, 0xd4, 0xe4, 0xfc, 0x94, 0xd4, 0xa0, 0xd4, 0xb4, 0xa2, 0xd4, 0xe2, 0x8c, 0x10,
	0x90, 0x9e, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x65, 0x2e, 0xde, 0x22, 0x88, 0x70,
	0x3c, 0xd8, 0x2c, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x9e, 0x22, 0x24, 0xb5, 0x4a, 0x01,
	0x5c, 0x52, 0xd8, 0x4c, 0x28, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0x15, 0x32, 0xe2, 0x12, 0x4d, 0x01,
	0xcb, 0xa6, 0xc4, 0x63, 0x33, 0x4a, 0x18, 0x2a, 0x89, 0xac, 0xd7, 0x68, 0x25, 0x23, 0x17, 0x0f,
	0x98, 0x15, 0x9c, 0x5a, 0x54, 0x96, 0x99, 0x9c, 0x2a, 0x34, 0x83, 0x91, 0x4b, 0x08, 0xd3, 0x0e,
	0x21, 0x43, 0x3d, 0xec, 0x5e, 0xd6, 0xc3, 0xe9, 0x23, 0x29, 0x23, 0x52, 0xb4, 0x40, 0xbc, 0xa0,
	0x24, 0xdd, 0x74, 0xf9, 0xc9, 0x64, 0x26, 0x51, 0x25, 0x01, 0x68, 0xa0, 0x97, 0x19, 0xeb, 0x43,
	0x5c, 0x6d, 0xc5, 0xa8, 0x95, 0xc4, 0x06, 0x0e, 0x46, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x0b, 0x63, 0xc8, 0xe1, 0xa2, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TokenServiceClient is the client API for TokenService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TokenServiceClient interface {
	DecodeRefreshToken(ctx context.Context, in *DecodeRefreshTokenRequest, opts ...grpc.CallOption) (*DecodeRefreshTokenResponse, error)
}

type tokenServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTokenServiceClient(cc grpc.ClientConnInterface) TokenServiceClient {
	return &tokenServiceClient{cc}
}

func (c *tokenServiceClient) DecodeRefreshToken(ctx context.Context, in *DecodeRefreshTokenRequest, opts ...grpc.CallOption) (*DecodeRefreshTokenResponse, error) {
	out := new(DecodeRefreshTokenResponse)
	err := c.cc.Invoke(ctx, "/improbable.inner.token.TokenService/DecodeRefreshToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TokenServiceServer is the server API for TokenService service.
type TokenServiceServer interface {
	DecodeRefreshToken(context.Context, *DecodeRefreshTokenRequest) (*DecodeRefreshTokenResponse, error)
}

// UnimplementedTokenServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTokenServiceServer struct {
}

func (*UnimplementedTokenServiceServer) DecodeRefreshToken(ctx context.Context, req *DecodeRefreshTokenRequest) (*DecodeRefreshTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DecodeRefreshToken not implemented")
}

func RegisterTokenServiceServer(s *grpc.Server, srv TokenServiceServer) {
	s.RegisterService(&_TokenService_serviceDesc, srv)
}

func _TokenService_DecodeRefreshToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DecodeRefreshTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TokenServiceServer).DecodeRefreshToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.inner.token.TokenService/DecodeRefreshToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TokenServiceServer).DecodeRefreshToken(ctx, req.(*DecodeRefreshTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TokenService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "improbable.inner.token.TokenService",
	HandlerType: (*TokenServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DecodeRefreshToken",
			Handler:    _TokenService_DecodeRefreshToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "improbable/inner/token/token.proto",
}
