// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/inner/simulation_plane/simulation_plane.proto

package improbable_inner_simulation_plane

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	_ "improbable.io/proto/improbable/inner/cluster"
	_ "improbable.io/proto/improbable/platform/deployment"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *SimulationPlaneStatus) Validate() error {
	return nil
}
func (this *GetStatusRequest) Validate() error {
	if nil == this.SimulationPlaneId {
		return github_com_mwitkow_go_proto_validators.FieldError("SimulationPlaneId", fmt.Errorf("message must exist"))
	}
	if this.SimulationPlaneId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.SimulationPlaneId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("SimulationPlaneId", err)
		}
	}
	return nil
}
func (this *GetStatusResponse) Validate() error {
	if this.SimulationPlaneStatus != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.SimulationPlaneStatus); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("SimulationPlaneStatus", err)
		}
	}
	return nil
}
func (this *SetStatusRequest) Validate() error {
	if nil == this.SimulationPlaneId {
		return github_com_mwitkow_go_proto_validators.FieldError("SimulationPlaneId", fmt.Errorf("message must exist"))
	}
	if this.SimulationPlaneId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.SimulationPlaneId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("SimulationPlaneId", err)
		}
	}
	if this.SimulationPlaneStatus != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.SimulationPlaneStatus); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("SimulationPlaneStatus", err)
		}
	}
	return nil
}
func (this *SetStatusResponse) Validate() error {
	return nil
}
func (this *RegisterSimulationPlaneRequest) Validate() error {
	if nil == this.SimulationPlane {
		return github_com_mwitkow_go_proto_validators.FieldError("SimulationPlane", fmt.Errorf("message must exist"))
	}
	if this.SimulationPlane != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.SimulationPlane); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("SimulationPlane", err)
		}
	}
	return nil
}
func (this *RegisterSimulationPlaneResponse) Validate() error {
	return nil
}
func (this *DeregisterSimulationPlaneRequest) Validate() error {
	if nil == this.SimulationPlane {
		return github_com_mwitkow_go_proto_validators.FieldError("SimulationPlane", fmt.Errorf("message must exist"))
	}
	if this.SimulationPlane != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.SimulationPlane); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("SimulationPlane", err)
		}
	}
	return nil
}
func (this *DeregisterSimulationPlaneResponse) Validate() error {
	return nil
}
func (this *ListDeploymentsRequest) Validate() error {
	if nil == this.SimulationPlaneId {
		return github_com_mwitkow_go_proto_validators.FieldError("SimulationPlaneId", fmt.Errorf("message must exist"))
	}
	if this.SimulationPlaneId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.SimulationPlaneId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("SimulationPlaneId", err)
		}
	}
	return nil
}
func (this *ListDeploymentsResponse) Validate() error {
	for _, item := range this.Deployment {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Deployment", err)
			}
		}
	}
	return nil
}
func (this *GetControlPlaneRequest) Validate() error {
	if nil == this.SimulationPlaneId {
		return github_com_mwitkow_go_proto_validators.FieldError("SimulationPlaneId", fmt.Errorf("message must exist"))
	}
	if this.SimulationPlaneId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.SimulationPlaneId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("SimulationPlaneId", err)
		}
	}
	return nil
}
func (this *GetControlPlaneResponse) Validate() error {
	return nil
}
func (this *ListSimulationPlanesRequest) Validate() error {
	return nil
}
func (this *ListSimulationPlanesResponse) Validate() error {
	for _, item := range this.SimulationPlanes {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("SimulationPlanes", err)
			}
		}
	}
	return nil
}
func (this *GrantProjectExclusiveAccessRequest) Validate() error {
	if nil == this.SimulationPlaneId {
		return github_com_mwitkow_go_proto_validators.FieldError("SimulationPlaneId", fmt.Errorf("message must exist"))
	}
	if this.SimulationPlaneId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.SimulationPlaneId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("SimulationPlaneId", err)
		}
	}
	return nil
}
func (this *GrantProjectExclusiveAccessResponse) Validate() error {
	return nil
}
func (this *RevokeProjectExclusiveAccessRequest) Validate() error {
	if nil == this.SimulationPlaneId {
		return github_com_mwitkow_go_proto_validators.FieldError("SimulationPlaneId", fmt.Errorf("message must exist"))
	}
	if this.SimulationPlaneId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.SimulationPlaneId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("SimulationPlaneId", err)
		}
	}
	return nil
}
func (this *RevokeProjectExclusiveAccessResponse) Validate() error {
	return nil
}
