// Code generated by protoc-gen-go. DO NOT EDIT.
// source: improbable/inner/service_account/service_account.proto

package improbable_inner_credential

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	deployment "improbable.io/proto/improbable/platform/deployment"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Credentials struct {
	DeploymentId               *deployment.DeploymentId `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	ServiceAccountToken        string                   `protobuf:"bytes,2,opt,name=service_account_token,json=serviceAccountToken,proto3" json:"service_account_token,omitempty"`
	ServiceAccountId           int64                    `protobuf:"varint,3,opt,name=service_account_id,json=serviceAccountId,proto3" json:"service_account_id,omitempty"`
	PackageServiceAccountToken string                   `protobuf:"bytes,4,opt,name=package_service_account_token,json=packageServiceAccountToken,proto3" json:"package_service_account_token,omitempty"`
	PackageServiceAccountId    int64                    `protobuf:"varint,5,opt,name=package_service_account_id,json=packageServiceAccountId,proto3" json:"package_service_account_id,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                 `json:"-"`
	XXX_unrecognized           []byte                   `json:"-"`
	XXX_sizecache              int32                    `json:"-"`
}

func (m *Credentials) Reset()         { *m = Credentials{} }
func (m *Credentials) String() string { return proto.CompactTextString(m) }
func (*Credentials) ProtoMessage()    {}
func (*Credentials) Descriptor() ([]byte, []int) {
	return fileDescriptor_c3d6b21504b1a2e9, []int{0}
}

func (m *Credentials) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Credentials.Unmarshal(m, b)
}
func (m *Credentials) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Credentials.Marshal(b, m, deterministic)
}
func (m *Credentials) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Credentials.Merge(m, src)
}
func (m *Credentials) XXX_Size() int {
	return xxx_messageInfo_Credentials.Size(m)
}
func (m *Credentials) XXX_DiscardUnknown() {
	xxx_messageInfo_Credentials.DiscardUnknown(m)
}

var xxx_messageInfo_Credentials proto.InternalMessageInfo

func (m *Credentials) GetDeploymentId() *deployment.DeploymentId {
	if m != nil {
		return m.DeploymentId
	}
	return nil
}

func (m *Credentials) GetServiceAccountToken() string {
	if m != nil {
		return m.ServiceAccountToken
	}
	return ""
}

func (m *Credentials) GetServiceAccountId() int64 {
	if m != nil {
		return m.ServiceAccountId
	}
	return 0
}

func (m *Credentials) GetPackageServiceAccountToken() string {
	if m != nil {
		return m.PackageServiceAccountToken
	}
	return ""
}

func (m *Credentials) GetPackageServiceAccountId() int64 {
	if m != nil {
		return m.PackageServiceAccountId
	}
	return 0
}

func init() {
	proto.RegisterType((*Credentials)(nil), "improbable.inner.credential.Credentials")
}

func init() {
	proto.RegisterFile("improbable/inner/service_account/service_account.proto", fileDescriptor_c3d6b21504b1a2e9)
}

var fileDescriptor_c3d6b21504b1a2e9 = []byte{
	// 403 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xae, 0x5d, 0xa8, 0xc4, 0x16, 0x2a, 0x58, 0x04, 0x58, 0x2e, 0x08, 0x2b, 0x27, 0x4b, 0xb4,
	0xbb, 0x52, 0x91, 0x7a, 0x80, 0x53, 0xf9, 0x11, 0xca, 0xd5, 0xed, 0x05, 0x71, 0xb0, 0xd6, 0xde,
	0xa9, 0xbb, 0xc4, 0xde, 0xb1, 0xd6, 0x9b, 0x44, 0x79, 0x2e, 0xde, 0x84, 0x17, 0x40, 0xe2, 0x49,
	0x90, 0x7f, 0xe2, 0x38, 0x51, 0x88, 0x9a, 0xdb, 0x8e, 0xe7, 0xfb, 0x99, 0x99, 0xcf, 0xe4, 0x52,
	0x15, 0xa5, 0xc1, 0x44, 0x24, 0x39, 0x70, 0xa5, 0x35, 0x18, 0x5e, 0x81, 0x99, 0xa9, 0x14, 0x62,
	0x91, 0xa6, 0x38, 0xd5, 0x76, 0xb3, 0x66, 0xa5, 0x41, 0x8b, 0xf4, 0x74, 0xc5, 0x63, 0x0d, 0x8f,
	0xa5, 0x06, 0x24, 0x68, 0xab, 0x44, 0xee, 0xbf, 0x1b, 0x88, 0x96, 0xb9, 0xb0, 0xb7, 0x68, 0x0a,
	0x2e, 0xa1, 0xcc, 0x71, 0x51, 0x40, 0x2d, 0x79, 0x27, 0x0c, 0xc8, 0x56, 0xc9, 0x7f, 0x9d, 0x21,
	0x66, 0x39, 0x70, 0x51, 0x2a, 0x2e, 0xb4, 0x46, 0x2b, 0xac, 0x42, 0x5d, 0x75, 0xdd, 0xcb, 0x4c,
	0xd9, 0xbb, 0x69, 0xc2, 0x52, 0x2c, 0x78, 0x31, 0x57, 0x76, 0x82, 0x73, 0x9e, 0xe1, 0x79, 0xd3,
	0x3c, 0x9f, 0x89, 0x5c, 0x49, 0x61, 0xd1, 0x54, 0xbc, 0x7f, 0x76, 0xbc, 0xd3, 0x4e, 0xb5, 0xa9,
	0x92, 0xe9, 0x2d, 0x87, 0xa2, 0xb4, 0x8b, 0xb6, 0x39, 0xfa, 0xed, 0x92, 0xe3, 0xcf, 0xfd, 0xb8,
	0x15, 0xfd, 0x4e, 0x9e, 0xac, 0xa6, 0x8b, 0x95, 0xf4, 0x9c, 0xc0, 0x09, 0x8f, 0x2f, 0xce, 0xd8,
	0x60, 0xc9, 0xe5, 0x1e, 0x6c, 0x85, 0x64, 0x5f, 0xfa, 0xe7, 0x58, 0x7e, 0x3a, 0xfa, 0xfb, 0xe7,
	0xad, 0x1b, 0x38, 0xd1, 0x63, 0x39, 0xf8, 0x4a, 0x3f, 0x90, 0x17, 0x1b, 0x07, 0x8c, 0x2d, 0x4e,
	0x40, 0x7b, 0x6e, 0xe0, 0x84, 0x8f, 0x7a, 0xd2, 0xf3, 0x0e, 0x74, 0xd5, 0x62, 0x6e, 0x6a, 0x08,
	0x3d, 0x23, 0x74, 0x93, 0xab, 0xa4, 0x77, 0x18, 0x38, 0xe1, 0x61, 0xf4, 0x74, 0x9d, 0x30, 0x96,
	0xf4, 0x8a, 0xbc, 0x29, 0x45, 0x3a, 0x11, 0x19, 0xc4, 0xdb, 0x1d, 0x1f, 0xd4, 0x8e, 0x91, 0xdf,
	0x81, 0xae, 0xb7, 0x18, 0x7e, 0x24, 0xfe, 0xff, 0x24, 0x94, 0xf4, 0x1e, 0x36, 0xc6, 0xaf, 0xb6,
	0xf2, 0xc7, 0xf2, 0xe2, 0x97, 0x4b, 0xe8, 0xe0, 0xa8, 0x5d, 0x9f, 0xde, 0x90, 0x93, 0x6b, 0xb0,
	0xc3, 0x6b, 0x87, 0x6c, 0xc7, 0xbf, 0xc3, 0x06, 0x48, 0xff, 0x25, 0x6b, 0x53, 0x64, 0xcb, 0x14,
	0xd9, 0xd7, 0x3a, 0xc5, 0xd1, 0x01, 0xfd, 0x41, 0x9e, 0x45, 0x50, 0xe0, 0x0c, 0x86, 0xc2, 0x7b,
	0xe5, 0xb5, 0x43, 0xfc, 0x27, 0x39, 0xf9, 0xb6, 0x3e, 0xf2, 0x7e, 0xca, 0xf7, 0x5e, 0x70, 0x74,
	0x90, 0x1c, 0x35, 0xee, 0xef, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0x61, 0xaa, 0xad, 0xb7, 0x88,
	0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CredentialsServiceClient is the client API for CredentialsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CredentialsServiceClient interface {
	SetCredentials(ctx context.Context, in *Credentials, opts ...grpc.CallOption) (*empty.Empty, error)
	RemoveCredentials(ctx context.Context, in *deployment.DeploymentId, opts ...grpc.CallOption) (*empty.Empty, error)
	GetCredentials(ctx context.Context, in *deployment.DeploymentId, opts ...grpc.CallOption) (*Credentials, error)
}

type credentialsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCredentialsServiceClient(cc grpc.ClientConnInterface) CredentialsServiceClient {
	return &credentialsServiceClient{cc}
}

func (c *credentialsServiceClient) SetCredentials(ctx context.Context, in *Credentials, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/improbable.inner.credential.CredentialsService/SetCredentials", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *credentialsServiceClient) RemoveCredentials(ctx context.Context, in *deployment.DeploymentId, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/improbable.inner.credential.CredentialsService/RemoveCredentials", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *credentialsServiceClient) GetCredentials(ctx context.Context, in *deployment.DeploymentId, opts ...grpc.CallOption) (*Credentials, error) {
	out := new(Credentials)
	err := c.cc.Invoke(ctx, "/improbable.inner.credential.CredentialsService/GetCredentials", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CredentialsServiceServer is the server API for CredentialsService service.
type CredentialsServiceServer interface {
	SetCredentials(context.Context, *Credentials) (*empty.Empty, error)
	RemoveCredentials(context.Context, *deployment.DeploymentId) (*empty.Empty, error)
	GetCredentials(context.Context, *deployment.DeploymentId) (*Credentials, error)
}

// UnimplementedCredentialsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCredentialsServiceServer struct {
}

func (*UnimplementedCredentialsServiceServer) SetCredentials(ctx context.Context, req *Credentials) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetCredentials not implemented")
}
func (*UnimplementedCredentialsServiceServer) RemoveCredentials(ctx context.Context, req *deployment.DeploymentId) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveCredentials not implemented")
}
func (*UnimplementedCredentialsServiceServer) GetCredentials(ctx context.Context, req *deployment.DeploymentId) (*Credentials, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCredentials not implemented")
}

func RegisterCredentialsServiceServer(s *grpc.Server, srv CredentialsServiceServer) {
	s.RegisterService(&_CredentialsService_serviceDesc, srv)
}

func _CredentialsService_SetCredentials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Credentials)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CredentialsServiceServer).SetCredentials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.inner.credential.CredentialsService/SetCredentials",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CredentialsServiceServer).SetCredentials(ctx, req.(*Credentials))
	}
	return interceptor(ctx, in, info, handler)
}

func _CredentialsService_RemoveCredentials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(deployment.DeploymentId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CredentialsServiceServer).RemoveCredentials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.inner.credential.CredentialsService/RemoveCredentials",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CredentialsServiceServer).RemoveCredentials(ctx, req.(*deployment.DeploymentId))
	}
	return interceptor(ctx, in, info, handler)
}

func _CredentialsService_GetCredentials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(deployment.DeploymentId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CredentialsServiceServer).GetCredentials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.inner.credential.CredentialsService/GetCredentials",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CredentialsServiceServer).GetCredentials(ctx, req.(*deployment.DeploymentId))
	}
	return interceptor(ctx, in, info, handler)
}

var _CredentialsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "improbable.inner.credential.CredentialsService",
	HandlerType: (*CredentialsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetCredentials",
			Handler:    _CredentialsService_SetCredentials_Handler,
		},
		{
			MethodName: "RemoveCredentials",
			Handler:    _CredentialsService_RemoveCredentials_Handler,
		},
		{
			MethodName: "GetCredentials",
			Handler:    _CredentialsService_GetCredentials_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "improbable/inner/service_account/service_account.proto",
}
