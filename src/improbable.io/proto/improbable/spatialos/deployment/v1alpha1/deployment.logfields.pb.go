// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/spatialos/deployment/v1alpha1/deployment.proto

package deployment

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/duration"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/improbable-io/go-proto-logfields"
	github_com_improbable_io_go_proto_logfields "github.com/improbable-io/go-proto-logfields"
	_ "github.com/improbable/protoc-gen-gocli"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/googleapis/longrunning"
	_ "google.golang.org/genproto/protobuf/field_mask"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *SetDeploymentWorkerFlagsRequest) LogFields() map[string]string {
	return map[string]string{}
}

func (this *SetDeploymentWorkerFlagsRequest) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *SetDeploymentWorkerFlagsResponse) LogFields() map[string]string {
	return map[string]string{}
}

func (this *SetDeploymentWorkerFlagsResponse) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *SetDeploymentTagsRequest) LogFields() map[string]string {
	return map[string]string{}
}

func (this *SetDeploymentTagsRequest) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *SetDeploymentTagsResponse) LogFields() map[string]string {
	return map[string]string{}
}

func (this *SetDeploymentTagsResponse) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *SetDeploymentWorkerCapacitiesRequest) LogFields() map[string]string {
	return map[string]string{}
}

func (this *SetDeploymentWorkerCapacitiesRequest) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *SetDeploymentWorkerCapacitiesResponse) LogFields() map[string]string {
	return map[string]string{}
}

func (this *SetDeploymentWorkerCapacitiesResponse) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *SetDeploymentWorkerRateLimitsRequest) LogFields() map[string]string {
	return map[string]string{}
}

func (this *SetDeploymentWorkerRateLimitsRequest) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *SetDeploymentWorkerRateLimitsResponse) LogFields() map[string]string {
	return map[string]string{}
}

func (this *SetDeploymentWorkerRateLimitsResponse) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *Deployment) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	launchConfigFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.LaunchConfig)
	hasInner = hasInner || len(launchConfigFields) > 0
	playerInfoFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.PlayerInfo)
	hasInner = hasInner || len(playerInfoFields) > 0
	startTimeFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.StartTime)
	hasInner = hasInner || len(startTimeFields) > 0
	stopTimeFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.StopTime)
	hasInner = hasInner || len(stopTimeFields) > 0
	expiryTimeFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.ExpiryTime)
	hasInner = hasInner || len(expiryTimeFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{
			"deployment_id":   this.Id,
			"project_name":    this.ProjectName,
			"deployment_name": this.Name,
		}
	}
	// Merge all the field maps.
	res := map[string]string{}
	res["deployment_id"] = this.Id
	res["project_name"] = this.ProjectName
	res["deployment_name"] = this.Name
	for k, v := range launchConfigFields {
		res[k] = v
	}
	for k, v := range playerInfoFields {
		res[k] = v
	}
	for k, v := range startTimeFields {
		res[k] = v
	}
	for k, v := range stopTimeFields {
		res[k] = v
	}
	for k, v := range expiryTimeFields {
		res[k] = v
	}
	return res
}

func (this *Deployment) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	dst["deployment_id"] = this.Id
	dst["project_name"] = this.ProjectName
	dst["deployment_name"] = this.Name
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.LaunchConfig, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.PlayerInfo, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.StartTime, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.StopTime, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.ExpiryTime, dst)
}

func (this *WorkerCapacity) LogFields() map[string]string {
	return map[string]string{}
}

func (this *WorkerCapacity) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *WorkerRateLimit) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	durationFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Duration)
	hasInner = hasInner || len(durationFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range durationFields {
		res[k] = v
	}
	return res
}

func (this *WorkerRateLimit) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Duration, dst)
}

func (this *LaunchConfig) LogFields() map[string]string {
	return map[string]string{}
}

func (this *LaunchConfig) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *WorkerFlag) LogFields() map[string]string {
	return map[string]string{}
}

func (this *WorkerFlag) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *PlayerInfo) LogFields() map[string]string {
	return map[string]string{}
}

func (this *PlayerInfo) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *ListDeploymentsRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{
			"project_name":    this.ProjectName,
			"deployment_name": this.DeploymentName,
		}
	}
	// Merge all the field maps.
	res := map[string]string{}
	res["project_name"] = this.ProjectName
	res["deployment_name"] = this.DeploymentName
	return res
}

func (this *ListDeploymentsRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	dst["project_name"] = this.ProjectName
	dst["deployment_name"] = this.DeploymentName
}

func (this *ListDeploymentsResponse) LogFields() map[string]string {
	return map[string]string{}
}

func (this *ListDeploymentsResponse) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *GetDeploymentRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Generate fields for this message.
	return map[string]string{
		"project_name":  this.ProjectName,
		"deployment_id": this.Id,
	}
}

func (this *GetDeploymentRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	dst["project_name"] = this.ProjectName
	dst["deployment_id"] = this.Id
}

func (this *GetDeploymentResponse) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	deploymentFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Deployment)
	hasInner = hasInner || len(deploymentFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range deploymentFields {
		res[k] = v
	}
	return res
}

func (this *GetDeploymentResponse) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Deployment, dst)
}

func (this *GetRunningDeploymentByNameRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Generate fields for this message.
	return map[string]string{
		"project_name":    this.ProjectName,
		"deployment_name": this.DeploymentName,
	}
}

func (this *GetRunningDeploymentByNameRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	dst["project_name"] = this.ProjectName
	dst["deployment_name"] = this.DeploymentName
}

func (this *CreateDeploymentRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	deploymentFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Deployment)
	hasInner = hasInner || len(deploymentFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range deploymentFields {
		res[k] = v
	}
	return res
}

func (this *CreateDeploymentRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Deployment, dst)
}

func (this *CreateDeploymentMetadata) LogFields() map[string]string {
	return map[string]string{}
}

func (this *CreateDeploymentMetadata) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *UpdateDeploymentRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	deploymentFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Deployment)
	hasInner = hasInner || len(deploymentFields) > 0
	updateMaskFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.UpdateMask)
	hasInner = hasInner || len(updateMaskFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range deploymentFields {
		res[k] = v
	}
	for k, v := range updateMaskFields {
		res[k] = v
	}
	return res
}

func (this *UpdateDeploymentRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Deployment, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.UpdateMask, dst)
}

func (this *UpdateDeploymentResponse) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	deploymentFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Deployment)
	hasInner = hasInner || len(deploymentFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range deploymentFields {
		res[k] = v
	}
	return res
}

func (this *UpdateDeploymentResponse) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Deployment, dst)
}

func (this *StopDeploymentRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Generate fields for this message.
	return map[string]string{
		"project_name":  this.ProjectName,
		"deployment_id": this.Id,
	}
}

func (this *StopDeploymentRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	dst["project_name"] = this.ProjectName
	dst["deployment_id"] = this.Id
}

func (this *StopDeploymentResponse) LogFields() map[string]string {
	return map[string]string{}
}

func (this *StopDeploymentResponse) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *DeleteDeploymentRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Generate fields for this message.
	return map[string]string{
		"deployment_id": this.Id,
	}
}

func (this *DeleteDeploymentRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	dst["deployment_id"] = this.Id
}

func (this *DeleteDeploymentMetadata) LogFields() map[string]string {
	return map[string]string{}
}

func (this *DeleteDeploymentMetadata) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *Filter) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	var filterTypeFields map[string]string
	switch f := this.FilterType.(type) {
	case *Filter_StoppedStatusPropertyFilter:
		filterTypeFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.StoppedStatusPropertyFilter)
	case *Filter_TagsPropertyFilter:
		filterTypeFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.TagsPropertyFilter)
	case *Filter_CreateTimePropertyFilter:
		filterTypeFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.CreateTimePropertyFilter)
	case *Filter_StoppedTimePropertyFilter:
		filterTypeFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.StoppedTimePropertyFilter)
	case *Filter_DeploymentNamePropertyFilter:
		filterTypeFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.DeploymentNamePropertyFilter)
	default:
		filterTypeFields = map[string]string{}
	}
	hasInner = hasInner || len(filterTypeFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range filterTypeFields {
		res[k] = v
	}
	return res
}

func (this *Filter) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	if f, ok := this.FilterType.(*Filter_StoppedStatusPropertyFilter); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.StoppedStatusPropertyFilter, dst)
	}
	if f, ok := this.FilterType.(*Filter_TagsPropertyFilter); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.TagsPropertyFilter, dst)
	}
	if f, ok := this.FilterType.(*Filter_CreateTimePropertyFilter); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.CreateTimePropertyFilter, dst)
	}
	if f, ok := this.FilterType.(*Filter_StoppedTimePropertyFilter); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.StoppedTimePropertyFilter, dst)
	}
	if f, ok := this.FilterType.(*Filter_DeploymentNamePropertyFilter); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.DeploymentNamePropertyFilter, dst)
	}
}

func (this *StoppedStatusPropertyFilter) LogFields() map[string]string {
	return map[string]string{}
}

func (this *StoppedStatusPropertyFilter) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *DeploymentNamePropertyFilter) LogFields() map[string]string {
	return map[string]string{}
}

func (this *DeploymentNamePropertyFilter) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *TagsPropertyFilter) LogFields() map[string]string {
	return map[string]string{}
}

func (this *TagsPropertyFilter) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *CreateTimePropertyFilter) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	createTimeFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.CreateTime)
	hasInner = hasInner || len(createTimeFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range createTimeFields {
		res[k] = v
	}
	return res
}

func (this *CreateTimePropertyFilter) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.CreateTime, dst)
}

func (this *StoppedTimePropertyFilter) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	stoppedTimeFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.StoppedTime)
	hasInner = hasInner || len(stoppedTimeFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range stoppedTimeFields {
		res[k] = v
	}
	return res
}

func (this *StoppedTimePropertyFilter) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.StoppedTime, dst)
}
