// Code generated by protoc-gen-go. DO NOT EDIT.
// source: improbable/ext/postie/test/event.proto

package improbable_ext_postie_test

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "improbable.io/proto/improbable/ext/postie/options"
	test_events "improbable.io/proto/improbable/ext/postie/test/test_events"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Event struct {
	// Types that are valid to be assigned to Event:
	//	*Event_TestEvent_1
	//	*Event_TestEvent_2
	//	*Event_TestEvent_3
	Event                isEvent_Event `protobuf_oneof:"event"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_3775a4334d82214e, []int{0}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

type isEvent_Event interface {
	isEvent_Event()
}

type Event_TestEvent_1 struct {
	TestEvent_1 *test_events.TestEvent `protobuf:"bytes,1,opt,name=test_event_1,json=testEvent1,proto3,oneof"`
}

type Event_TestEvent_2 struct {
	TestEvent_2 *test_events.TestEvent `protobuf:"bytes,2,opt,name=test_event_2,json=testEvent2,proto3,oneof"`
}

type Event_TestEvent_3 struct {
	TestEvent_3 *test_events.TestEvent `protobuf:"bytes,3,opt,name=test_event_3,json=testEvent3,proto3,oneof"`
}

func (*Event_TestEvent_1) isEvent_Event() {}

func (*Event_TestEvent_2) isEvent_Event() {}

func (*Event_TestEvent_3) isEvent_Event() {}

func (m *Event) GetEvent() isEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *Event) GetTestEvent_1() *test_events.TestEvent {
	if x, ok := m.GetEvent().(*Event_TestEvent_1); ok {
		return x.TestEvent_1
	}
	return nil
}

func (m *Event) GetTestEvent_2() *test_events.TestEvent {
	if x, ok := m.GetEvent().(*Event_TestEvent_2); ok {
		return x.TestEvent_2
	}
	return nil
}

func (m *Event) GetTestEvent_3() *test_events.TestEvent {
	if x, ok := m.GetEvent().(*Event_TestEvent_3); ok {
		return x.TestEvent_3
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Event) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Event_TestEvent_1)(nil),
		(*Event_TestEvent_2)(nil),
		(*Event_TestEvent_3)(nil),
	}
}

func init() {
	proto.RegisterType((*Event)(nil), "improbable.ext.postie.test.Event")
}

func init() {
	proto.RegisterFile("improbable/ext/postie/test/event.proto", fileDescriptor_3775a4334d82214e)
}

var fileDescriptor_3775a4334d82214e = []byte{
	// 291 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0xcb, 0xcc, 0x2d, 0x28,
	0xca, 0x4f, 0x4a, 0x4c, 0xca, 0x49, 0xd5, 0x4f, 0xad, 0x28, 0xd1, 0x2f, 0xc8, 0x2f, 0x2e, 0xc9,
	0x4c, 0xd5, 0x2f, 0x49, 0x2d, 0x2e, 0xd1, 0x4f, 0x2d, 0x4b, 0xcd, 0x2b, 0xd1, 0x2b, 0x28, 0xca,
	0x2f, 0xc9, 0x17, 0x92, 0x42, 0xa8, 0xd3, 0x4b, 0xad, 0x28, 0xd1, 0x83, 0xa8, 0xd3, 0x03, 0xa9,
	0x93, 0xb2, 0xc0, 0x63, 0x06, 0x88, 0x88, 0x07, 0x1b, 0x54, 0x8c, 0xcc, 0x86, 0x98, 0x2a, 0xa5,
	0x8d, 0x5d, 0x67, 0x7e, 0x41, 0x49, 0x66, 0x7e, 0x5e, 0x31, 0x8c, 0x86, 0x28, 0x56, 0xba, 0xca,
	0xcc, 0xc5, 0xea, 0x0a, 0xd2, 0x2d, 0x14, 0xca, 0xc5, 0x83, 0x30, 0x2b, 0xde, 0x50, 0x82, 0x51,
	0x81, 0x51, 0x83, 0xdb, 0xc8, 0x50, 0x0f, 0xb7, 0x1b, 0xf5, 0x90, 0xed, 0x0e, 0x49, 0x2d, 0x2e,
	0x01, 0x1b, 0xe4, 0xc1, 0x10, 0xc4, 0x55, 0x02, 0xe3, 0x18, 0x0a, 0x6d, 0x62, 0x44, 0x31, 0xd7,
	0x48, 0x82, 0x89, 0x4c, 0x73, 0x9d, 0xa2, 0xbb, 0xb6, 0x4a, 0x58, 0x70, 0x71, 0xa7, 0x17, 0x15,
	0x24, 0x07, 0xa7, 0x16, 0x95, 0x65, 0x26, 0xa7, 0x0a, 0xb1, 0xe7, 0xa6, 0x16, 0x25, 0x97, 0x16,
	0x55, 0x4a, 0x09, 0xba, 0xa4, 0x16, 0xe4, 0xe4, 0x57, 0xe6, 0xa6, 0xe6, 0x95, 0x40, 0xe5, 0x94,
	0x78, 0xdd, 0x53, 0x4b, 0x10, 0xa2, 0xb3, 0xb6, 0x4a, 0x48, 0x73, 0xb1, 0x80, 0x0c, 0x16, 0x12,
	0x06, 0x1b, 0x9f, 0x9e, 0x5a, 0x12, 0x9f, 0x02, 0x97, 0x46, 0x71, 0xb4, 0x91, 0xd0, 0x36, 0x54,
	0x47, 0x1b, 0x4b, 0x30, 0x93, 0xeb, 0xe8, 0xf8, 0xae, 0xad, 0x12, 0x56, 0xc4, 0x3b, 0x9a, 0xdf,
	0x27, 0xb3, 0x18, 0xc9, 0xd5, 0xc5, 0xb3, 0xb6, 0x4a, 0xc8, 0x42, 0x9d, 0x2d, 0x0a, 0xb6, 0x20,
	0x27, 0xb3, 0x18, 0xd9, 0xdd, 0xc5, 0x28, 0x0e, 0x37, 0x76, 0x62, 0xe7, 0x62, 0x05, 0x3b, 0x21,
	0x89, 0x0d, 0x1c, 0xbd, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x02, 0xb7, 0x40, 0x09, 0x8b,
	0x02, 0x00, 0x00,
}
