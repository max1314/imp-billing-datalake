// Code generated by protoc-gen-go. DO NOT EDIT.
// source: improbable/ext/platform/auth/authorization/authorization.proto

package improbable_platform_auth

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RequiredPermission struct {
	Resource             *Resource `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	Action               *Action   `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *RequiredPermission) Reset()         { *m = RequiredPermission{} }
func (m *RequiredPermission) String() string { return proto.CompactTextString(m) }
func (*RequiredPermission) ProtoMessage()    {}
func (*RequiredPermission) Descriptor() ([]byte, []int) {
	return fileDescriptor_94ccb3e73b6dbdb4, []int{0}
}

func (m *RequiredPermission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequiredPermission.Unmarshal(m, b)
}
func (m *RequiredPermission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequiredPermission.Marshal(b, m, deterministic)
}
func (m *RequiredPermission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequiredPermission.Merge(m, src)
}
func (m *RequiredPermission) XXX_Size() int {
	return xxx_messageInfo_RequiredPermission.Size(m)
}
func (m *RequiredPermission) XXX_DiscardUnknown() {
	xxx_messageInfo_RequiredPermission.DiscardUnknown(m)
}

var xxx_messageInfo_RequiredPermission proto.InternalMessageInfo

func (m *RequiredPermission) GetResource() *Resource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *RequiredPermission) GetAction() *Action {
	if m != nil {
		return m.Action
	}
	return nil
}

type PermitsRequest struct {
	RequiredPermission   []*RequiredPermission `protobuf:"bytes,1,rep,name=required_permission,json=requiredPermission,proto3" json:"required_permission,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *PermitsRequest) Reset()         { *m = PermitsRequest{} }
func (m *PermitsRequest) String() string { return proto.CompactTextString(m) }
func (*PermitsRequest) ProtoMessage()    {}
func (*PermitsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_94ccb3e73b6dbdb4, []int{1}
}

func (m *PermitsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermitsRequest.Unmarshal(m, b)
}
func (m *PermitsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermitsRequest.Marshal(b, m, deterministic)
}
func (m *PermitsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermitsRequest.Merge(m, src)
}
func (m *PermitsRequest) XXX_Size() int {
	return xxx_messageInfo_PermitsRequest.Size(m)
}
func (m *PermitsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PermitsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PermitsRequest proto.InternalMessageInfo

func (m *PermitsRequest) GetRequiredPermission() []*RequiredPermission {
	if m != nil {
		return m.RequiredPermission
	}
	return nil
}

type PermitsResponse struct {
	Permitted            bool     `protobuf:"varint,1,opt,name=permitted,proto3" json:"permitted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PermitsResponse) Reset()         { *m = PermitsResponse{} }
func (m *PermitsResponse) String() string { return proto.CompactTextString(m) }
func (*PermitsResponse) ProtoMessage()    {}
func (*PermitsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_94ccb3e73b6dbdb4, []int{2}
}

func (m *PermitsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermitsResponse.Unmarshal(m, b)
}
func (m *PermitsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermitsResponse.Marshal(b, m, deterministic)
}
func (m *PermitsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermitsResponse.Merge(m, src)
}
func (m *PermitsResponse) XXX_Size() int {
	return xxx_messageInfo_PermitsResponse.Size(m)
}
func (m *PermitsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PermitsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PermitsResponse proto.InternalMessageInfo

func (m *PermitsResponse) GetPermitted() bool {
	if m != nil {
		return m.Permitted
	}
	return false
}

type PermitsBatchRequest struct {
	RequiredPermission   []*RequiredPermission `protobuf:"bytes,1,rep,name=required_permission,json=requiredPermission,proto3" json:"required_permission,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *PermitsBatchRequest) Reset()         { *m = PermitsBatchRequest{} }
func (m *PermitsBatchRequest) String() string { return proto.CompactTextString(m) }
func (*PermitsBatchRequest) ProtoMessage()    {}
func (*PermitsBatchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_94ccb3e73b6dbdb4, []int{3}
}

func (m *PermitsBatchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermitsBatchRequest.Unmarshal(m, b)
}
func (m *PermitsBatchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermitsBatchRequest.Marshal(b, m, deterministic)
}
func (m *PermitsBatchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermitsBatchRequest.Merge(m, src)
}
func (m *PermitsBatchRequest) XXX_Size() int {
	return xxx_messageInfo_PermitsBatchRequest.Size(m)
}
func (m *PermitsBatchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PermitsBatchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PermitsBatchRequest proto.InternalMessageInfo

func (m *PermitsBatchRequest) GetRequiredPermission() []*RequiredPermission {
	if m != nil {
		return m.RequiredPermission
	}
	return nil
}

type PermitsBatchResponse struct {
	Permitted            []bool   `protobuf:"varint,1,rep,packed,name=permitted,proto3" json:"permitted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PermitsBatchResponse) Reset()         { *m = PermitsBatchResponse{} }
func (m *PermitsBatchResponse) String() string { return proto.CompactTextString(m) }
func (*PermitsBatchResponse) ProtoMessage()    {}
func (*PermitsBatchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_94ccb3e73b6dbdb4, []int{4}
}

func (m *PermitsBatchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermitsBatchResponse.Unmarshal(m, b)
}
func (m *PermitsBatchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermitsBatchResponse.Marshal(b, m, deterministic)
}
func (m *PermitsBatchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermitsBatchResponse.Merge(m, src)
}
func (m *PermitsBatchResponse) XXX_Size() int {
	return xxx_messageInfo_PermitsBatchResponse.Size(m)
}
func (m *PermitsBatchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PermitsBatchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PermitsBatchResponse proto.InternalMessageInfo

func (m *PermitsBatchResponse) GetPermitted() []bool {
	if m != nil {
		return m.Permitted
	}
	return nil
}

func init() {
	proto.RegisterType((*RequiredPermission)(nil), "improbable.platform.auth.RequiredPermission")
	proto.RegisterType((*PermitsRequest)(nil), "improbable.platform.auth.PermitsRequest")
	proto.RegisterType((*PermitsResponse)(nil), "improbable.platform.auth.PermitsResponse")
	proto.RegisterType((*PermitsBatchRequest)(nil), "improbable.platform.auth.PermitsBatchRequest")
	proto.RegisterType((*PermitsBatchResponse)(nil), "improbable.platform.auth.PermitsBatchResponse")
}

func init() {
	proto.RegisterFile("improbable/ext/platform/auth/authorization/authorization.proto", fileDescriptor_94ccb3e73b6dbdb4)
}

var fileDescriptor_94ccb3e73b6dbdb4 = []byte{
	// 318 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x92, 0xd1, 0x4a, 0xfb, 0x30,
	0x14, 0xc6, 0xe9, 0x7f, 0xb0, 0xff, 0x3c, 0x13, 0x85, 0x6c, 0x17, 0x65, 0x78, 0x31, 0x7a, 0x35,
	0x41, 0x53, 0x98, 0x82, 0x5e, 0x0d, 0xe6, 0x13, 0x48, 0xbc, 0x56, 0xc9, 0xba, 0x23, 0x0b, 0xb4,
	0x4d, 0x4c, 0x52, 0x51, 0x1f, 0xc2, 0xb7, 0xf4, 0x3d, 0xa4, 0x59, 0xec, 0x5a, 0xb5, 0x3a, 0x6f,
	0xbc, 0x09, 0xe4, 0xf0, 0x7d, 0xe7, 0xfb, 0x9d, 0x9c, 0xc0, 0x4c, 0x64, 0x4a, 0xcb, 0x05, 0x5f,
	0xa4, 0x18, 0xe3, 0xa3, 0x8d, 0x55, 0xca, 0xed, 0x9d, 0xd4, 0x59, 0xcc, 0x0b, 0xbb, 0x72, 0x87,
	0xd4, 0xe2, 0x99, 0x5b, 0x21, 0xf3, 0xe6, 0x8d, 0x2a, 0x2d, 0xad, 0x24, 0xe1, 0xc6, 0x4f, 0xdf,
	0xbd, 0xb4, 0x14, 0x8e, 0xce, 0x7e, 0xd1, 0x59, 0xc9, 0x54, 0x24, 0x4f, 0xeb, 0x96, 0xd1, 0x4b,
	0x00, 0x84, 0xe1, 0x7d, 0x21, 0x34, 0x2e, 0x2f, 0x51, 0x67, 0xc2, 0x18, 0x21, 0x73, 0x32, 0x83,
	0x9e, 0x46, 0x23, 0x0b, 0x9d, 0x60, 0x18, 0x8c, 0x83, 0x49, 0x7f, 0x1a, 0xd1, 0xb6, 0x70, 0xca,
	0xbc, 0x92, 0x55, 0x1e, 0x72, 0x0e, 0x5d, 0x9e, 0x94, 0x69, 0xe1, 0x3f, 0xe7, 0x1e, 0xb7, 0xbb,
	0xe7, 0x4e, 0xc7, 0xbc, 0x3e, 0x92, 0xb0, 0xe7, 0x38, 0xac, 0x29, 0xb1, 0xd0, 0x58, 0x72, 0x0d,
	0x03, 0xed, 0x09, 0x6f, 0x55, 0x85, 0x18, 0x06, 0xe3, 0xce, 0xa4, 0x3f, 0x3d, 0xfa, 0x0e, 0xeb,
	0xe3, 0x58, 0x8c, 0xe8, 0x4f, 0xb5, 0x28, 0x86, 0xfd, 0x2a, 0xd0, 0x28, 0x99, 0x1b, 0x24, 0x07,
	0xb0, 0xe3, 0x82, 0xac, 0xc5, 0xa5, 0x1b, 0xbf, 0xc7, 0x36, 0x85, 0xc8, 0xc2, 0xc0, 0x1b, 0x2e,
	0xb8, 0x4d, 0x56, 0x7f, 0x84, 0x79, 0x0a, 0xc3, 0x66, 0xea, 0xd7, 0xac, 0x9d, 0x06, 0xeb, 0xf4,
	0x35, 0x80, 0xe1, 0xbc, 0xbe, 0xfd, 0x2b, 0xd4, 0x0f, 0x22, 0x41, 0x72, 0x03, 0xff, 0x7d, 0x3b,
	0x32, 0x69, 0x67, 0x6b, 0x6e, 0x62, 0x74, 0xb8, 0x85, 0xd2, 0x63, 0x65, 0xb0, 0x5b, 0xc7, 0x25,
	0xc7, 0x3f, 0x5a, 0xeb, 0x8f, 0x39, 0xa2, 0xdb, 0xca, 0xd7, 0x71, 0x8b, 0xae, 0xfb, 0xcd, 0x27,
	0x6f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x0e, 0xf8, 0x93, 0x4b, 0x62, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AuthorizationServiceClient is the client API for AuthorizationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthorizationServiceClient interface {
	Permits(ctx context.Context, in *PermitsRequest, opts ...grpc.CallOption) (*PermitsResponse, error)
	PermitsBatch(ctx context.Context, in *PermitsBatchRequest, opts ...grpc.CallOption) (*PermitsBatchResponse, error)
}

type authorizationServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAuthorizationServiceClient(cc grpc.ClientConnInterface) AuthorizationServiceClient {
	return &authorizationServiceClient{cc}
}

func (c *authorizationServiceClient) Permits(ctx context.Context, in *PermitsRequest, opts ...grpc.CallOption) (*PermitsResponse, error) {
	out := new(PermitsResponse)
	err := c.cc.Invoke(ctx, "/improbable.platform.auth.AuthorizationService/Permits", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizationServiceClient) PermitsBatch(ctx context.Context, in *PermitsBatchRequest, opts ...grpc.CallOption) (*PermitsBatchResponse, error) {
	out := new(PermitsBatchResponse)
	err := c.cc.Invoke(ctx, "/improbable.platform.auth.AuthorizationService/PermitsBatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthorizationServiceServer is the server API for AuthorizationService service.
type AuthorizationServiceServer interface {
	Permits(context.Context, *PermitsRequest) (*PermitsResponse, error)
	PermitsBatch(context.Context, *PermitsBatchRequest) (*PermitsBatchResponse, error)
}

// UnimplementedAuthorizationServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAuthorizationServiceServer struct {
}

func (*UnimplementedAuthorizationServiceServer) Permits(ctx context.Context, req *PermitsRequest) (*PermitsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Permits not implemented")
}
func (*UnimplementedAuthorizationServiceServer) PermitsBatch(ctx context.Context, req *PermitsBatchRequest) (*PermitsBatchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PermitsBatch not implemented")
}

func RegisterAuthorizationServiceServer(s *grpc.Server, srv AuthorizationServiceServer) {
	s.RegisterService(&_AuthorizationService_serviceDesc, srv)
}

func _AuthorizationService_Permits_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PermitsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizationServiceServer).Permits(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.platform.auth.AuthorizationService/Permits",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizationServiceServer).Permits(ctx, req.(*PermitsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthorizationService_PermitsBatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PermitsBatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizationServiceServer).PermitsBatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.platform.auth.AuthorizationService/PermitsBatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizationServiceServer).PermitsBatch(ctx, req.(*PermitsBatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthorizationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "improbable.platform.auth.AuthorizationService",
	HandlerType: (*AuthorizationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Permits",
			Handler:    _AuthorizationService_Permits_Handler,
		},
		{
			MethodName: "PermitsBatch",
			Handler:    _AuthorizationService_PermitsBatch_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "improbable/ext/platform/auth/authorization/authorization.proto",
}
