// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/ext/platform/auth/authorization/policy.proto

package improbable_platform_auth

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	github_com_improbable_io_go_proto_logfields "github.com/improbable-io/go-proto-logfields"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *Resource) LogFields() map[string]string {
	return map[string]string{}
}

func (this *Resource) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *Action) LogFields() map[string]string {
	return map[string]string{}
}

func (this *Action) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *AnyCondition) LogFields() map[string]string {
	return map[string]string{}
}

func (this *AnyCondition) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *AllCondition) LogFields() map[string]string {
	return map[string]string{}
}

func (this *AllCondition) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *NotCondition) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	conditionFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Condition)
	hasInner = hasInner || len(conditionFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range conditionFields {
		res[k] = v
	}
	return res
}

func (this *NotCondition) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Condition, dst)
}

func (this *CIDRRangeCondition) LogFields() map[string]string {
	return map[string]string{}
}

func (this *CIDRRangeCondition) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *Condition) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	var conditionFields map[string]string
	switch f := this.Condition.(type) {
	case *Condition_Any:
		conditionFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.Any)
	case *Condition_All:
		conditionFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.All)
	case *Condition_Not:
		conditionFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.Not)
	case *Condition_CidrRange:
		conditionFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.CidrRange)
	default:
		conditionFields = map[string]string{}
	}
	hasInner = hasInner || len(conditionFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range conditionFields {
		res[k] = v
	}
	return res
}

func (this *Condition) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	if f, ok := this.Condition.(*Condition_Any); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.Any, dst)
	}
	if f, ok := this.Condition.(*Condition_All); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.All, dst)
	}
	if f, ok := this.Condition.(*Condition_Not); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.Not, dst)
	}
	if f, ok := this.Condition.(*Condition_CidrRange); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.CidrRange, dst)
	}
}

func (this *Policy) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	conditionFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Condition)
	hasInner = hasInner || len(conditionFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range conditionFields {
		res[k] = v
	}
	return res
}

func (this *Policy) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Condition, dst)
}
