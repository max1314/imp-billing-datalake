// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/ext/platform/auth/authorization/policy.proto

package improbable_platform_auth

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	math "math"
	regexp "regexp"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

var _regex_Resource_Component = regexp.MustCompile(`^[a-z*][a-zA-Z0-9*]{0,31}$`)
var _regex_Resource_ComponentKey = regexp.MustCompile(`^[a-zA-Z0-9.*_/-]*$`)

func (this *Resource) Validate() error {
	if !_regex_Resource_Component.MatchString(this.Component) {
		return github_com_mwitkow_go_proto_validators.FieldError("Component", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-z*][a-zA-Z0-9*]{0,31}$"`, this.Component))
	}
	if !_regex_Resource_ComponentKey.MatchString(this.ComponentKey) {
		return github_com_mwitkow_go_proto_validators.FieldError("ComponentKey", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-zA-Z0-9.*_/-]*$"`, this.ComponentKey))
	}
	return nil
}

var _regex_Action_Operation = regexp.MustCompile(`^[a-z*][a-zA-Z0-9*]{0,63}$`)

func (this *Action) Validate() error {
	if !_regex_Action_Operation.MatchString(this.Operation) {
		return github_com_mwitkow_go_proto_validators.FieldError("Operation", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-z*][a-zA-Z0-9*]{0,63}$"`, this.Operation))
	}
	return nil
}
func (this *AnyCondition) Validate() error {
	for _, item := range this.Conditions {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Conditions", err)
			}
		}
	}
	return nil
}
func (this *AllCondition) Validate() error {
	for _, item := range this.Conditions {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Conditions", err)
			}
		}
	}
	return nil
}
func (this *NotCondition) Validate() error {
	if this.Condition != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Condition); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Condition", err)
		}
	}
	return nil
}

var _regex_CIDRRangeCondition_Range = regexp.MustCompile(`^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\/\d{1,2}$`)

func (this *CIDRRangeCondition) Validate() error {
	if !_regex_CIDRRangeCondition_Range.MatchString(this.Range) {
		return github_com_mwitkow_go_proto_validators.FieldError("Range", fmt.Errorf(`value '%v' must be a string conforming to regex "^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/\\d{1,2}$"`, this.Range))
	}
	return nil
}
func (this *Condition) Validate() error {
	if oneOfNester, ok := this.GetCondition().(*Condition_Any); ok {
		if oneOfNester.Any != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.Any); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Any", err)
			}
		}
	}
	if oneOfNester, ok := this.GetCondition().(*Condition_All); ok {
		if oneOfNester.All != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.All); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("All", err)
			}
		}
	}
	if oneOfNester, ok := this.GetCondition().(*Condition_Not); ok {
		if oneOfNester.Not != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.Not); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Not", err)
			}
		}
	}
	if oneOfNester, ok := this.GetCondition().(*Condition_CidrRange); ok {
		if oneOfNester.CidrRange != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.CidrRange); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("CidrRange", err)
			}
		}
	}
	return nil
}
func (this *Policy) Validate() error {
	for _, item := range this.Resources {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Resources", err)
			}
		}
	}
	for _, item := range this.Actions {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Actions", err)
			}
		}
	}
	if this.Condition != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Condition); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Condition", err)
		}
	}
	return nil
}
