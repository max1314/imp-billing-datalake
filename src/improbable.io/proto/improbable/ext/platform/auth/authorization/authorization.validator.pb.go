// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/ext/platform/auth/authorization/authorization.proto

package improbable_platform_auth

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *RequiredPermission) Validate() error {
	if this.Resource != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Resource); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Resource", err)
		}
	}
	if this.Action != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Action); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Action", err)
		}
	}
	return nil
}
func (this *PermitsRequest) Validate() error {
	for _, item := range this.RequiredPermission {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("RequiredPermission", err)
			}
		}
	}
	return nil
}
func (this *PermitsResponse) Validate() error {
	return nil
}
func (this *PermitsBatchRequest) Validate() error {
	for _, item := range this.RequiredPermission {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("RequiredPermission", err)
			}
		}
	}
	return nil
}
func (this *PermitsBatchResponse) Validate() error {
	return nil
}
