// Code generated by protoc-gen-go. DO NOT EDIT.
// source: improbable/ext/platform/auth/authorization/policy.proto

package improbable_platform_auth

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Effect int32

const (
	Effect_DENY  Effect = 0
	Effect_ALLOW Effect = 1
)

var Effect_name = map[int32]string{
	0: "DENY",
	1: "ALLOW",
}

var Effect_value = map[string]int32{
	"DENY":  0,
	"ALLOW": 1,
}

func (x Effect) String() string {
	return proto.EnumName(Effect_name, int32(x))
}

func (Effect) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_07d71a9770aadf1b, []int{0}
}

type Product int32

const (
	Product_IAM        Product = 0
	Product_SPATIAL_OS Product = 1
	Product_LAUNCHER   Product = 2
)

var Product_name = map[int32]string{
	0: "IAM",
	1: "SPATIAL_OS",
	2: "LAUNCHER",
}

var Product_value = map[string]int32{
	"IAM":        0,
	"SPATIAL_OS": 1,
	"LAUNCHER":   2,
}

func (x Product) String() string {
	return proto.EnumName(Product_name, int32(x))
}

func (Product) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_07d71a9770aadf1b, []int{1}
}

type Resource struct {
	Product              Product  `protobuf:"varint,1,opt,name=product,proto3,enum=improbable.platform.auth.Product" json:"product,omitempty"`
	OrganisationId       int64    `protobuf:"varint,2,opt,name=organisation_id,json=organisationId,proto3" json:"organisation_id,omitempty"`
	Component            string   `protobuf:"bytes,3,opt,name=component,proto3" json:"component,omitempty"`
	ComponentKey         string   `protobuf:"bytes,4,opt,name=component_key,json=componentKey,proto3" json:"component_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Resource) Reset()         { *m = Resource{} }
func (m *Resource) String() string { return proto.CompactTextString(m) }
func (*Resource) ProtoMessage()    {}
func (*Resource) Descriptor() ([]byte, []int) {
	return fileDescriptor_07d71a9770aadf1b, []int{0}
}

func (m *Resource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resource.Unmarshal(m, b)
}
func (m *Resource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resource.Marshal(b, m, deterministic)
}
func (m *Resource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resource.Merge(m, src)
}
func (m *Resource) XXX_Size() int {
	return xxx_messageInfo_Resource.Size(m)
}
func (m *Resource) XXX_DiscardUnknown() {
	xxx_messageInfo_Resource.DiscardUnknown(m)
}

var xxx_messageInfo_Resource proto.InternalMessageInfo

func (m *Resource) GetProduct() Product {
	if m != nil {
		return m.Product
	}
	return Product_IAM
}

func (m *Resource) GetOrganisationId() int64 {
	if m != nil {
		return m.OrganisationId
	}
	return 0
}

func (m *Resource) GetComponent() string {
	if m != nil {
		return m.Component
	}
	return ""
}

func (m *Resource) GetComponentKey() string {
	if m != nil {
		return m.ComponentKey
	}
	return ""
}

type Action struct {
	Product              Product  `protobuf:"varint,1,opt,name=product,proto3,enum=improbable.platform.auth.Product" json:"product,omitempty"`
	Operation            string   `protobuf:"bytes,2,opt,name=operation,proto3" json:"operation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Action) Reset()         { *m = Action{} }
func (m *Action) String() string { return proto.CompactTextString(m) }
func (*Action) ProtoMessage()    {}
func (*Action) Descriptor() ([]byte, []int) {
	return fileDescriptor_07d71a9770aadf1b, []int{1}
}

func (m *Action) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Action.Unmarshal(m, b)
}
func (m *Action) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Action.Marshal(b, m, deterministic)
}
func (m *Action) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Action.Merge(m, src)
}
func (m *Action) XXX_Size() int {
	return xxx_messageInfo_Action.Size(m)
}
func (m *Action) XXX_DiscardUnknown() {
	xxx_messageInfo_Action.DiscardUnknown(m)
}

var xxx_messageInfo_Action proto.InternalMessageInfo

func (m *Action) GetProduct() Product {
	if m != nil {
		return m.Product
	}
	return Product_IAM
}

func (m *Action) GetOperation() string {
	if m != nil {
		return m.Operation
	}
	return ""
}

type AnyCondition struct {
	Conditions           []*Condition `protobuf:"bytes,1,rep,name=conditions,proto3" json:"conditions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *AnyCondition) Reset()         { *m = AnyCondition{} }
func (m *AnyCondition) String() string { return proto.CompactTextString(m) }
func (*AnyCondition) ProtoMessage()    {}
func (*AnyCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor_07d71a9770aadf1b, []int{2}
}

func (m *AnyCondition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnyCondition.Unmarshal(m, b)
}
func (m *AnyCondition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnyCondition.Marshal(b, m, deterministic)
}
func (m *AnyCondition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnyCondition.Merge(m, src)
}
func (m *AnyCondition) XXX_Size() int {
	return xxx_messageInfo_AnyCondition.Size(m)
}
func (m *AnyCondition) XXX_DiscardUnknown() {
	xxx_messageInfo_AnyCondition.DiscardUnknown(m)
}

var xxx_messageInfo_AnyCondition proto.InternalMessageInfo

func (m *AnyCondition) GetConditions() []*Condition {
	if m != nil {
		return m.Conditions
	}
	return nil
}

type AllCondition struct {
	Conditions           []*Condition `protobuf:"bytes,1,rep,name=conditions,proto3" json:"conditions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *AllCondition) Reset()         { *m = AllCondition{} }
func (m *AllCondition) String() string { return proto.CompactTextString(m) }
func (*AllCondition) ProtoMessage()    {}
func (*AllCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor_07d71a9770aadf1b, []int{3}
}

func (m *AllCondition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllCondition.Unmarshal(m, b)
}
func (m *AllCondition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllCondition.Marshal(b, m, deterministic)
}
func (m *AllCondition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllCondition.Merge(m, src)
}
func (m *AllCondition) XXX_Size() int {
	return xxx_messageInfo_AllCondition.Size(m)
}
func (m *AllCondition) XXX_DiscardUnknown() {
	xxx_messageInfo_AllCondition.DiscardUnknown(m)
}

var xxx_messageInfo_AllCondition proto.InternalMessageInfo

func (m *AllCondition) GetConditions() []*Condition {
	if m != nil {
		return m.Conditions
	}
	return nil
}

type NotCondition struct {
	Condition            *Condition `protobuf:"bytes,1,opt,name=condition,proto3" json:"condition,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *NotCondition) Reset()         { *m = NotCondition{} }
func (m *NotCondition) String() string { return proto.CompactTextString(m) }
func (*NotCondition) ProtoMessage()    {}
func (*NotCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor_07d71a9770aadf1b, []int{4}
}

func (m *NotCondition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotCondition.Unmarshal(m, b)
}
func (m *NotCondition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotCondition.Marshal(b, m, deterministic)
}
func (m *NotCondition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotCondition.Merge(m, src)
}
func (m *NotCondition) XXX_Size() int {
	return xxx_messageInfo_NotCondition.Size(m)
}
func (m *NotCondition) XXX_DiscardUnknown() {
	xxx_messageInfo_NotCondition.DiscardUnknown(m)
}

var xxx_messageInfo_NotCondition proto.InternalMessageInfo

func (m *NotCondition) GetCondition() *Condition {
	if m != nil {
		return m.Condition
	}
	return nil
}

type CIDRRangeCondition struct {
	Range                string   `protobuf:"bytes,1,opt,name=range,proto3" json:"range,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CIDRRangeCondition) Reset()         { *m = CIDRRangeCondition{} }
func (m *CIDRRangeCondition) String() string { return proto.CompactTextString(m) }
func (*CIDRRangeCondition) ProtoMessage()    {}
func (*CIDRRangeCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor_07d71a9770aadf1b, []int{5}
}

func (m *CIDRRangeCondition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CIDRRangeCondition.Unmarshal(m, b)
}
func (m *CIDRRangeCondition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CIDRRangeCondition.Marshal(b, m, deterministic)
}
func (m *CIDRRangeCondition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CIDRRangeCondition.Merge(m, src)
}
func (m *CIDRRangeCondition) XXX_Size() int {
	return xxx_messageInfo_CIDRRangeCondition.Size(m)
}
func (m *CIDRRangeCondition) XXX_DiscardUnknown() {
	xxx_messageInfo_CIDRRangeCondition.DiscardUnknown(m)
}

var xxx_messageInfo_CIDRRangeCondition proto.InternalMessageInfo

func (m *CIDRRangeCondition) GetRange() string {
	if m != nil {
		return m.Range
	}
	return ""
}

type Condition struct {
	// Types that are valid to be assigned to Condition:
	//	*Condition_Any
	//	*Condition_All
	//	*Condition_Not
	//	*Condition_CidrRange
	Condition            isCondition_Condition `protobuf_oneof:"condition"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Condition) Reset()         { *m = Condition{} }
func (m *Condition) String() string { return proto.CompactTextString(m) }
func (*Condition) ProtoMessage()    {}
func (*Condition) Descriptor() ([]byte, []int) {
	return fileDescriptor_07d71a9770aadf1b, []int{6}
}

func (m *Condition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Condition.Unmarshal(m, b)
}
func (m *Condition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Condition.Marshal(b, m, deterministic)
}
func (m *Condition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Condition.Merge(m, src)
}
func (m *Condition) XXX_Size() int {
	return xxx_messageInfo_Condition.Size(m)
}
func (m *Condition) XXX_DiscardUnknown() {
	xxx_messageInfo_Condition.DiscardUnknown(m)
}

var xxx_messageInfo_Condition proto.InternalMessageInfo

type isCondition_Condition interface {
	isCondition_Condition()
}

type Condition_Any struct {
	Any *AnyCondition `protobuf:"bytes,1,opt,name=any,proto3,oneof"`
}

type Condition_All struct {
	All *AllCondition `protobuf:"bytes,2,opt,name=all,proto3,oneof"`
}

type Condition_Not struct {
	Not *NotCondition `protobuf:"bytes,3,opt,name=not,proto3,oneof"`
}

type Condition_CidrRange struct {
	CidrRange *CIDRRangeCondition `protobuf:"bytes,4,opt,name=cidr_range,json=cidrRange,proto3,oneof"`
}

func (*Condition_Any) isCondition_Condition() {}

func (*Condition_All) isCondition_Condition() {}

func (*Condition_Not) isCondition_Condition() {}

func (*Condition_CidrRange) isCondition_Condition() {}

func (m *Condition) GetCondition() isCondition_Condition {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *Condition) GetAny() *AnyCondition {
	if x, ok := m.GetCondition().(*Condition_Any); ok {
		return x.Any
	}
	return nil
}

func (m *Condition) GetAll() *AllCondition {
	if x, ok := m.GetCondition().(*Condition_All); ok {
		return x.All
	}
	return nil
}

func (m *Condition) GetNot() *NotCondition {
	if x, ok := m.GetCondition().(*Condition_Not); ok {
		return x.Not
	}
	return nil
}

func (m *Condition) GetCidrRange() *CIDRRangeCondition {
	if x, ok := m.GetCondition().(*Condition_CidrRange); ok {
		return x.CidrRange
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Condition) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Condition_Any)(nil),
		(*Condition_All)(nil),
		(*Condition_Not)(nil),
		(*Condition_CidrRange)(nil),
	}
}

type Policy struct {
	PolicyId             int64       `protobuf:"varint,1,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	DisplayName          string      `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Description          string      `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Effect               Effect      `protobuf:"varint,4,opt,name=effect,proto3,enum=improbable.platform.auth.Effect" json:"effect,omitempty"`
	Resources            []*Resource `protobuf:"bytes,5,rep,name=resources,proto3" json:"resources,omitempty"`
	Actions              []*Action   `protobuf:"bytes,6,rep,name=actions,proto3" json:"actions,omitempty"`
	Condition            *Condition  `protobuf:"bytes,7,opt,name=condition,proto3" json:"condition,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Policy) Reset()         { *m = Policy{} }
func (m *Policy) String() string { return proto.CompactTextString(m) }
func (*Policy) ProtoMessage()    {}
func (*Policy) Descriptor() ([]byte, []int) {
	return fileDescriptor_07d71a9770aadf1b, []int{7}
}

func (m *Policy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Policy.Unmarshal(m, b)
}
func (m *Policy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Policy.Marshal(b, m, deterministic)
}
func (m *Policy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Policy.Merge(m, src)
}
func (m *Policy) XXX_Size() int {
	return xxx_messageInfo_Policy.Size(m)
}
func (m *Policy) XXX_DiscardUnknown() {
	xxx_messageInfo_Policy.DiscardUnknown(m)
}

var xxx_messageInfo_Policy proto.InternalMessageInfo

func (m *Policy) GetPolicyId() int64 {
	if m != nil {
		return m.PolicyId
	}
	return 0
}

func (m *Policy) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Policy) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Policy) GetEffect() Effect {
	if m != nil {
		return m.Effect
	}
	return Effect_DENY
}

func (m *Policy) GetResources() []*Resource {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *Policy) GetActions() []*Action {
	if m != nil {
		return m.Actions
	}
	return nil
}

func (m *Policy) GetCondition() *Condition {
	if m != nil {
		return m.Condition
	}
	return nil
}

func init() {
	proto.RegisterEnum("improbable.platform.auth.Effect", Effect_name, Effect_value)
	proto.RegisterEnum("improbable.platform.auth.Product", Product_name, Product_value)
	proto.RegisterType((*Resource)(nil), "improbable.platform.auth.Resource")
	proto.RegisterType((*Action)(nil), "improbable.platform.auth.Action")
	proto.RegisterType((*AnyCondition)(nil), "improbable.platform.auth.AnyCondition")
	proto.RegisterType((*AllCondition)(nil), "improbable.platform.auth.AllCondition")
	proto.RegisterType((*NotCondition)(nil), "improbable.platform.auth.NotCondition")
	proto.RegisterType((*CIDRRangeCondition)(nil), "improbable.platform.auth.CIDRRangeCondition")
	proto.RegisterType((*Condition)(nil), "improbable.platform.auth.Condition")
	proto.RegisterType((*Policy)(nil), "improbable.platform.auth.Policy")
}

func init() {
	proto.RegisterFile("improbable/ext/platform/auth/authorization/policy.proto", fileDescriptor_07d71a9770aadf1b)
}

var fileDescriptor_07d71a9770aadf1b = []byte{
	// 712 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0x61, 0x6f, 0xd2, 0x5c,
	0x14, 0xc7, 0x29, 0x6c, 0x40, 0x0f, 0x3c, 0x3c, 0xe4, 0x1a, 0x13, 0x9c, 0x1a, 0x3a, 0x5c, 0x94,
	0x90, 0xd1, 0x6e, 0x90, 0x4c, 0xdd, 0x8b, 0xc5, 0xc2, 0x96, 0x8c, 0xc8, 0xd8, 0xbc, 0xd3, 0x18,
	0x75, 0x1b, 0xb9, 0xb4, 0x77, 0xac, 0x59, 0xe9, 0x6d, 0x4a, 0x71, 0xb2, 0x65, 0x1f, 0xc1, 0x4f,
	0xe0, 0x87, 0x23, 0x21, 0xf1, 0x3b, 0xf8, 0xd2, 0xf4, 0xb6, 0x50, 0x8c, 0x01, 0x8d, 0xd9, 0x9b,
	0xa6, 0xf7, 0xe4, 0xfc, 0xfe, 0x3d, 0xff, 0x73, 0x4f, 0x0f, 0x3c, 0x37, 0x7a, 0xb6, 0xc3, 0x3a,
	0xa4, 0x63, 0x52, 0x85, 0x7e, 0x71, 0x15, 0xdb, 0x24, 0xee, 0x39, 0x73, 0x7a, 0x0a, 0x19, 0xb8,
	0x17, 0xfc, 0xc1, 0x1c, 0xe3, 0x9a, 0xb8, 0x06, 0xb3, 0x14, 0x9b, 0x99, 0x86, 0x36, 0x94, 0x6d,
	0x87, 0xb9, 0x0c, 0xe5, 0x42, 0x50, 0x9e, 0x40, 0xb2, 0x97, 0xbf, 0xb2, 0xd5, 0x35, 0xdc, 0x8b,
	0x41, 0x47, 0xd6, 0x58, 0x4f, 0xe9, 0x5d, 0x19, 0xee, 0x25, 0xbb, 0x52, 0xba, 0xac, 0xcc, 0xb1,
	0xf2, 0x67, 0x62, 0x1a, 0x3a, 0x71, 0x99, 0xd3, 0x57, 0xa6, 0xaf, 0xbe, 0x62, 0xe1, 0x87, 0x00,
	0x49, 0x4c, 0xfb, 0x6c, 0xe0, 0x68, 0x14, 0xd5, 0x21, 0x61, 0x3b, 0x4c, 0x1f, 0x68, 0x6e, 0x4e,
	0x90, 0x84, 0x62, 0xa6, 0xb2, 0x2a, 0xcf, 0xfb, 0xa0, 0x7c, 0xe4, 0x27, 0xd6, 0xe2, 0xe3, 0x51,
	0x3e, 0x2a, 0x09, 0x78, 0x42, 0xa2, 0x67, 0xf0, 0x3f, 0x73, 0xba, 0xc4, 0x32, 0xfa, 0xdc, 0x40,
	0xdb, 0xd0, 0x73, 0x51, 0x49, 0x28, 0xc6, 0x70, 0x66, 0x36, 0xdc, 0xd0, 0xd1, 0x0e, 0x88, 0x1a,
	0xeb, 0xd9, 0xcc, 0xa2, 0x96, 0x9b, 0x8b, 0x49, 0x42, 0x51, 0xac, 0x49, 0xe3, 0x51, 0xfe, 0x11,
	0xac, 0x9c, 0x7d, 0x22, 0xe5, 0xeb, 0xd2, 0xa9, 0xf7, 0x54, 0xcb, 0x1f, 0x37, 0xca, 0x2f, 0x4b,
	0xa7, 0x37, 0x1b, 0xeb, 0xd5, 0xcd, 0xdb, 0x35, 0x1c, 0x22, 0x68, 0x07, 0xfe, 0x9b, 0x1e, 0xda,
	0x97, 0x74, 0x98, 0x5b, 0xe2, 0x1a, 0x0f, 0xc6, 0xa3, 0xfc, 0x7d, 0xb8, 0x77, 0x16, 0xd2, 0x72,
	0xa9, 0xad, 0x94, 0x4f, 0x4b, 0x6b, 0x38, 0x3d, 0xcd, 0x7f, 0x4d, 0x87, 0x85, 0xaf, 0x02, 0xc4,
	0x55, 0xcd, 0x2b, 0xe6, 0x6e, 0x8c, 0xef, 0x80, 0xc8, 0x6c, 0xea, 0x70, 0x7b, 0xdc, 0xf2, 0x1f,
	0xfc, 0x6c, 0x55, 0x3d, 0x3f, 0x53, 0xa4, 0x70, 0x0c, 0x69, 0xd5, 0x1a, 0xd6, 0x99, 0xa5, 0x1b,
	0x41, 0x51, 0xa0, 0x4d, 0x0e, 0xfd, 0x9c, 0x20, 0xc5, 0x8a, 0xa9, 0xca, 0x93, 0xf9, 0x75, 0x4d,
	0x41, 0x3c, 0x83, 0x71, 0x51, 0xd3, 0xbc, 0x63, 0xd1, 0x37, 0x90, 0x6e, 0x31, 0x37, 0x14, 0x55,
	0xbd, 0x9b, 0x0c, 0x0e, 0xbc, 0x81, 0x7f, 0xa9, 0x19, 0x52, 0x85, 0x36, 0xa0, 0x7a, 0x63, 0x17,
	0x63, 0x62, 0x75, 0x69, 0x28, 0xdc, 0x80, 0x65, 0xc7, 0x8b, 0x70, 0x51, 0xb1, 0x56, 0x1d, 0x8f,
	0xf2, 0x0a, 0x94, 0xcf, 0x4e, 0xf4, 0x9b, 0xcd, 0xf5, 0xea, 0xed, 0x89, 0x3c, 0xff, 0x45, 0xe1,
	0x2f, 0x95, 0xdb, 0x35, 0xec, 0x2b, 0x14, 0xbe, 0x45, 0x41, 0x0c, 0x85, 0xb7, 0x21, 0x46, 0xac,
	0x61, 0x50, 0xeb, 0xd3, 0xf9, 0xb5, 0xce, 0x5e, 0xc8, 0x7e, 0x04, 0x7b, 0x10, 0x67, 0x4d, 0x93,
	0xdf, 0xf0, 0x62, 0x76, 0xa6, 0xef, 0x9c, 0x35, 0x4d, 0x8f, 0xb5, 0x98, 0x3f, 0xed, 0x0b, 0xd9,
	0xd9, 0xf6, 0x7a, 0xac, 0xc5, 0x5c, 0x74, 0x00, 0xa0, 0x19, 0xba, 0xd3, 0xf6, 0x3b, 0xb2, 0xc4,
	0x25, 0xd6, 0x17, 0xb4, 0xf9, 0xb7, 0x76, 0xee, 0x47, 0xb0, 0xe8, 0x29, 0xf0, 0x68, 0x2d, 0x35,
	0x73, 0x69, 0x85, 0xef, 0x51, 0x88, 0x1f, 0xf1, 0x4d, 0x83, 0x1e, 0x82, 0xe8, 0xef, 0x1c, 0xef,
	0xcf, 0x15, 0xf8, 0x9f, 0x9b, 0xf4, 0x03, 0x0d, 0x1d, 0xad, 0x42, 0x5a, 0x37, 0xfa, 0xb6, 0x49,
	0x86, 0x6d, 0x8b, 0xf4, 0xa8, 0x3f, 0xe6, 0x38, 0x15, 0xc4, 0x5a, 0xa4, 0x47, 0x91, 0x04, 0x29,
	0x9d, 0xf6, 0x35, 0xc7, 0xb0, 0xf9, 0x38, 0xc4, 0x82, 0x8c, 0x30, 0x84, 0x5e, 0x40, 0x9c, 0x9e,
	0x9f, 0x53, 0xcd, 0xe5, 0x26, 0x32, 0x15, 0x69, 0xbe, 0x89, 0x3d, 0x9e, 0x87, 0x83, 0x7c, 0xf4,
	0x0a, 0x44, 0x27, 0x58, 0x56, 0xfd, 0xdc, 0x32, 0x1f, 0xde, 0xc2, 0x7c, 0x78, 0xb2, 0xd7, 0x70,
	0x08, 0xa1, 0x6d, 0x48, 0x10, 0xcd, 0x1f, 0xfe, 0x38, 0xe7, 0x17, 0x7c, 0xdc, 0x5f, 0x0e, 0x78,
	0x02, 0xfc, 0x3a, 0xe6, 0x89, 0x7f, 0x19, 0xf3, 0xd2, 0x63, 0x88, 0xfb, 0x96, 0x50, 0x12, 0x96,
	0x76, 0xf7, 0x5a, 0x1f, 0xb2, 0x11, 0x24, 0xc2, 0xb2, 0xda, 0x6c, 0x1e, 0xbe, 0xcf, 0x0a, 0xa5,
	0x0d, 0x48, 0x04, 0xeb, 0x05, 0x25, 0x20, 0xd6, 0x50, 0x0f, 0xb2, 0x11, 0x94, 0x01, 0x38, 0x3e,
	0x52, 0xdf, 0x36, 0xd4, 0x66, 0xfb, 0xf0, 0x38, 0x2b, 0xa0, 0x34, 0x24, 0x9b, 0xea, 0xbb, 0x56,
	0x7d, 0x7f, 0x0f, 0x67, 0xa3, 0x9d, 0x38, 0x5f, 0xe3, 0xd5, 0x9f, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x4e, 0x61, 0xe6, 0xba, 0x53, 0x06, 0x00, 0x00,
}
