// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/ext/platform/auth/auth.proto

package improbable_platform_auth

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/duration"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	github_com_improbable_io_go_proto_logfields "github.com/improbable-io/go-proto-logfields"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/protobuf/field_mask"
	_ "improbable.io/proto/improbable/ext/platform/auth/authorization"
	_ "improbable.io/proto/improbable/ext/plugin/auth"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *Organisation) LogFields() map[string]string {
	return map[string]string{}
}

func (this *Organisation) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *ListOrganisationsRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	maskFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Mask)
	hasInner = hasInner || len(maskFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range maskFields {
		res[k] = v
	}
	return res
}

func (this *ListOrganisationsRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Mask, dst)
}

func (this *ListOrganisationsResponse) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	organisationFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Organisation)
	hasInner = hasInner || len(organisationFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range organisationFields {
		res[k] = v
	}
	return res
}

func (this *ListOrganisationsResponse) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Organisation, dst)
}

func (this *GetOrganisationRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	maskFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Mask)
	hasInner = hasInner || len(maskFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range maskFields {
		res[k] = v
	}
	return res
}

func (this *GetOrganisationRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Mask, dst)
}

func (this *GetOrganisationResponse) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	organisationFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Organisation)
	hasInner = hasInner || len(organisationFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range organisationFields {
		res[k] = v
	}
	return res
}

func (this *GetOrganisationResponse) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Organisation, dst)
}

func (this *CreateOrganisationRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	organisationFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Organisation)
	hasInner = hasInner || len(organisationFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range organisationFields {
		res[k] = v
	}
	return res
}

func (this *CreateOrganisationRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Organisation, dst)
}

func (this *CreateOrganisationResponse) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	organisationFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Organisation)
	hasInner = hasInner || len(organisationFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range organisationFields {
		res[k] = v
	}
	return res
}

func (this *CreateOrganisationResponse) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Organisation, dst)
}

func (this *UpdateOrganisationRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	organisationFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Organisation)
	hasInner = hasInner || len(organisationFields) > 0
	updateMaskFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.UpdateMask)
	hasInner = hasInner || len(updateMaskFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range organisationFields {
		res[k] = v
	}
	for k, v := range updateMaskFields {
		res[k] = v
	}
	return res
}

func (this *UpdateOrganisationRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Organisation, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.UpdateMask, dst)
}

func (this *UpdateOrganisationResponse) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	organisationFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Organisation)
	hasInner = hasInner || len(organisationFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range organisationFields {
		res[k] = v
	}
	return res
}

func (this *UpdateOrganisationResponse) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Organisation, dst)
}

func (this *DeleteOrganisationRequest) LogFields() map[string]string {
	return map[string]string{}
}

func (this *DeleteOrganisationRequest) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *DeleteOrganisationResponse) LogFields() map[string]string {
	return map[string]string{}
}

func (this *DeleteOrganisationResponse) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *Role) LogFields() map[string]string {
	return map[string]string{}
}

func (this *Role) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *ListRolesRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	maskFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Mask)
	hasInner = hasInner || len(maskFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range maskFields {
		res[k] = v
	}
	return res
}

func (this *ListRolesRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Mask, dst)
}

func (this *ListRolesResponse) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	roleFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Role)
	hasInner = hasInner || len(roleFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range roleFields {
		res[k] = v
	}
	return res
}

func (this *ListRolesResponse) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Role, dst)
}

func (this *GetRoleRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	maskFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Mask)
	hasInner = hasInner || len(maskFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range maskFields {
		res[k] = v
	}
	return res
}

func (this *GetRoleRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Mask, dst)
}

func (this *GetRoleResponse) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	roleFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Role)
	hasInner = hasInner || len(roleFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range roleFields {
		res[k] = v
	}
	return res
}

func (this *GetRoleResponse) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Role, dst)
}

func (this *CreateRoleRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	roleFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Role)
	hasInner = hasInner || len(roleFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range roleFields {
		res[k] = v
	}
	return res
}

func (this *CreateRoleRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Role, dst)
}

func (this *CreateRoleResponse) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	roleFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Role)
	hasInner = hasInner || len(roleFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range roleFields {
		res[k] = v
	}
	return res
}

func (this *CreateRoleResponse) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Role, dst)
}

func (this *UpdateRoleRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	roleFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Role)
	hasInner = hasInner || len(roleFields) > 0
	updateMaskFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.UpdateMask)
	hasInner = hasInner || len(updateMaskFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range roleFields {
		res[k] = v
	}
	for k, v := range updateMaskFields {
		res[k] = v
	}
	return res
}

func (this *UpdateRoleRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Role, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.UpdateMask, dst)
}

func (this *UpdateRoleResponse) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	roleFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Role)
	hasInner = hasInner || len(roleFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range roleFields {
		res[k] = v
	}
	return res
}

func (this *UpdateRoleResponse) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Role, dst)
}

func (this *DeleteRoleRequest) LogFields() map[string]string {
	return map[string]string{}
}

func (this *DeleteRoleRequest) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *DeleteRoleResponse) LogFields() map[string]string {
	return map[string]string{}
}

func (this *DeleteRoleResponse) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *AddPolicyToRoleRequest) LogFields() map[string]string {
	return map[string]string{}
}

func (this *AddPolicyToRoleRequest) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *AddPolicyToRoleResponse) LogFields() map[string]string {
	return map[string]string{}
}

func (this *AddPolicyToRoleResponse) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *RemovePolicyFromRoleRequest) LogFields() map[string]string {
	return map[string]string{}
}

func (this *RemovePolicyFromRoleRequest) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *RemovePolicyFromRoleResponse) LogFields() map[string]string {
	return map[string]string{}
}

func (this *RemovePolicyFromRoleResponse) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *UserAccount) LogFields() map[string]string {
	return map[string]string{}
}

func (this *UserAccount) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *ListUserAccountsRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	maskFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Mask)
	hasInner = hasInner || len(maskFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range maskFields {
		res[k] = v
	}
	return res
}

func (this *ListUserAccountsRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Mask, dst)
}

func (this *ListUserAccountsResponse) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	accountFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Account)
	hasInner = hasInner || len(accountFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range accountFields {
		res[k] = v
	}
	return res
}

func (this *ListUserAccountsResponse) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Account, dst)
}

func (this *GetUserAccountRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	maskFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Mask)
	hasInner = hasInner || len(maskFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range maskFields {
		res[k] = v
	}
	return res
}

func (this *GetUserAccountRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Mask, dst)
}

func (this *GetUserAccountResponse) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	accountFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Account)
	hasInner = hasInner || len(accountFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range accountFields {
		res[k] = v
	}
	return res
}

func (this *GetUserAccountResponse) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Account, dst)
}

func (this *CreateUserAccountRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	accountFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Account)
	hasInner = hasInner || len(accountFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range accountFields {
		res[k] = v
	}
	return res
}

func (this *CreateUserAccountRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Account, dst)
}

func (this *CreateUserAccountResponse) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	accountFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Account)
	hasInner = hasInner || len(accountFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range accountFields {
		res[k] = v
	}
	return res
}

func (this *CreateUserAccountResponse) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Account, dst)
}

func (this *UpdateUserAccountRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	accountFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Account)
	hasInner = hasInner || len(accountFields) > 0
	updateMaskFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.UpdateMask)
	hasInner = hasInner || len(updateMaskFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range accountFields {
		res[k] = v
	}
	for k, v := range updateMaskFields {
		res[k] = v
	}
	return res
}

func (this *UpdateUserAccountRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Account, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.UpdateMask, dst)
}

func (this *UpdateUserAccountResponse) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	accountFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Account)
	hasInner = hasInner || len(accountFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range accountFields {
		res[k] = v
	}
	return res
}

func (this *UpdateUserAccountResponse) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Account, dst)
}

func (this *DeleteUserAccountRequest) LogFields() map[string]string {
	return map[string]string{}
}

func (this *DeleteUserAccountRequest) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *DeleteUserAccountResponse) LogFields() map[string]string {
	return map[string]string{}
}

func (this *DeleteUserAccountResponse) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *ServiceAccount) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	creationTimeFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.CreationTime)
	hasInner = hasInner || len(creationTimeFields) > 0
	expirationTimeFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.ExpirationTime)
	hasInner = hasInner || len(expirationTimeFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range creationTimeFields {
		res[k] = v
	}
	for k, v := range expirationTimeFields {
		res[k] = v
	}
	return res
}

func (this *ServiceAccount) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.CreationTime, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.ExpirationTime, dst)
}

func (this *ListServiceAccountsRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	maskFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Mask)
	hasInner = hasInner || len(maskFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range maskFields {
		res[k] = v
	}
	return res
}

func (this *ListServiceAccountsRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Mask, dst)
}

func (this *ListServiceAccountsResponse) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	accountFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Account)
	hasInner = hasInner || len(accountFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range accountFields {
		res[k] = v
	}
	return res
}

func (this *ListServiceAccountsResponse) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Account, dst)
}

func (this *GetServiceAccountRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	maskFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Mask)
	hasInner = hasInner || len(maskFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range maskFields {
		res[k] = v
	}
	return res
}

func (this *GetServiceAccountRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Mask, dst)
}

func (this *GetServiceAccountResponse) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	accountFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Account)
	hasInner = hasInner || len(accountFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range accountFields {
		res[k] = v
	}
	return res
}

func (this *GetServiceAccountResponse) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Account, dst)
}

func (this *CreateServiceAccountRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	lifetimeFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Lifetime)
	hasInner = hasInner || len(lifetimeFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range lifetimeFields {
		res[k] = v
	}
	return res
}

func (this *CreateServiceAccountRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Lifetime, dst)
}

func (this *CreateServiceAccountResponse) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	accountFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Account)
	hasInner = hasInner || len(accountFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range accountFields {
		res[k] = v
	}
	return res
}

func (this *CreateServiceAccountResponse) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Account, dst)
}

func (this *UpdateServiceAccountRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	accountFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Account)
	hasInner = hasInner || len(accountFields) > 0
	updateMaskFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.UpdateMask)
	hasInner = hasInner || len(updateMaskFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range accountFields {
		res[k] = v
	}
	for k, v := range updateMaskFields {
		res[k] = v
	}
	return res
}

func (this *UpdateServiceAccountRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Account, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.UpdateMask, dst)
}

func (this *UpdateServiceAccountResponse) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	accountFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Account)
	hasInner = hasInner || len(accountFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range accountFields {
		res[k] = v
	}
	return res
}

func (this *UpdateServiceAccountResponse) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Account, dst)
}

func (this *DeleteServiceAccountRequest) LogFields() map[string]string {
	return map[string]string{}
}

func (this *DeleteServiceAccountRequest) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *DeleteServiceAccountResponse) LogFields() map[string]string {
	return map[string]string{}
}

func (this *DeleteServiceAccountResponse) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *AddRoleToUserAccountRequest) LogFields() map[string]string {
	return map[string]string{}
}

func (this *AddRoleToUserAccountRequest) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *AddRoleToUserAccountResponse) LogFields() map[string]string {
	return map[string]string{}
}

func (this *AddRoleToUserAccountResponse) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *RemoveRoleFromUserAccountRequest) LogFields() map[string]string {
	return map[string]string{}
}

func (this *RemoveRoleFromUserAccountRequest) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *RemoveRoleFromUserAccountResponse) LogFields() map[string]string {
	return map[string]string{}
}

func (this *RemoveRoleFromUserAccountResponse) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *AddRoleToServiceAccountRequest) LogFields() map[string]string {
	return map[string]string{}
}

func (this *AddRoleToServiceAccountRequest) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *AddRoleToServiceAccountResponse) LogFields() map[string]string {
	return map[string]string{}
}

func (this *AddRoleToServiceAccountResponse) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *RemoveRoleFromServiceAccountRequest) LogFields() map[string]string {
	return map[string]string{}
}

func (this *RemoveRoleFromServiceAccountRequest) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *RemoveRoleFromServiceAccountResponse) LogFields() map[string]string {
	return map[string]string{}
}

func (this *RemoveRoleFromServiceAccountResponse) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *ListPoliciesRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	maskFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Mask)
	hasInner = hasInner || len(maskFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range maskFields {
		res[k] = v
	}
	return res
}

func (this *ListPoliciesRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Mask, dst)
}

func (this *ListPoliciesResponse) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	policyFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Policy)
	hasInner = hasInner || len(policyFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range policyFields {
		res[k] = v
	}
	return res
}

func (this *ListPoliciesResponse) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Policy, dst)
}

func (this *GetPolicyRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	maskFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Mask)
	hasInner = hasInner || len(maskFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range maskFields {
		res[k] = v
	}
	return res
}

func (this *GetPolicyRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Mask, dst)
}

func (this *GetPolicyResponse) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	policyFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Policy)
	hasInner = hasInner || len(policyFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range policyFields {
		res[k] = v
	}
	return res
}

func (this *GetPolicyResponse) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Policy, dst)
}

func (this *CreatePolicyRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	policyFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Policy)
	hasInner = hasInner || len(policyFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range policyFields {
		res[k] = v
	}
	return res
}

func (this *CreatePolicyRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Policy, dst)
}

func (this *CreatePolicyResponse) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	policyFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Policy)
	hasInner = hasInner || len(policyFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range policyFields {
		res[k] = v
	}
	return res
}

func (this *CreatePolicyResponse) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Policy, dst)
}

func (this *UpdatePolicyRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	policyFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Policy)
	hasInner = hasInner || len(policyFields) > 0
	updateMaskFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.UpdateMask)
	hasInner = hasInner || len(updateMaskFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range policyFields {
		res[k] = v
	}
	for k, v := range updateMaskFields {
		res[k] = v
	}
	return res
}

func (this *UpdatePolicyRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Policy, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.UpdateMask, dst)
}

func (this *UpdatePolicyResponse) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	policyFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Policy)
	hasInner = hasInner || len(policyFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range policyFields {
		res[k] = v
	}
	return res
}

func (this *UpdatePolicyResponse) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Policy, dst)
}

func (this *DeletePolicyRequest) LogFields() map[string]string {
	return map[string]string{}
}

func (this *DeletePolicyRequest) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *DeletePolicyResponse) LogFields() map[string]string {
	return map[string]string{}
}

func (this *DeletePolicyResponse) ExtractRequestFields(dst map[string]interface{}) {
}
