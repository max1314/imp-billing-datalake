// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/ext/cli/project/project_configuration.proto

package improbable_ext_cli_project

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	_ "improbable.io/proto/improbable/platform/deployment"
	math "math"
	regexp "regexp"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

var _regex_MainProjectConfiguration_ConfigurationVersion = regexp.MustCompile(`^[0-9]+(\.[0-9]+)?(\.[0-9]+)?(-[A-Za-z0-9_-]+)?$`)
var _regex_MainProjectConfiguration_ProjectName = regexp.MustCompile(`^[a-z0-9_]{3,32}$`)

func (this *MainProjectConfiguration) Validate() error {
	if !_regex_MainProjectConfiguration_ConfigurationVersion.MatchString(this.ConfigurationVersion) {
		return github_com_mwitkow_go_proto_validators.FieldError("ConfigurationVersion", fmt.Errorf(`value '%v' must be a string conforming to regex "^[0-9]+(\\.[0-9]+)?(\\.[0-9]+)?(-[A-Za-z0-9_-]+)?$"`, this.ConfigurationVersion))
	}
	if !_regex_MainProjectConfiguration_ProjectName.MatchString(this.ProjectName) {
		return github_com_mwitkow_go_proto_validators.FieldError("ProjectName", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-z0-9_]{3,32}$"`, this.ProjectName))
	}
	for _, item := range this.ClientWorkers {
		if item == "" {
			return github_com_mwitkow_go_proto_validators.FieldError("ClientWorkers", fmt.Errorf(`value '%v' must not be an empty string`, item))
		}
	}
	for _, item := range this.ServerWorkers {
		if item == "" {
			return github_com_mwitkow_go_proto_validators.FieldError("ServerWorkers", fmt.Errorf(`value '%v' must not be an empty string`, item))
		}
	}
	return nil
}

var _regex_ClientWorkerConfiguration_WorkerType = regexp.MustCompile(`^[a-zA-Z0-9_-]{3,128}$`)

func (this *ClientWorkerConfiguration) Validate() error {
	if !_regex_ClientWorkerConfiguration_WorkerType.MatchString(this.WorkerType) {
		return github_com_mwitkow_go_proto_validators.FieldError("WorkerType", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-zA-Z0-9_-]{3,128}$"`, this.WorkerType))
	}
	if this.Layer == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Layer", fmt.Errorf(`value '%v' must not be an empty string`, this.Layer))
	}
	if this.EntityInterest != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.EntityInterest); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("EntityInterest", err)
		}
	}
	for _, item := range this.StreamingQuery {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("StreamingQuery", err)
			}
		}
	}
	if this.ComponentDelivery != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ComponentDelivery); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ComponentDelivery", err)
		}
	}
	if this.ComponentSettings != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ComponentSettings); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ComponentSettings", err)
		}
	}
	if this.Permissions != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Permissions); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Permissions", err)
		}
	}
	if this.LoginRateLimit != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.LoginRateLimit); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("LoginRateLimit", err)
		}
	}
	if this.ConnectionCapacityLimit != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ConnectionCapacityLimit); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ConnectionCapacityLimit", err)
		}
	}
	if this.UploadConfiguration != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.UploadConfiguration); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("UploadConfiguration", err)
		}
	}
	return nil
}

var _regex_ServerWorkerConfiguration_WorkerType = regexp.MustCompile(`^[a-zA-Z0-9_-]{3,128}$`)

func (this *ServerWorkerConfiguration) Validate() error {
	if !_regex_ServerWorkerConfiguration_WorkerType.MatchString(this.WorkerType) {
		return github_com_mwitkow_go_proto_validators.FieldError("WorkerType", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-zA-Z0-9_-]{3,128}$"`, this.WorkerType))
	}
	if this.Layer == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Layer", fmt.Errorf(`value '%v' must not be an empty string`, this.Layer))
	}
	if this.EntityInterest != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.EntityInterest); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("EntityInterest", err)
		}
	}
	for _, item := range this.StreamingQuery {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("StreamingQuery", err)
			}
		}
	}
	if this.ComponentDelivery != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ComponentDelivery); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ComponentDelivery", err)
		}
	}
	if this.ComponentSettings != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ComponentSettings); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ComponentSettings", err)
		}
	}
	if this.Permissions != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Permissions); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Permissions", err)
		}
	}
	if this.LaunchConfiguration != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.LaunchConfiguration); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("LaunchConfiguration", err)
		}
	}
	return nil
}
func (this *WorkerLaunchConfiguration) Validate() error {
	if this.LocalDeployment != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.LocalDeployment); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("LocalDeployment", err)
		}
	}
	if this.CloudDeployment != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CloudDeployment); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CloudDeployment", err)
		}
	}
	return nil
}
func (this *SupportedPlatformsLocalWorkerConfiguration) Validate() error {
	if this.Windows != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Windows); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Windows", err)
		}
	}
	if this.Macos != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Macos); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Macos", err)
		}
	}
	if this.Linux != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Linux); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Linux", err)
		}
	}
	return nil
}
func (this *SupportedPlatformsCloudWorkerConfiguration) Validate() error {
	if this.Linux != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Linux); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Linux", err)
		}
	}
	return nil
}
func (this *SupportedPlatformsClientsUploadConfiguration) Validate() error {
	if this.Windows != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Windows); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Windows", err)
		}
	}
	if this.Macos != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Macos); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Macos", err)
		}
	}
	if this.Linux != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Linux); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Linux", err)
		}
	}
	return nil
}
func (this *ClientUploadConfiguration) Validate() error {
	if this.LocalBuildDirectory == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("LocalBuildDirectory", fmt.Errorf(`value '%v' must not be an empty string`, this.LocalBuildDirectory))
	}
	return nil
}
func (this *LocalConfiguration) Validate() error {
	if this.LocalBuildDirectory == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("LocalBuildDirectory", fmt.Errorf(`value '%v' must not be an empty string`, this.LocalBuildDirectory))
	}
	if this.Command == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Command", fmt.Errorf(`value '%v' must not be an empty string`, this.Command))
	}
	if this.ExposedPorts != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ExposedPorts); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ExposedPorts", err)
		}
	}
	return nil
}
func (this *CloudConfiguration) Validate() error {
	if this.LocalBuildDirectory == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("LocalBuildDirectory", fmt.Errorf(`value '%v' must not be an empty string`, this.LocalBuildDirectory))
	}
	if this.Command == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Command", fmt.Errorf(`value '%v' must not be an empty string`, this.Command))
	}
	if this.ExposedPorts != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ExposedPorts); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ExposedPorts", err)
		}
	}
	if this.ContainerConfig != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ContainerConfig); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ContainerConfig", err)
		}
	}
	return nil
}
func (this *ContainerConfig) Validate() error {
	return nil
}
func (this *ExposedPort) Validate() error {
	if !(this.NumberOfTcpPorts < 10) {
		return github_com_mwitkow_go_proto_validators.FieldError("NumberOfTcpPorts", fmt.Errorf(`value '%v' must be less than '10'`, this.NumberOfTcpPorts))
	}
	if !(this.NumberOfUdpPorts < 10) {
		return github_com_mwitkow_go_proto_validators.FieldError("NumberOfUdpPorts", fmt.Errorf(`value '%v' must be less than '10'`, this.NumberOfUdpPorts))
	}
	return nil
}
