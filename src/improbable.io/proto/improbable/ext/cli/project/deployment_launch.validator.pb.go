// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/ext/cli/project/deployment_launch.proto

package improbable_ext_cli_project

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	_ "improbable.io/proto/improbable/platform/deployment"
	math "math"
	regexp "regexp"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

var _regex_DeploymentLaunchConfiguration_Template = regexp.MustCompile(`^[a-zA-Z0-9_]{1,}$`)

func (this *DeploymentLaunchConfiguration) Validate() error {
	if !_regex_DeploymentLaunchConfiguration_Template.MatchString(this.Template) {
		return github_com_mwitkow_go_proto_validators.FieldError("Template", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-zA-Z0-9_]{1,}$"`, this.Template))
	}
	if nil == this.DimensionsInWorldUnits {
		return github_com_mwitkow_go_proto_validators.FieldError("DimensionsInWorldUnits", fmt.Errorf("message must exist"))
	}
	if this.DimensionsInWorldUnits != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.DimensionsInWorldUnits); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("DimensionsInWorldUnits", err)
		}
	}
	if this.LoadBalancing != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.LoadBalancing); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("LoadBalancing", err)
		}
	}
	if this.Snapshot != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Snapshot); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Snapshot", err)
		}
	}
	for _, item := range this.RuntimeFlags {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("RuntimeFlags", err)
			}
		}
	}
	for _, item := range this.WorkerFlags {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("WorkerFlags", err)
			}
		}
	}
	return nil
}
func (this *Dimensions) Validate() error {
	if !(this.X > 0) {
		return github_com_mwitkow_go_proto_validators.FieldError("X", fmt.Errorf(`value '%v' must be greater than '0'`, this.X))
	}
	if !(this.Z > 0) {
		return github_com_mwitkow_go_proto_validators.FieldError("Z", fmt.Errorf(`value '%v' must be greater than '0'`, this.Z))
	}
	return nil
}
func (this *SnapshotsConfiguration) Validate() error {
	if !(this.TakeSnapshotIntervalSeconds > -1) {
		return github_com_mwitkow_go_proto_validators.FieldError("TakeSnapshotIntervalSeconds", fmt.Errorf(`value '%v' must be greater than '-1'`, this.TakeSnapshotIntervalSeconds))
	}
	return nil
}
func (this *WorkerFlags) Validate() error {
	if this.WorkerType == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("WorkerType", fmt.Errorf(`value '%v' must not be an empty string`, this.WorkerType))
	}
	for _, item := range this.Flags {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Flags", err)
			}
		}
	}
	return nil
}
