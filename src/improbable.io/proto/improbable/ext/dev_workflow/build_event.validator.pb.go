// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/ext/dev_workflow/build_event.proto

package improbable_ext_dev_workflow

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *Build) Validate() error {
	return nil
}
func (this *Job) Validate() error {
	return nil
}
func (this *BuildEvent) Validate() error {
	if this.Build != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Build); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Build", err)
		}
	}
	if this.Job != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Job); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Job", err)
		}
	}
	if this.FiredAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.FiredAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("FiredAt", err)
		}
	}
	return nil
}
func (this *BuildEventList) Validate() error {
	for _, item := range this.Events {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Events", err)
			}
		}
	}
	return nil
}
