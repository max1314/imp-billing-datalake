// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/int/email/email.proto

package improbable_int_email

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	math "math"
	regexp "regexp"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

var _regex_Identity_Address = regexp.MustCompile(`^[^[:cntrl:] ,:;<>@"'()\[\]{}]{0,63}@[[:alnum:].-]{2,63}$`)

func (this *Identity) Validate() error {
	if !_regex_Identity_Address.MatchString(this.Address) {
		return github_com_mwitkow_go_proto_validators.FieldError("Address", fmt.Errorf(`value '%v' must be a string conforming to regex "^[^[:cntrl:] ,:;<>@\"'()\\[\\]{}]{0,63}@[[:alnum:].-]{2,63}$"`, this.Address))
	}
	return nil
}

var _regex_Body_Content = regexp.MustCompile(`.+`)

func (this *Body) Validate() error {
	if !_regex_Body_Content.MatchString(this.Content) {
		return github_com_mwitkow_go_proto_validators.FieldError("Content", fmt.Errorf(`value '%v' must be a string conforming to regex ".+"`, this.Content))
	}
	return nil
}
func (this *Email) Validate() error {
	if nil == this.From {
		return github_com_mwitkow_go_proto_validators.FieldError("From", fmt.Errorf("message must exist"))
	}
	if this.From != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.From); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("From", err)
		}
	}
	if nil == this.To {
		return github_com_mwitkow_go_proto_validators.FieldError("To", fmt.Errorf("message must exist"))
	}
	if this.To != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.To); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("To", err)
		}
	}
	if nil == this.Body {
		return github_com_mwitkow_go_proto_validators.FieldError("Body", fmt.Errorf("message must exist"))
	}
	if this.Body != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Body); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Body", err)
		}
	}
	return nil
}
func (this *SendRequest) Validate() error {
	if nil == this.Email {
		return github_com_mwitkow_go_proto_validators.FieldError("Email", fmt.Errorf("message must exist"))
	}
	if this.Email != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Email); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Email", err)
		}
	}
	return nil
}
func (this *SendResponse) Validate() error {
	return nil
}
