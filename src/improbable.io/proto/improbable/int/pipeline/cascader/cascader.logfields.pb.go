// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/int/pipeline/cascader/cascader.proto

package improbable_int_pipeline_cascader

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	github_com_improbable_io_go_proto_logfields "github.com/improbable-io/go-proto-logfields"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *GitBranch) LogFields() map[string]string {
	return map[string]string{}
}

func (this *GitBranch) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *GitRef) LogFields() map[string]string {
	return map[string]string{}
}

func (this *GitRef) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *CascadingMergeStep) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	targetBranchFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.TargetBranch)
	hasInner = hasInner || len(targetBranchFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range targetBranchFields {
		res[k] = v
	}
	return res
}

func (this *CascadingMergeStep) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.TargetBranch, dst)
}

func (this *CascadingMergeRequest) LogFields() map[string]string {
	return map[string]string{}
}

func (this *CascadingMergeRequest) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *CascadingMergeResponseV2) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	conflictingBranchFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.ConflictingBranch)
	hasInner = hasInner || len(conflictingBranchFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range conflictingBranchFields {
		res[k] = v
	}
	return res
}

func (this *CascadingMergeResponseV2) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.ConflictingBranch, dst)
}

func (this *ValidateReleaseBranchRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	releaseBranchFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.ReleaseBranch)
	hasInner = hasInner || len(releaseBranchFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range releaseBranchFields {
		res[k] = v
	}
	return res
}

func (this *ValidateReleaseBranchRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.ReleaseBranch, dst)
}

func (this *ValidateReleaseBranchResponse) LogFields() map[string]string {
	return map[string]string{}
}

func (this *ValidateReleaseBranchResponse) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *CreateReleaseBranchRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	newBranchFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.NewBranch)
	hasInner = hasInner || len(newBranchFields) > 0
	sourceRefFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.SourceRef)
	hasInner = hasInner || len(sourceRefFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range newBranchFields {
		res[k] = v
	}
	for k, v := range sourceRefFields {
		res[k] = v
	}
	return res
}

func (this *CreateReleaseBranchRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.NewBranch, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.SourceRef, dst)
}

func (this *CreateReleaseBranchResponse) LogFields() map[string]string {
	return map[string]string{}
}

func (this *CreateReleaseBranchResponse) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *DeleteReleaseBranchRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	branchFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Branch)
	hasInner = hasInner || len(branchFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range branchFields {
		res[k] = v
	}
	return res
}

func (this *DeleteReleaseBranchRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Branch, dst)
}

func (this *DeleteReleaseBranchResponse) LogFields() map[string]string {
	return map[string]string{}
}

func (this *DeleteReleaseBranchResponse) ExtractRequestFields(dst map[string]interface{}) {
}
