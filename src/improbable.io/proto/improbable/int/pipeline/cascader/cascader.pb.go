// Code generated by protoc-gen-go. DO NOT EDIT.
// source: improbable/int/pipeline/cascader/cascader.proto

package improbable_int_pipeline_cascader

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MergeStatus int32

const (
	MergeStatus_UNKNOWN_MERGE_STATUS MergeStatus = 0
	MergeStatus_SUCCESS              MergeStatus = 1
	MergeStatus_CONFLICT             MergeStatus = 2
	MergeStatus_SKIPPED              MergeStatus = 3
)

var MergeStatus_name = map[int32]string{
	0: "UNKNOWN_MERGE_STATUS",
	1: "SUCCESS",
	2: "CONFLICT",
	3: "SKIPPED",
}

var MergeStatus_value = map[string]int32{
	"UNKNOWN_MERGE_STATUS": 0,
	"SUCCESS":              1,
	"CONFLICT":             2,
	"SKIPPED":              3,
}

func (x MergeStatus) String() string {
	return proto.EnumName(MergeStatus_name, int32(x))
}

func (MergeStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5185142b2343c9bb, []int{0}
}

type CascadeStatus int32

const (
	CascadeStatus_ERROR    CascadeStatus = 0
	CascadeStatus_ALLOWED  CascadeStatus = 1
	CascadeStatus_REJECTED CascadeStatus = 2
)

var CascadeStatus_name = map[int32]string{
	0: "ERROR",
	1: "ALLOWED",
	2: "REJECTED",
}

var CascadeStatus_value = map[string]int32{
	"ERROR":    0,
	"ALLOWED":  1,
	"REJECTED": 2,
}

func (x CascadeStatus) String() string {
	return proto.EnumName(CascadeStatus_name, int32(x))
}

func (CascadeStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5185142b2343c9bb, []int{1}
}

type GitBranch struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GitBranch) Reset()         { *m = GitBranch{} }
func (m *GitBranch) String() string { return proto.CompactTextString(m) }
func (*GitBranch) ProtoMessage()    {}
func (*GitBranch) Descriptor() ([]byte, []int) {
	return fileDescriptor_5185142b2343c9bb, []int{0}
}

func (m *GitBranch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GitBranch.Unmarshal(m, b)
}
func (m *GitBranch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GitBranch.Marshal(b, m, deterministic)
}
func (m *GitBranch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GitBranch.Merge(m, src)
}
func (m *GitBranch) XXX_Size() int {
	return xxx_messageInfo_GitBranch.Size(m)
}
func (m *GitBranch) XXX_DiscardUnknown() {
	xxx_messageInfo_GitBranch.DiscardUnknown(m)
}

var xxx_messageInfo_GitBranch proto.InternalMessageInfo

func (m *GitBranch) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GitRef struct {
	Ref                  string   `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GitRef) Reset()         { *m = GitRef{} }
func (m *GitRef) String() string { return proto.CompactTextString(m) }
func (*GitRef) ProtoMessage()    {}
func (*GitRef) Descriptor() ([]byte, []int) {
	return fileDescriptor_5185142b2343c9bb, []int{1}
}

func (m *GitRef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GitRef.Unmarshal(m, b)
}
func (m *GitRef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GitRef.Marshal(b, m, deterministic)
}
func (m *GitRef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GitRef.Merge(m, src)
}
func (m *GitRef) XXX_Size() int {
	return xxx_messageInfo_GitRef.Size(m)
}
func (m *GitRef) XXX_DiscardUnknown() {
	xxx_messageInfo_GitRef.DiscardUnknown(m)
}

var xxx_messageInfo_GitRef proto.InternalMessageInfo

func (m *GitRef) GetRef() string {
	if m != nil {
		return m.Ref
	}
	return ""
}

type CascadingMergeStep struct {
	TargetBranch         *GitBranch  `protobuf:"bytes,1,opt,name=target_branch,json=targetBranch,proto3" json:"target_branch,omitempty"`
	Status               MergeStatus `protobuf:"varint,2,opt,name=status,proto3,enum=improbable.int.pipeline.cascader.MergeStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CascadingMergeStep) Reset()         { *m = CascadingMergeStep{} }
func (m *CascadingMergeStep) String() string { return proto.CompactTextString(m) }
func (*CascadingMergeStep) ProtoMessage()    {}
func (*CascadingMergeStep) Descriptor() ([]byte, []int) {
	return fileDescriptor_5185142b2343c9bb, []int{2}
}

func (m *CascadingMergeStep) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CascadingMergeStep.Unmarshal(m, b)
}
func (m *CascadingMergeStep) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CascadingMergeStep.Marshal(b, m, deterministic)
}
func (m *CascadingMergeStep) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CascadingMergeStep.Merge(m, src)
}
func (m *CascadingMergeStep) XXX_Size() int {
	return xxx_messageInfo_CascadingMergeStep.Size(m)
}
func (m *CascadingMergeStep) XXX_DiscardUnknown() {
	xxx_messageInfo_CascadingMergeStep.DiscardUnknown(m)
}

var xxx_messageInfo_CascadingMergeStep proto.InternalMessageInfo

func (m *CascadingMergeStep) GetTargetBranch() *GitBranch {
	if m != nil {
		return m.TargetBranch
	}
	return nil
}

func (m *CascadingMergeStep) GetStatus() MergeStatus {
	if m != nil {
		return m.Status
	}
	return MergeStatus_UNKNOWN_MERGE_STATUS
}

type CascadingMergeRequest struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	DryRun               bool     `protobuf:"varint,2,opt,name=dry_run,json=dryRun,proto3" json:"dry_run,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CascadingMergeRequest) Reset()         { *m = CascadingMergeRequest{} }
func (m *CascadingMergeRequest) String() string { return proto.CompactTextString(m) }
func (*CascadingMergeRequest) ProtoMessage()    {}
func (*CascadingMergeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5185142b2343c9bb, []int{3}
}

func (m *CascadingMergeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CascadingMergeRequest.Unmarshal(m, b)
}
func (m *CascadingMergeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CascadingMergeRequest.Marshal(b, m, deterministic)
}
func (m *CascadingMergeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CascadingMergeRequest.Merge(m, src)
}
func (m *CascadingMergeRequest) XXX_Size() int {
	return xxx_messageInfo_CascadingMergeRequest.Size(m)
}
func (m *CascadingMergeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CascadingMergeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CascadingMergeRequest proto.InternalMessageInfo

func (m *CascadingMergeRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *CascadingMergeRequest) GetDryRun() bool {
	if m != nil {
		return m.DryRun
	}
	return false
}

type CascadingMergeResponseV2 struct {
	Status               CascadeStatus         `protobuf:"varint,1,opt,name=status,proto3,enum=improbable.int.pipeline.cascader.CascadeStatus" json:"status,omitempty"`
	Steps                []*CascadingMergeStep `protobuf:"bytes,2,rep,name=steps,proto3" json:"steps,omitempty"`
	ConflictingBranch    *GitBranch            `protobuf:"bytes,3,opt,name=conflicting_branch,json=conflictingBranch,proto3" json:"conflicting_branch,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CascadingMergeResponseV2) Reset()         { *m = CascadingMergeResponseV2{} }
func (m *CascadingMergeResponseV2) String() string { return proto.CompactTextString(m) }
func (*CascadingMergeResponseV2) ProtoMessage()    {}
func (*CascadingMergeResponseV2) Descriptor() ([]byte, []int) {
	return fileDescriptor_5185142b2343c9bb, []int{4}
}

func (m *CascadingMergeResponseV2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CascadingMergeResponseV2.Unmarshal(m, b)
}
func (m *CascadingMergeResponseV2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CascadingMergeResponseV2.Marshal(b, m, deterministic)
}
func (m *CascadingMergeResponseV2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CascadingMergeResponseV2.Merge(m, src)
}
func (m *CascadingMergeResponseV2) XXX_Size() int {
	return xxx_messageInfo_CascadingMergeResponseV2.Size(m)
}
func (m *CascadingMergeResponseV2) XXX_DiscardUnknown() {
	xxx_messageInfo_CascadingMergeResponseV2.DiscardUnknown(m)
}

var xxx_messageInfo_CascadingMergeResponseV2 proto.InternalMessageInfo

func (m *CascadingMergeResponseV2) GetStatus() CascadeStatus {
	if m != nil {
		return m.Status
	}
	return CascadeStatus_ERROR
}

func (m *CascadingMergeResponseV2) GetSteps() []*CascadingMergeStep {
	if m != nil {
		return m.Steps
	}
	return nil
}

func (m *CascadingMergeResponseV2) GetConflictingBranch() *GitBranch {
	if m != nil {
		return m.ConflictingBranch
	}
	return nil
}

type ValidateReleaseBranchRequest struct {
	ReleaseBranch        *GitBranch `protobuf:"bytes,1,opt,name=release_branch,json=releaseBranch,proto3" json:"release_branch,omitempty"`
	DeleteIfInvalid      bool       `protobuf:"varint,2,opt,name=delete_if_invalid,json=deleteIfInvalid,proto3" json:"delete_if_invalid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ValidateReleaseBranchRequest) Reset()         { *m = ValidateReleaseBranchRequest{} }
func (m *ValidateReleaseBranchRequest) String() string { return proto.CompactTextString(m) }
func (*ValidateReleaseBranchRequest) ProtoMessage()    {}
func (*ValidateReleaseBranchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5185142b2343c9bb, []int{5}
}

func (m *ValidateReleaseBranchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateReleaseBranchRequest.Unmarshal(m, b)
}
func (m *ValidateReleaseBranchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateReleaseBranchRequest.Marshal(b, m, deterministic)
}
func (m *ValidateReleaseBranchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateReleaseBranchRequest.Merge(m, src)
}
func (m *ValidateReleaseBranchRequest) XXX_Size() int {
	return xxx_messageInfo_ValidateReleaseBranchRequest.Size(m)
}
func (m *ValidateReleaseBranchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateReleaseBranchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateReleaseBranchRequest proto.InternalMessageInfo

func (m *ValidateReleaseBranchRequest) GetReleaseBranch() *GitBranch {
	if m != nil {
		return m.ReleaseBranch
	}
	return nil
}

func (m *ValidateReleaseBranchRequest) GetDeleteIfInvalid() bool {
	if m != nil {
		return m.DeleteIfInvalid
	}
	return false
}

type ValidateReleaseBranchResponse struct {
	IsValid              bool     `protobuf:"varint,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	WasDeleted           bool     `protobuf:"varint,2,opt,name=was_deleted,json=wasDeleted,proto3" json:"was_deleted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidateReleaseBranchResponse) Reset()         { *m = ValidateReleaseBranchResponse{} }
func (m *ValidateReleaseBranchResponse) String() string { return proto.CompactTextString(m) }
func (*ValidateReleaseBranchResponse) ProtoMessage()    {}
func (*ValidateReleaseBranchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5185142b2343c9bb, []int{6}
}

func (m *ValidateReleaseBranchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateReleaseBranchResponse.Unmarshal(m, b)
}
func (m *ValidateReleaseBranchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateReleaseBranchResponse.Marshal(b, m, deterministic)
}
func (m *ValidateReleaseBranchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateReleaseBranchResponse.Merge(m, src)
}
func (m *ValidateReleaseBranchResponse) XXX_Size() int {
	return xxx_messageInfo_ValidateReleaseBranchResponse.Size(m)
}
func (m *ValidateReleaseBranchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateReleaseBranchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateReleaseBranchResponse proto.InternalMessageInfo

func (m *ValidateReleaseBranchResponse) GetIsValid() bool {
	if m != nil {
		return m.IsValid
	}
	return false
}

func (m *ValidateReleaseBranchResponse) GetWasDeleted() bool {
	if m != nil {
		return m.WasDeleted
	}
	return false
}

type CreateReleaseBranchRequest struct {
	NewBranch            *GitBranch `protobuf:"bytes,1,opt,name=new_branch,json=newBranch,proto3" json:"new_branch,omitempty"`
	SourceRef            *GitRef    `protobuf:"bytes,2,opt,name=source_ref,json=sourceRef,proto3" json:"source_ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CreateReleaseBranchRequest) Reset()         { *m = CreateReleaseBranchRequest{} }
func (m *CreateReleaseBranchRequest) String() string { return proto.CompactTextString(m) }
func (*CreateReleaseBranchRequest) ProtoMessage()    {}
func (*CreateReleaseBranchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5185142b2343c9bb, []int{7}
}

func (m *CreateReleaseBranchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateReleaseBranchRequest.Unmarshal(m, b)
}
func (m *CreateReleaseBranchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateReleaseBranchRequest.Marshal(b, m, deterministic)
}
func (m *CreateReleaseBranchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateReleaseBranchRequest.Merge(m, src)
}
func (m *CreateReleaseBranchRequest) XXX_Size() int {
	return xxx_messageInfo_CreateReleaseBranchRequest.Size(m)
}
func (m *CreateReleaseBranchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateReleaseBranchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateReleaseBranchRequest proto.InternalMessageInfo

func (m *CreateReleaseBranchRequest) GetNewBranch() *GitBranch {
	if m != nil {
		return m.NewBranch
	}
	return nil
}

func (m *CreateReleaseBranchRequest) GetSourceRef() *GitRef {
	if m != nil {
		return m.SourceRef
	}
	return nil
}

type CreateReleaseBranchResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateReleaseBranchResponse) Reset()         { *m = CreateReleaseBranchResponse{} }
func (m *CreateReleaseBranchResponse) String() string { return proto.CompactTextString(m) }
func (*CreateReleaseBranchResponse) ProtoMessage()    {}
func (*CreateReleaseBranchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5185142b2343c9bb, []int{8}
}

func (m *CreateReleaseBranchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateReleaseBranchResponse.Unmarshal(m, b)
}
func (m *CreateReleaseBranchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateReleaseBranchResponse.Marshal(b, m, deterministic)
}
func (m *CreateReleaseBranchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateReleaseBranchResponse.Merge(m, src)
}
func (m *CreateReleaseBranchResponse) XXX_Size() int {
	return xxx_messageInfo_CreateReleaseBranchResponse.Size(m)
}
func (m *CreateReleaseBranchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateReleaseBranchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateReleaseBranchResponse proto.InternalMessageInfo

type DeleteReleaseBranchRequest struct {
	Branch               *GitBranch `protobuf:"bytes,1,opt,name=branch,proto3" json:"branch,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DeleteReleaseBranchRequest) Reset()         { *m = DeleteReleaseBranchRequest{} }
func (m *DeleteReleaseBranchRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteReleaseBranchRequest) ProtoMessage()    {}
func (*DeleteReleaseBranchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5185142b2343c9bb, []int{9}
}

func (m *DeleteReleaseBranchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteReleaseBranchRequest.Unmarshal(m, b)
}
func (m *DeleteReleaseBranchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteReleaseBranchRequest.Marshal(b, m, deterministic)
}
func (m *DeleteReleaseBranchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteReleaseBranchRequest.Merge(m, src)
}
func (m *DeleteReleaseBranchRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteReleaseBranchRequest.Size(m)
}
func (m *DeleteReleaseBranchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteReleaseBranchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteReleaseBranchRequest proto.InternalMessageInfo

func (m *DeleteReleaseBranchRequest) GetBranch() *GitBranch {
	if m != nil {
		return m.Branch
	}
	return nil
}

type DeleteReleaseBranchResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteReleaseBranchResponse) Reset()         { *m = DeleteReleaseBranchResponse{} }
func (m *DeleteReleaseBranchResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteReleaseBranchResponse) ProtoMessage()    {}
func (*DeleteReleaseBranchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5185142b2343c9bb, []int{10}
}

func (m *DeleteReleaseBranchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteReleaseBranchResponse.Unmarshal(m, b)
}
func (m *DeleteReleaseBranchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteReleaseBranchResponse.Marshal(b, m, deterministic)
}
func (m *DeleteReleaseBranchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteReleaseBranchResponse.Merge(m, src)
}
func (m *DeleteReleaseBranchResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteReleaseBranchResponse.Size(m)
}
func (m *DeleteReleaseBranchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteReleaseBranchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteReleaseBranchResponse proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("improbable.int.pipeline.cascader.MergeStatus", MergeStatus_name, MergeStatus_value)
	proto.RegisterEnum("improbable.int.pipeline.cascader.CascadeStatus", CascadeStatus_name, CascadeStatus_value)
	proto.RegisterType((*GitBranch)(nil), "improbable.int.pipeline.cascader.GitBranch")
	proto.RegisterType((*GitRef)(nil), "improbable.int.pipeline.cascader.GitRef")
	proto.RegisterType((*CascadingMergeStep)(nil), "improbable.int.pipeline.cascader.CascadingMergeStep")
	proto.RegisterType((*CascadingMergeRequest)(nil), "improbable.int.pipeline.cascader.CascadingMergeRequest")
	proto.RegisterType((*CascadingMergeResponseV2)(nil), "improbable.int.pipeline.cascader.CascadingMergeResponseV2")
	proto.RegisterType((*ValidateReleaseBranchRequest)(nil), "improbable.int.pipeline.cascader.ValidateReleaseBranchRequest")
	proto.RegisterType((*ValidateReleaseBranchResponse)(nil), "improbable.int.pipeline.cascader.ValidateReleaseBranchResponse")
	proto.RegisterType((*CreateReleaseBranchRequest)(nil), "improbable.int.pipeline.cascader.CreateReleaseBranchRequest")
	proto.RegisterType((*CreateReleaseBranchResponse)(nil), "improbable.int.pipeline.cascader.CreateReleaseBranchResponse")
	proto.RegisterType((*DeleteReleaseBranchRequest)(nil), "improbable.int.pipeline.cascader.DeleteReleaseBranchRequest")
	proto.RegisterType((*DeleteReleaseBranchResponse)(nil), "improbable.int.pipeline.cascader.DeleteReleaseBranchResponse")
}

func init() {
	proto.RegisterFile("improbable/int/pipeline/cascader/cascader.proto", fileDescriptor_5185142b2343c9bb)
}

var fileDescriptor_5185142b2343c9bb = []byte{
	// 740 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x95, 0xdd, 0x6e, 0xda, 0x48,
	0x14, 0xc7, 0x31, 0x24, 0x24, 0x1c, 0xf2, 0x41, 0x66, 0x37, 0x5a, 0x96, 0xdd, 0x28, 0xc8, 0x57,
	0x28, 0xab, 0x60, 0x89, 0xfd, 0x92, 0x56, 0xbb, 0x5b, 0x25, 0xe0, 0x22, 0xf2, 0x01, 0xd1, 0x40,
	0x12, 0x29, 0xbd, 0xb0, 0x8c, 0x39, 0x90, 0x51, 0x8d, 0x4d, 0xc7, 0xe3, 0xa0, 0x3c, 0x42, 0xd5,
	0xdb, 0x5e, 0xf5, 0x01, 0x7a, 0xd7, 0x87, 0xe8, 0x93, 0x54, 0xea, 0x55, 0x1f, 0xa3, 0xc2, 0x63,
	0x08, 0x44, 0x10, 0x48, 0xda, 0xbb, 0xd1, 0x8c, 0xff, 0xbf, 0xf9, 0xff, 0xe7, 0x9c, 0x03, 0xa0,
	0xb1, 0x6e, 0x8f, 0xbb, 0x4d, 0xb3, 0x69, 0xa3, 0xc6, 0x1c, 0xa1, 0xf5, 0x58, 0x0f, 0x6d, 0xe6,
	0xa0, 0x66, 0x99, 0x9e, 0x65, 0xb6, 0x90, 0x8f, 0x16, 0xf9, 0x1e, 0x77, 0x85, 0x4b, 0xb2, 0x77,
	0x82, 0x3c, 0x73, 0x44, 0x7e, 0x28, 0xc8, 0x0f, 0xbf, 0xcb, 0xfc, 0xd5, 0x61, 0xe2, 0xda, 0x6f,
	0xe6, 0x2d, 0xb7, 0xab, 0x75, 0xfb, 0x4c, 0xbc, 0x74, 0xfb, 0x5a, 0xc7, 0xdd, 0x0f, 0xe4, 0xfb,
	0x37, 0xa6, 0xcd, 0x5a, 0xa6, 0x70, 0xb9, 0xa7, 0x8d, 0x96, 0x92, 0xac, 0xee, 0x42, 0xa2, 0xcc,
	0xc4, 0x21, 0x37, 0x1d, 0xeb, 0x9a, 0x10, 0x58, 0x72, 0xcc, 0x2e, 0xa6, 0x95, 0xac, 0x92, 0x4b,
	0xd0, 0x60, 0xad, 0x66, 0x20, 0x5e, 0x66, 0x82, 0x62, 0x9b, 0xa4, 0x20, 0xc6, 0xb1, 0x1d, 0x1e,
	0x0e, 0x96, 0xea, 0x07, 0x05, 0x48, 0x31, 0x70, 0xc0, 0x9c, 0xce, 0x29, 0xf2, 0x0e, 0xd6, 0x05,
	0xf6, 0xc8, 0x19, 0xac, 0x0b, 0x93, 0x77, 0x50, 0x18, 0xcd, 0x80, 0x1b, 0x48, 0x92, 0x85, 0xdf,
	0xf2, 0xf3, 0x52, 0xe4, 0x47, 0x56, 0xe8, 0x9a, 0x24, 0x84, 0xc6, 0x74, 0x88, 0x7b, 0xc2, 0x14,
	0xbe, 0x97, 0x8e, 0x66, 0x95, 0xdc, 0x46, 0x61, 0x7f, 0x3e, 0x2a, 0xb4, 0x33, 0x10, 0xd1, 0x50,
	0xac, 0x1e, 0xc2, 0xf6, 0xa4, 0x5d, 0x8a, 0xaf, 0x7c, 0xf4, 0xc4, 0x20, 0x9a, 0xcf, 0xed, 0x61,
	0x34, 0x9f, 0xdb, 0xe4, 0x27, 0x58, 0x69, 0xf1, 0x5b, 0x83, 0xfb, 0x4e, 0x70, 0xe5, 0x2a, 0x8d,
	0xb7, 0xf8, 0x2d, 0xf5, 0x1d, 0xf5, 0x4d, 0x14, 0xd2, 0xf7, 0x21, 0x5e, 0xcf, 0x75, 0x3c, 0xbc,
	0x28, 0x90, 0xf2, 0xc8, 0xa7, 0x12, 0xf8, 0xd4, 0xe6, 0xfb, 0x94, 0xac, 0x7b, 0x4e, 0xc9, 0x11,
	0x2c, 0x7b, 0x02, 0x7b, 0x83, 0xbc, 0xb1, 0x5c, 0xb2, 0xf0, 0xc7, 0xa2, 0x9c, 0xf1, 0x3a, 0x50,
	0x89, 0x20, 0x57, 0x40, 0x2c, 0xd7, 0x69, 0xdb, 0xcc, 0x12, 0xcc, 0xe9, 0x0c, 0x6b, 0x12, 0x7b,
	0x7c, 0x4d, 0xb6, 0xc6, 0x30, 0x72, 0x4b, 0x7d, 0xaf, 0xc0, 0xaf, 0x17, 0xb2, 0xa5, 0x90, 0xa2,
	0x8d, 0xa6, 0x87, 0xe1, 0xc7, 0xe1, 0xcb, 0x5e, 0xc1, 0x06, 0x97, 0xfb, 0x4f, 0x6f, 0x86, 0xc3,
	0xf8, 0xe7, 0x4f, 0xbb, 0xd1, 0xac, 0x42, 0xd7, 0xf9, 0xf8, 0x15, 0x64, 0x0f, 0xb6, 0x5a, 0x68,
	0xa3, 0x40, 0x83, 0xb5, 0x0d, 0xe6, 0x04, 0xad, 0x1d, 0x56, 0x6b, 0x53, 0x1e, 0x54, 0xda, 0x15,
	0xb9, 0xad, 0xbe, 0x80, 0x9d, 0x19, 0x3e, 0x65, 0xf1, 0xc8, 0xcf, 0xb0, 0xca, 0x3c, 0x43, 0x32,
	0x94, 0x80, 0xb1, 0xc2, 0xbc, 0x40, 0x42, 0x76, 0x21, 0xd9, 0x37, 0x3d, 0x43, 0x22, 0x87, 0x37,
	0x40, 0xdf, 0xf4, 0x4a, 0x72, 0x47, 0xfd, 0xa8, 0x40, 0xa6, 0xc8, 0x71, 0xd6, 0x1b, 0x50, 0x00,
	0x07, 0xfb, 0xdf, 0x21, 0x7f, 0xc2, 0xc1, 0x7e, 0x98, 0xbd, 0x06, 0xe0, 0xb9, 0x3e, 0xb7, 0xd0,
	0x18, 0xcc, 0x64, 0x34, 0x60, 0xe6, 0x16, 0x62, 0x52, 0x6c, 0xdf, 0x01, 0x25, 0x83, 0x62, 0x5b,
	0xdd, 0x81, 0x5f, 0xa6, 0x46, 0x90, 0xcf, 0xa3, 0x32, 0xc8, 0xc8, 0xb4, 0x53, 0x13, 0x1e, 0x43,
	0xfc, 0xdb, 0xd3, 0x85, 0x88, 0x81, 0x93, 0xa9, 0x57, 0x49, 0x27, 0x7b, 0x35, 0x48, 0x8e, 0xcd,
	0x36, 0x49, 0xc3, 0x8f, 0xe7, 0xd5, 0xe3, 0x6a, 0xed, 0xb2, 0x6a, 0x9c, 0xea, 0xb4, 0xac, 0x1b,
	0xf5, 0xc6, 0x41, 0xe3, 0xbc, 0x9e, 0x8a, 0x90, 0x24, 0xac, 0xd4, 0xcf, 0x8b, 0x45, 0xbd, 0x5e,
	0x4f, 0x29, 0x64, 0x0d, 0x56, 0x8b, 0xb5, 0xea, 0xf3, 0x93, 0x4a, 0xb1, 0x91, 0x8a, 0x06, 0x47,
	0xc7, 0x95, 0xb3, 0x33, 0xbd, 0x94, 0x8a, 0xed, 0xfd, 0x09, 0xeb, 0x13, 0x43, 0x48, 0x12, 0xb0,
	0xac, 0x53, 0x5a, 0xa3, 0x92, 0x71, 0x70, 0x72, 0x52, 0xbb, 0xd4, 0x4b, 0x92, 0x41, 0xf5, 0x23,
	0xbd, 0xd8, 0xd0, 0x4b, 0xa9, 0x68, 0xe1, 0xcb, 0x12, 0x6c, 0x86, 0x3a, 0x5e, 0x47, 0x7e, 0xc3,
	0x2c, 0x24, 0xaf, 0x15, 0x48, 0x4d, 0x0e, 0xe2, 0x45, 0x81, 0xfc, 0xfd, 0xd8, 0xe1, 0x0d, 0x5f,
	0x35, 0xf3, 0xcf, 0xe3, 0x85, 0xc3, 0x5f, 0x22, 0x35, 0x42, 0xde, 0x29, 0xb0, 0x3d, 0xb5, 0xe5,
	0xc9, 0xff, 0xf3, 0xb9, 0x0f, 0xcd, 0x74, 0xe6, 0xd9, 0x93, 0xf5, 0x61, 0x33, 0x45, 0xc8, 0x5b,
	0x05, 0x7e, 0x98, 0xd2, 0x6e, 0xe4, 0xdf, 0x05, 0x22, 0xcf, 0x1c, 0xb4, 0xcc, 0x7f, 0x4f, 0x54,
	0x4f, 0xd8, 0x9a, 0xd2, 0x7b, 0x8b, 0xd8, 0x9a, 0x3d, 0x1d, 0x8b, 0xd8, 0x7a, 0xa0, 0xe1, 0xd5,
	0x48, 0x33, 0x1e, 0xfc, 0x57, 0xff, 0xfe, 0x35, 0x00, 0x00, 0xff, 0xff, 0x95, 0xf2, 0x2e, 0x27,
	0x38, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CascaderServiceClient is the client API for CascaderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CascaderServiceClient interface {
	CascadingMergeV2(ctx context.Context, in *CascadingMergeRequest, opts ...grpc.CallOption) (*CascadingMergeResponseV2, error)
	ValidateReleaseBranch(ctx context.Context, in *ValidateReleaseBranchRequest, opts ...grpc.CallOption) (*ValidateReleaseBranchResponse, error)
	CreateReleaseBranch(ctx context.Context, in *CreateReleaseBranchRequest, opts ...grpc.CallOption) (*CreateReleaseBranchResponse, error)
	DeleteReleaseBranch(ctx context.Context, in *DeleteReleaseBranchRequest, opts ...grpc.CallOption) (*DeleteReleaseBranchResponse, error)
}

type cascaderServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCascaderServiceClient(cc grpc.ClientConnInterface) CascaderServiceClient {
	return &cascaderServiceClient{cc}
}

func (c *cascaderServiceClient) CascadingMergeV2(ctx context.Context, in *CascadingMergeRequest, opts ...grpc.CallOption) (*CascadingMergeResponseV2, error) {
	out := new(CascadingMergeResponseV2)
	err := c.cc.Invoke(ctx, "/improbable.int.pipeline.cascader.CascaderService/CascadingMergeV2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cascaderServiceClient) ValidateReleaseBranch(ctx context.Context, in *ValidateReleaseBranchRequest, opts ...grpc.CallOption) (*ValidateReleaseBranchResponse, error) {
	out := new(ValidateReleaseBranchResponse)
	err := c.cc.Invoke(ctx, "/improbable.int.pipeline.cascader.CascaderService/ValidateReleaseBranch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cascaderServiceClient) CreateReleaseBranch(ctx context.Context, in *CreateReleaseBranchRequest, opts ...grpc.CallOption) (*CreateReleaseBranchResponse, error) {
	out := new(CreateReleaseBranchResponse)
	err := c.cc.Invoke(ctx, "/improbable.int.pipeline.cascader.CascaderService/CreateReleaseBranch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cascaderServiceClient) DeleteReleaseBranch(ctx context.Context, in *DeleteReleaseBranchRequest, opts ...grpc.CallOption) (*DeleteReleaseBranchResponse, error) {
	out := new(DeleteReleaseBranchResponse)
	err := c.cc.Invoke(ctx, "/improbable.int.pipeline.cascader.CascaderService/DeleteReleaseBranch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CascaderServiceServer is the server API for CascaderService service.
type CascaderServiceServer interface {
	CascadingMergeV2(context.Context, *CascadingMergeRequest) (*CascadingMergeResponseV2, error)
	ValidateReleaseBranch(context.Context, *ValidateReleaseBranchRequest) (*ValidateReleaseBranchResponse, error)
	CreateReleaseBranch(context.Context, *CreateReleaseBranchRequest) (*CreateReleaseBranchResponse, error)
	DeleteReleaseBranch(context.Context, *DeleteReleaseBranchRequest) (*DeleteReleaseBranchResponse, error)
}

// UnimplementedCascaderServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCascaderServiceServer struct {
}

func (*UnimplementedCascaderServiceServer) CascadingMergeV2(ctx context.Context, req *CascadingMergeRequest) (*CascadingMergeResponseV2, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CascadingMergeV2 not implemented")
}
func (*UnimplementedCascaderServiceServer) ValidateReleaseBranch(ctx context.Context, req *ValidateReleaseBranchRequest) (*ValidateReleaseBranchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateReleaseBranch not implemented")
}
func (*UnimplementedCascaderServiceServer) CreateReleaseBranch(ctx context.Context, req *CreateReleaseBranchRequest) (*CreateReleaseBranchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateReleaseBranch not implemented")
}
func (*UnimplementedCascaderServiceServer) DeleteReleaseBranch(ctx context.Context, req *DeleteReleaseBranchRequest) (*DeleteReleaseBranchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteReleaseBranch not implemented")
}

func RegisterCascaderServiceServer(s *grpc.Server, srv CascaderServiceServer) {
	s.RegisterService(&_CascaderService_serviceDesc, srv)
}

func _CascaderService_CascadingMergeV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CascadingMergeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CascaderServiceServer).CascadingMergeV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.int.pipeline.cascader.CascaderService/CascadingMergeV2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CascaderServiceServer).CascadingMergeV2(ctx, req.(*CascadingMergeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CascaderService_ValidateReleaseBranch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateReleaseBranchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CascaderServiceServer).ValidateReleaseBranch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.int.pipeline.cascader.CascaderService/ValidateReleaseBranch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CascaderServiceServer).ValidateReleaseBranch(ctx, req.(*ValidateReleaseBranchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CascaderService_CreateReleaseBranch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateReleaseBranchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CascaderServiceServer).CreateReleaseBranch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.int.pipeline.cascader.CascaderService/CreateReleaseBranch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CascaderServiceServer).CreateReleaseBranch(ctx, req.(*CreateReleaseBranchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CascaderService_DeleteReleaseBranch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteReleaseBranchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CascaderServiceServer).DeleteReleaseBranch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.int.pipeline.cascader.CascaderService/DeleteReleaseBranch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CascaderServiceServer).DeleteReleaseBranch(ctx, req.(*DeleteReleaseBranchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CascaderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "improbable.int.pipeline.cascader.CascaderService",
	HandlerType: (*CascaderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CascadingMergeV2",
			Handler:    _CascaderService_CascadingMergeV2_Handler,
		},
		{
			MethodName: "ValidateReleaseBranch",
			Handler:    _CascaderService_ValidateReleaseBranch_Handler,
		},
		{
			MethodName: "CreateReleaseBranch",
			Handler:    _CascaderService_CreateReleaseBranch_Handler,
		},
		{
			MethodName: "DeleteReleaseBranch",
			Handler:    _CascaderService_DeleteReleaseBranch_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "improbable/int/pipeline/cascader/cascader.proto",
}
