// Code generated by protoc-gen-go. DO NOT EDIT.
// source: improbable/int/platform/experimentz/experimentz.proto

package improbable_int_platform_experimentz

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/mwitkow/go-proto-validators"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	experimentz "improbable.io/proto/infra/experimentz"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Revision struct {
	Experiment           *experimentz.Experiment `protobuf:"bytes,1,opt,name=experiment,proto3" json:"experiment,omitempty"`
	ModifiedBy           string                  `protobuf:"bytes,2,opt,name=modified_by,json=modifiedBy,proto3" json:"modified_by,omitempty"`
	TimeModified         *timestamp.Timestamp    `protobuf:"bytes,3,opt,name=time_modified,json=timeModified,proto3" json:"time_modified,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Revision) Reset()         { *m = Revision{} }
func (m *Revision) String() string { return proto.CompactTextString(m) }
func (*Revision) ProtoMessage()    {}
func (*Revision) Descriptor() ([]byte, []int) {
	return fileDescriptor_a6955141cef38721, []int{0}
}

func (m *Revision) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Revision.Unmarshal(m, b)
}
func (m *Revision) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Revision.Marshal(b, m, deterministic)
}
func (m *Revision) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Revision.Merge(m, src)
}
func (m *Revision) XXX_Size() int {
	return xxx_messageInfo_Revision.Size(m)
}
func (m *Revision) XXX_DiscardUnknown() {
	xxx_messageInfo_Revision.DiscardUnknown(m)
}

var xxx_messageInfo_Revision proto.InternalMessageInfo

func (m *Revision) GetExperiment() *experimentz.Experiment {
	if m != nil {
		return m.Experiment
	}
	return nil
}

func (m *Revision) GetModifiedBy() string {
	if m != nil {
		return m.ModifiedBy
	}
	return ""
}

func (m *Revision) GetTimeModified() *timestamp.Timestamp {
	if m != nil {
		return m.TimeModified
	}
	return nil
}

type ListExperimentsRequest struct {
	Environment          string   `protobuf:"bytes,1,opt,name=environment,proto3" json:"environment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListExperimentsRequest) Reset()         { *m = ListExperimentsRequest{} }
func (m *ListExperimentsRequest) String() string { return proto.CompactTextString(m) }
func (*ListExperimentsRequest) ProtoMessage()    {}
func (*ListExperimentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a6955141cef38721, []int{1}
}

func (m *ListExperimentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListExperimentsRequest.Unmarshal(m, b)
}
func (m *ListExperimentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListExperimentsRequest.Marshal(b, m, deterministic)
}
func (m *ListExperimentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListExperimentsRequest.Merge(m, src)
}
func (m *ListExperimentsRequest) XXX_Size() int {
	return xxx_messageInfo_ListExperimentsRequest.Size(m)
}
func (m *ListExperimentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListExperimentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListExperimentsRequest proto.InternalMessageInfo

func (m *ListExperimentsRequest) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

type ListExperimentsResponse struct {
	Experiments          []*experimentz.Experiment `protobuf:"bytes,1,rep,name=experiments,proto3" json:"experiments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ListExperimentsResponse) Reset()         { *m = ListExperimentsResponse{} }
func (m *ListExperimentsResponse) String() string { return proto.CompactTextString(m) }
func (*ListExperimentsResponse) ProtoMessage()    {}
func (*ListExperimentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a6955141cef38721, []int{2}
}

func (m *ListExperimentsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListExperimentsResponse.Unmarshal(m, b)
}
func (m *ListExperimentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListExperimentsResponse.Marshal(b, m, deterministic)
}
func (m *ListExperimentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListExperimentsResponse.Merge(m, src)
}
func (m *ListExperimentsResponse) XXX_Size() int {
	return xxx_messageInfo_ListExperimentsResponse.Size(m)
}
func (m *ListExperimentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListExperimentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListExperimentsResponse proto.InternalMessageInfo

func (m *ListExperimentsResponse) GetExperiments() []*experimentz.Experiment {
	if m != nil {
		return m.Experiments
	}
	return nil
}

type ListArchivedExperimentNamesRequest struct {
	Environment          string   `protobuf:"bytes,1,opt,name=environment,proto3" json:"environment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListArchivedExperimentNamesRequest) Reset()         { *m = ListArchivedExperimentNamesRequest{} }
func (m *ListArchivedExperimentNamesRequest) String() string { return proto.CompactTextString(m) }
func (*ListArchivedExperimentNamesRequest) ProtoMessage()    {}
func (*ListArchivedExperimentNamesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a6955141cef38721, []int{3}
}

func (m *ListArchivedExperimentNamesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListArchivedExperimentNamesRequest.Unmarshal(m, b)
}
func (m *ListArchivedExperimentNamesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListArchivedExperimentNamesRequest.Marshal(b, m, deterministic)
}
func (m *ListArchivedExperimentNamesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListArchivedExperimentNamesRequest.Merge(m, src)
}
func (m *ListArchivedExperimentNamesRequest) XXX_Size() int {
	return xxx_messageInfo_ListArchivedExperimentNamesRequest.Size(m)
}
func (m *ListArchivedExperimentNamesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListArchivedExperimentNamesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListArchivedExperimentNamesRequest proto.InternalMessageInfo

func (m *ListArchivedExperimentNamesRequest) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

type ListArchivedExperimentNamesResponse struct {
	ExperimentNames      []string `protobuf:"bytes,1,rep,name=experiment_names,json=experimentNames,proto3" json:"experiment_names,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListArchivedExperimentNamesResponse) Reset()         { *m = ListArchivedExperimentNamesResponse{} }
func (m *ListArchivedExperimentNamesResponse) String() string { return proto.CompactTextString(m) }
func (*ListArchivedExperimentNamesResponse) ProtoMessage()    {}
func (*ListArchivedExperimentNamesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a6955141cef38721, []int{4}
}

func (m *ListArchivedExperimentNamesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListArchivedExperimentNamesResponse.Unmarshal(m, b)
}
func (m *ListArchivedExperimentNamesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListArchivedExperimentNamesResponse.Marshal(b, m, deterministic)
}
func (m *ListArchivedExperimentNamesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListArchivedExperimentNamesResponse.Merge(m, src)
}
func (m *ListArchivedExperimentNamesResponse) XXX_Size() int {
	return xxx_messageInfo_ListArchivedExperimentNamesResponse.Size(m)
}
func (m *ListArchivedExperimentNamesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListArchivedExperimentNamesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListArchivedExperimentNamesResponse proto.InternalMessageInfo

func (m *ListArchivedExperimentNamesResponse) GetExperimentNames() []string {
	if m != nil {
		return m.ExperimentNames
	}
	return nil
}

type GetExperimentRequest struct {
	ExperimentName       string   `protobuf:"bytes,1,opt,name=experiment_name,json=experimentName,proto3" json:"experiment_name,omitempty"`
	Environment          string   `protobuf:"bytes,2,opt,name=environment,proto3" json:"environment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetExperimentRequest) Reset()         { *m = GetExperimentRequest{} }
func (m *GetExperimentRequest) String() string { return proto.CompactTextString(m) }
func (*GetExperimentRequest) ProtoMessage()    {}
func (*GetExperimentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a6955141cef38721, []int{5}
}

func (m *GetExperimentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetExperimentRequest.Unmarshal(m, b)
}
func (m *GetExperimentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetExperimentRequest.Marshal(b, m, deterministic)
}
func (m *GetExperimentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetExperimentRequest.Merge(m, src)
}
func (m *GetExperimentRequest) XXX_Size() int {
	return xxx_messageInfo_GetExperimentRequest.Size(m)
}
func (m *GetExperimentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetExperimentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetExperimentRequest proto.InternalMessageInfo

func (m *GetExperimentRequest) GetExperimentName() string {
	if m != nil {
		return m.ExperimentName
	}
	return ""
}

func (m *GetExperimentRequest) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

type GetExperimentResponse struct {
	Experiment           *experimentz.Experiment `protobuf:"bytes,1,opt,name=experiment,proto3" json:"experiment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *GetExperimentResponse) Reset()         { *m = GetExperimentResponse{} }
func (m *GetExperimentResponse) String() string { return proto.CompactTextString(m) }
func (*GetExperimentResponse) ProtoMessage()    {}
func (*GetExperimentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a6955141cef38721, []int{6}
}

func (m *GetExperimentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetExperimentResponse.Unmarshal(m, b)
}
func (m *GetExperimentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetExperimentResponse.Marshal(b, m, deterministic)
}
func (m *GetExperimentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetExperimentResponse.Merge(m, src)
}
func (m *GetExperimentResponse) XXX_Size() int {
	return xxx_messageInfo_GetExperimentResponse.Size(m)
}
func (m *GetExperimentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetExperimentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetExperimentResponse proto.InternalMessageInfo

func (m *GetExperimentResponse) GetExperiment() *experimentz.Experiment {
	if m != nil {
		return m.Experiment
	}
	return nil
}

type SetExperimentRequest struct {
	Experiment           *experimentz.Experiment `protobuf:"bytes,1,opt,name=experiment,proto3" json:"experiment,omitempty"`
	Environment          string                  `protobuf:"bytes,2,opt,name=environment,proto3" json:"environment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *SetExperimentRequest) Reset()         { *m = SetExperimentRequest{} }
func (m *SetExperimentRequest) String() string { return proto.CompactTextString(m) }
func (*SetExperimentRequest) ProtoMessage()    {}
func (*SetExperimentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a6955141cef38721, []int{7}
}

func (m *SetExperimentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetExperimentRequest.Unmarshal(m, b)
}
func (m *SetExperimentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetExperimentRequest.Marshal(b, m, deterministic)
}
func (m *SetExperimentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetExperimentRequest.Merge(m, src)
}
func (m *SetExperimentRequest) XXX_Size() int {
	return xxx_messageInfo_SetExperimentRequest.Size(m)
}
func (m *SetExperimentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetExperimentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetExperimentRequest proto.InternalMessageInfo

func (m *SetExperimentRequest) GetExperiment() *experimentz.Experiment {
	if m != nil {
		return m.Experiment
	}
	return nil
}

func (m *SetExperimentRequest) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

type SetExperimentResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetExperimentResponse) Reset()         { *m = SetExperimentResponse{} }
func (m *SetExperimentResponse) String() string { return proto.CompactTextString(m) }
func (*SetExperimentResponse) ProtoMessage()    {}
func (*SetExperimentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a6955141cef38721, []int{8}
}

func (m *SetExperimentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetExperimentResponse.Unmarshal(m, b)
}
func (m *SetExperimentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetExperimentResponse.Marshal(b, m, deterministic)
}
func (m *SetExperimentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetExperimentResponse.Merge(m, src)
}
func (m *SetExperimentResponse) XXX_Size() int {
	return xxx_messageInfo_SetExperimentResponse.Size(m)
}
func (m *SetExperimentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetExperimentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetExperimentResponse proto.InternalMessageInfo

type ArchiveExperimentRequest struct {
	ExperimentName       string   `protobuf:"bytes,1,opt,name=experiment_name,json=experimentName,proto3" json:"experiment_name,omitempty"`
	Environment          string   `protobuf:"bytes,2,opt,name=environment,proto3" json:"environment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArchiveExperimentRequest) Reset()         { *m = ArchiveExperimentRequest{} }
func (m *ArchiveExperimentRequest) String() string { return proto.CompactTextString(m) }
func (*ArchiveExperimentRequest) ProtoMessage()    {}
func (*ArchiveExperimentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a6955141cef38721, []int{9}
}

func (m *ArchiveExperimentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArchiveExperimentRequest.Unmarshal(m, b)
}
func (m *ArchiveExperimentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArchiveExperimentRequest.Marshal(b, m, deterministic)
}
func (m *ArchiveExperimentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArchiveExperimentRequest.Merge(m, src)
}
func (m *ArchiveExperimentRequest) XXX_Size() int {
	return xxx_messageInfo_ArchiveExperimentRequest.Size(m)
}
func (m *ArchiveExperimentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ArchiveExperimentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ArchiveExperimentRequest proto.InternalMessageInfo

func (m *ArchiveExperimentRequest) GetExperimentName() string {
	if m != nil {
		return m.ExperimentName
	}
	return ""
}

func (m *ArchiveExperimentRequest) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

type ArchiveExperimentResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArchiveExperimentResponse) Reset()         { *m = ArchiveExperimentResponse{} }
func (m *ArchiveExperimentResponse) String() string { return proto.CompactTextString(m) }
func (*ArchiveExperimentResponse) ProtoMessage()    {}
func (*ArchiveExperimentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a6955141cef38721, []int{10}
}

func (m *ArchiveExperimentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArchiveExperimentResponse.Unmarshal(m, b)
}
func (m *ArchiveExperimentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArchiveExperimentResponse.Marshal(b, m, deterministic)
}
func (m *ArchiveExperimentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArchiveExperimentResponse.Merge(m, src)
}
func (m *ArchiveExperimentResponse) XXX_Size() int {
	return xxx_messageInfo_ArchiveExperimentResponse.Size(m)
}
func (m *ArchiveExperimentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ArchiveExperimentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ArchiveExperimentResponse proto.InternalMessageInfo

type GetExperimentHistoryRequest struct {
	ExperimentName       string   `protobuf:"bytes,1,opt,name=experiment_name,json=experimentName,proto3" json:"experiment_name,omitempty"`
	Environment          string   `protobuf:"bytes,2,opt,name=environment,proto3" json:"environment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetExperimentHistoryRequest) Reset()         { *m = GetExperimentHistoryRequest{} }
func (m *GetExperimentHistoryRequest) String() string { return proto.CompactTextString(m) }
func (*GetExperimentHistoryRequest) ProtoMessage()    {}
func (*GetExperimentHistoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a6955141cef38721, []int{11}
}

func (m *GetExperimentHistoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetExperimentHistoryRequest.Unmarshal(m, b)
}
func (m *GetExperimentHistoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetExperimentHistoryRequest.Marshal(b, m, deterministic)
}
func (m *GetExperimentHistoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetExperimentHistoryRequest.Merge(m, src)
}
func (m *GetExperimentHistoryRequest) XXX_Size() int {
	return xxx_messageInfo_GetExperimentHistoryRequest.Size(m)
}
func (m *GetExperimentHistoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetExperimentHistoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetExperimentHistoryRequest proto.InternalMessageInfo

func (m *GetExperimentHistoryRequest) GetExperimentName() string {
	if m != nil {
		return m.ExperimentName
	}
	return ""
}

func (m *GetExperimentHistoryRequest) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

type GetExperimentHistoryResponse struct {
	Revisions            []*Revision `protobuf:"bytes,1,rep,name=revisions,proto3" json:"revisions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetExperimentHistoryResponse) Reset()         { *m = GetExperimentHistoryResponse{} }
func (m *GetExperimentHistoryResponse) String() string { return proto.CompactTextString(m) }
func (*GetExperimentHistoryResponse) ProtoMessage()    {}
func (*GetExperimentHistoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a6955141cef38721, []int{12}
}

func (m *GetExperimentHistoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetExperimentHistoryResponse.Unmarshal(m, b)
}
func (m *GetExperimentHistoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetExperimentHistoryResponse.Marshal(b, m, deterministic)
}
func (m *GetExperimentHistoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetExperimentHistoryResponse.Merge(m, src)
}
func (m *GetExperimentHistoryResponse) XXX_Size() int {
	return xxx_messageInfo_GetExperimentHistoryResponse.Size(m)
}
func (m *GetExperimentHistoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetExperimentHistoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetExperimentHistoryResponse proto.InternalMessageInfo

func (m *GetExperimentHistoryResponse) GetRevisions() []*Revision {
	if m != nil {
		return m.Revisions
	}
	return nil
}

func init() {
	proto.RegisterType((*Revision)(nil), "improbable.int.platform.experimentz.Revision")
	proto.RegisterType((*ListExperimentsRequest)(nil), "improbable.int.platform.experimentz.ListExperimentsRequest")
	proto.RegisterType((*ListExperimentsResponse)(nil), "improbable.int.platform.experimentz.ListExperimentsResponse")
	proto.RegisterType((*ListArchivedExperimentNamesRequest)(nil), "improbable.int.platform.experimentz.ListArchivedExperimentNamesRequest")
	proto.RegisterType((*ListArchivedExperimentNamesResponse)(nil), "improbable.int.platform.experimentz.ListArchivedExperimentNamesResponse")
	proto.RegisterType((*GetExperimentRequest)(nil), "improbable.int.platform.experimentz.GetExperimentRequest")
	proto.RegisterType((*GetExperimentResponse)(nil), "improbable.int.platform.experimentz.GetExperimentResponse")
	proto.RegisterType((*SetExperimentRequest)(nil), "improbable.int.platform.experimentz.SetExperimentRequest")
	proto.RegisterType((*SetExperimentResponse)(nil), "improbable.int.platform.experimentz.SetExperimentResponse")
	proto.RegisterType((*ArchiveExperimentRequest)(nil), "improbable.int.platform.experimentz.ArchiveExperimentRequest")
	proto.RegisterType((*ArchiveExperimentResponse)(nil), "improbable.int.platform.experimentz.ArchiveExperimentResponse")
	proto.RegisterType((*GetExperimentHistoryRequest)(nil), "improbable.int.platform.experimentz.GetExperimentHistoryRequest")
	proto.RegisterType((*GetExperimentHistoryResponse)(nil), "improbable.int.platform.experimentz.GetExperimentHistoryResponse")
}

func init() {
	proto.RegisterFile("improbable/int/platform/experimentz/experimentz.proto", fileDescriptor_a6955141cef38721)
}

var fileDescriptor_a6955141cef38721 = []byte{
	// 688 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x96, 0xcf, 0x4f, 0x13, 0x41,
	0x14, 0xc7, 0x1d, 0x48, 0xd0, 0xbe, 0x8a, 0xe8, 0x84, 0x1f, 0x75, 0x21, 0xb4, 0x59, 0x3c, 0x94,
	0xc4, 0xee, 0x1a, 0x14, 0x12, 0xfc, 0x0d, 0x6a, 0x20, 0xfe, 0x0a, 0xd9, 0x7a, 0xd2, 0x48, 0xb3,
	0x6d, 0xa7, 0xcb, 0x48, 0x77, 0x66, 0x9d, 0x99, 0x16, 0x41, 0xbd, 0x7b, 0xf2, 0xe4, 0xd5, 0x83,
	0x07, 0xa3, 0x27, 0x0f, 0x1e, 0xfc, 0x77, 0x48, 0xf8, 0x4b, 0x4c, 0xcb, 0x6e, 0x77, 0xb7, 0x14,
	0x52, 0x16, 0x0e, 0x9c, 0x3a, 0xdd, 0x9d, 0xef, 0x7b, 0x9f, 0xf7, 0x66, 0xe6, 0x3b, 0x0b, 0xf3,
	0xd4, 0xf5, 0x04, 0x2f, 0xdb, 0xe5, 0x3a, 0x31, 0x29, 0x53, 0xa6, 0x57, 0xb7, 0x55, 0x8d, 0x0b,
	0xd7, 0x24, 0x1f, 0x3c, 0x22, 0xa8, 0x4b, 0x98, 0xda, 0x89, 0x8e, 0x0d, 0x4f, 0x70, 0xc5, 0xf1,
	0x4c, 0x28, 0x33, 0x28, 0x53, 0x46, 0x20, 0x33, 0x22, 0x53, 0xb5, 0x69, 0xca, 0x6a, 0xc2, 0x8e,
	0x45, 0xaa, 0x70, 0x56, 0xa3, 0xce, 0x7e, 0x10, 0x6d, 0xc1, 0xa1, 0x6a, 0xa3, 0x51, 0x36, 0x2a,
	0xdc, 0x35, 0xdd, 0x2d, 0xaa, 0x36, 0xf9, 0x96, 0xe9, 0xf0, 0x42, 0xfb, 0x65, 0xa1, 0x69, 0xd7,
	0x69, 0xd5, 0x56, 0x5c, 0x48, 0xb3, 0x33, 0xf4, 0x75, 0x59, 0x87, 0x73, 0xa7, 0x4e, 0xcc, 0xf6,
	0xbf, 0x72, 0xa3, 0x66, 0x2a, 0xea, 0x12, 0xa9, 0x6c, 0xd7, 0xdb, 0x9f, 0xa0, 0xff, 0x43, 0x70,
	0xc1, 0x22, 0x4d, 0x2a, 0x29, 0x67, 0x78, 0x15, 0x20, 0x24, 0xc8, 0xa0, 0x1c, 0xca, 0xa7, 0xe7,
	0xf2, 0x46, 0x8c, 0xbf, 0x26, 0xec, 0x28, 0xb8, 0xf1, 0xa4, 0x33, 0xb6, 0x22, 0x5a, 0x9c, 0x85,
	0xb4, 0xcb, 0xab, 0xb4, 0x46, 0x49, 0xb5, 0x54, 0xde, 0xce, 0x0c, 0xe4, 0x50, 0x3e, 0x65, 0x41,
	0xf0, 0x68, 0x79, 0x1b, 0x3f, 0x80, 0xe1, 0x16, 0x4a, 0x29, 0x78, 0x94, 0x19, 0x6c, 0x67, 0xd3,
	0x8c, 0x7d, 0x60, 0x23, 0x00, 0x36, 0x5e, 0x05, 0xc0, 0xd6, 0xc5, 0x96, 0xe0, 0x85, 0x3f, 0x5f,
	0x5f, 0x87, 0xf1, 0xe7, 0x54, 0xaa, 0x30, 0xbf, 0xb4, 0xc8, 0xfb, 0x06, 0x91, 0x0a, 0x3f, 0x86,
	0x34, 0x61, 0x4d, 0x2a, 0x38, 0xeb, 0x94, 0x91, 0x5a, 0xd6, 0xf7, 0x76, 0xb3, 0xd3, 0x30, 0x95,
	0x57, 0x44, 0x2a, 0xca, 0x9c, 0x4f, 0x52, 0xd9, 0x4e, 0xeb, 0xd7, 0x13, 0xbc, 0xda, 0xa8, 0x28,
	0xca, 0xd9, 0xac, 0x15, 0x95, 0xe9, 0x04, 0x26, 0x0e, 0xc4, 0x97, 0x1e, 0x67, 0x92, 0xe0, 0xa7,
	0x90, 0x0e, 0x4b, 0x95, 0x19, 0x94, 0x1b, 0x3c, 0x56, 0x9f, 0xa2, 0x62, 0xfd, 0x1d, 0xe8, 0xad,
	0x34, 0x4b, 0xa2, 0xb2, 0x41, 0x9b, 0xa4, 0x1a, 0x4e, 0x7b, 0x69, 0xbb, 0xe4, 0x94, 0x4b, 0x5a,
	0x83, 0x99, 0x23, 0x73, 0xf9, 0xe5, 0xcd, 0xc2, 0xe5, 0x90, 0xb0, 0xc4, 0x5a, 0xef, 0xda, 0x35,
	0xa6, 0xac, 0x11, 0x12, 0x97, 0xe8, 0x3f, 0x10, 0x8c, 0xae, 0x90, 0x48, 0x93, 0x02, 0xe0, 0x47,
	0x30, 0xd2, 0x15, 0xc3, 0x87, 0xd6, 0xf6, 0x76, 0xb3, 0xe3, 0x30, 0xba, 0xfe, 0xc6, 0x2e, 0xec,
	0x2c, 0x15, 0x5e, 0xdf, 0x28, 0x2c, 0x96, 0xde, 0x7e, 0x9c, 0xbf, 0xbe, 0x70, 0xeb, 0xf3, 0x35,
	0xeb, 0x52, 0x3c, 0x7c, 0x77, 0xd5, 0x03, 0xc9, 0xaa, 0xb6, 0x61, 0xac, 0x0b, 0xd1, 0xaf, 0xf3,
	0xd4, 0x76, 0xbb, 0xfe, 0x07, 0xc1, 0x68, 0xb1, 0x57, 0x1b, 0xd6, 0x4e, 0x92, 0x62, 0x79, 0x68,
	0x6f, 0x37, 0x3b, 0x90, 0x43, 0xb1, 0x83, 0x75, 0x3a, 0x3d, 0x99, 0x80, 0xb1, 0x62, 0xaf, 0x9e,
	0xe8, 0x3f, 0x11, 0x64, 0xfc, 0xfd, 0x71, 0xa6, 0x17, 0x75, 0x12, 0xae, 0xf6, 0xc0, 0xf4, 0x8b,
	0xf8, 0x8d, 0x60, 0x32, 0xb6, 0xe4, 0xab, 0x54, 0x2a, 0x2e, 0xb6, 0xcf, 0x60, 0x1d, 0x9b, 0x30,
	0xd5, 0x9b, 0xd4, 0xdf, 0xa3, 0xcf, 0x20, 0x25, 0x7c, 0x77, 0x0e, 0x8c, 0xa6, 0x60, 0xf4, 0x71,
	0xa1, 0x18, 0x81, 0xa7, 0x5b, 0xa1, 0x7e, 0xee, 0xd7, 0x79, 0xc0, 0x61, 0xaa, 0x9d, 0x22, 0x11,
	0x4d, 0x5a, 0x21, 0xf8, 0x2b, 0x82, 0x91, 0x2e, 0xab, 0xc3, 0x77, 0xfa, 0x4a, 0xd2, 0xdb, 0x80,
	0xb5, 0xbb, 0xc9, 0xc4, 0xfe, 0xea, 0x9d, 0xc3, 0x7f, 0x11, 0x4c, 0x1e, 0x61, 0x54, 0x78, 0xa5,
	0xef, 0xf8, 0x47, 0xdb, 0xaa, 0xb6, 0x7a, 0xf2, 0x40, 0x1d, 0xe8, 0x2f, 0x08, 0x86, 0x63, 0x4b,
	0x89, 0x17, 0xfb, 0x8a, 0xde, 0xcb, 0x3e, 0xb5, 0xdb, 0x49, 0xa4, 0x31, 0x94, 0x62, 0x02, 0x94,
	0x62, 0x72, 0x94, 0xe2, 0x21, 0x28, 0xdf, 0x10, 0x5c, 0x39, 0x70, 0x50, 0xf1, 0xbd, 0xbe, 0x62,
	0x1e, 0xe6, 0x43, 0xda, 0xfd, 0xa4, 0xf2, 0x0e, 0xd6, 0xf7, 0xee, 0x7b, 0xcb, 0x3f, 0x77, 0xf8,
	0xe1, 0xf1, 0x1b, 0x1f, 0x37, 0x17, 0x6d, 0xe9, 0x04, 0x11, 0x02, 0xbe, 0xf2, 0x50, 0xfb, 0xf3,
	0xe7, 0xe6, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0x18, 0x4c, 0x8a, 0x63, 0x73, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ExperimentzServiceClient is the client API for ExperimentzService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExperimentzServiceClient interface {
	ListExperiments(ctx context.Context, in *ListExperimentsRequest, opts ...grpc.CallOption) (*ListExperimentsResponse, error)
	ListArchivedExperimentNames(ctx context.Context, in *ListArchivedExperimentNamesRequest, opts ...grpc.CallOption) (*ListArchivedExperimentNamesResponse, error)
	GetExperiment(ctx context.Context, in *GetExperimentRequest, opts ...grpc.CallOption) (*GetExperimentResponse, error)
	SetExperiment(ctx context.Context, in *SetExperimentRequest, opts ...grpc.CallOption) (*SetExperimentResponse, error)
	ArchiveExperiment(ctx context.Context, in *ArchiveExperimentRequest, opts ...grpc.CallOption) (*ArchiveExperimentResponse, error)
	GetExperimentHistory(ctx context.Context, in *GetExperimentHistoryRequest, opts ...grpc.CallOption) (*GetExperimentHistoryResponse, error)
}

type experimentzServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewExperimentzServiceClient(cc grpc.ClientConnInterface) ExperimentzServiceClient {
	return &experimentzServiceClient{cc}
}

func (c *experimentzServiceClient) ListExperiments(ctx context.Context, in *ListExperimentsRequest, opts ...grpc.CallOption) (*ListExperimentsResponse, error) {
	out := new(ListExperimentsResponse)
	err := c.cc.Invoke(ctx, "/improbable.int.platform.experimentz.ExperimentzService/ListExperiments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *experimentzServiceClient) ListArchivedExperimentNames(ctx context.Context, in *ListArchivedExperimentNamesRequest, opts ...grpc.CallOption) (*ListArchivedExperimentNamesResponse, error) {
	out := new(ListArchivedExperimentNamesResponse)
	err := c.cc.Invoke(ctx, "/improbable.int.platform.experimentz.ExperimentzService/ListArchivedExperimentNames", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *experimentzServiceClient) GetExperiment(ctx context.Context, in *GetExperimentRequest, opts ...grpc.CallOption) (*GetExperimentResponse, error) {
	out := new(GetExperimentResponse)
	err := c.cc.Invoke(ctx, "/improbable.int.platform.experimentz.ExperimentzService/GetExperiment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *experimentzServiceClient) SetExperiment(ctx context.Context, in *SetExperimentRequest, opts ...grpc.CallOption) (*SetExperimentResponse, error) {
	out := new(SetExperimentResponse)
	err := c.cc.Invoke(ctx, "/improbable.int.platform.experimentz.ExperimentzService/SetExperiment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *experimentzServiceClient) ArchiveExperiment(ctx context.Context, in *ArchiveExperimentRequest, opts ...grpc.CallOption) (*ArchiveExperimentResponse, error) {
	out := new(ArchiveExperimentResponse)
	err := c.cc.Invoke(ctx, "/improbable.int.platform.experimentz.ExperimentzService/ArchiveExperiment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *experimentzServiceClient) GetExperimentHistory(ctx context.Context, in *GetExperimentHistoryRequest, opts ...grpc.CallOption) (*GetExperimentHistoryResponse, error) {
	out := new(GetExperimentHistoryResponse)
	err := c.cc.Invoke(ctx, "/improbable.int.platform.experimentz.ExperimentzService/GetExperimentHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ExperimentzServiceServer is the server API for ExperimentzService service.
type ExperimentzServiceServer interface {
	ListExperiments(context.Context, *ListExperimentsRequest) (*ListExperimentsResponse, error)
	ListArchivedExperimentNames(context.Context, *ListArchivedExperimentNamesRequest) (*ListArchivedExperimentNamesResponse, error)
	GetExperiment(context.Context, *GetExperimentRequest) (*GetExperimentResponse, error)
	SetExperiment(context.Context, *SetExperimentRequest) (*SetExperimentResponse, error)
	ArchiveExperiment(context.Context, *ArchiveExperimentRequest) (*ArchiveExperimentResponse, error)
	GetExperimentHistory(context.Context, *GetExperimentHistoryRequest) (*GetExperimentHistoryResponse, error)
}

// UnimplementedExperimentzServiceServer can be embedded to have forward compatible implementations.
type UnimplementedExperimentzServiceServer struct {
}

func (*UnimplementedExperimentzServiceServer) ListExperiments(ctx context.Context, req *ListExperimentsRequest) (*ListExperimentsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListExperiments not implemented")
}
func (*UnimplementedExperimentzServiceServer) ListArchivedExperimentNames(ctx context.Context, req *ListArchivedExperimentNamesRequest) (*ListArchivedExperimentNamesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListArchivedExperimentNames not implemented")
}
func (*UnimplementedExperimentzServiceServer) GetExperiment(ctx context.Context, req *GetExperimentRequest) (*GetExperimentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetExperiment not implemented")
}
func (*UnimplementedExperimentzServiceServer) SetExperiment(ctx context.Context, req *SetExperimentRequest) (*SetExperimentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetExperiment not implemented")
}
func (*UnimplementedExperimentzServiceServer) ArchiveExperiment(ctx context.Context, req *ArchiveExperimentRequest) (*ArchiveExperimentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveExperiment not implemented")
}
func (*UnimplementedExperimentzServiceServer) GetExperimentHistory(ctx context.Context, req *GetExperimentHistoryRequest) (*GetExperimentHistoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetExperimentHistory not implemented")
}

func RegisterExperimentzServiceServer(s *grpc.Server, srv ExperimentzServiceServer) {
	s.RegisterService(&_ExperimentzService_serviceDesc, srv)
}

func _ExperimentzService_ListExperiments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListExperimentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExperimentzServiceServer).ListExperiments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.int.platform.experimentz.ExperimentzService/ListExperiments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExperimentzServiceServer).ListExperiments(ctx, req.(*ListExperimentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExperimentzService_ListArchivedExperimentNames_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListArchivedExperimentNamesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExperimentzServiceServer).ListArchivedExperimentNames(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.int.platform.experimentz.ExperimentzService/ListArchivedExperimentNames",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExperimentzServiceServer).ListArchivedExperimentNames(ctx, req.(*ListArchivedExperimentNamesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExperimentzService_GetExperiment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetExperimentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExperimentzServiceServer).GetExperiment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.int.platform.experimentz.ExperimentzService/GetExperiment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExperimentzServiceServer).GetExperiment(ctx, req.(*GetExperimentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExperimentzService_SetExperiment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetExperimentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExperimentzServiceServer).SetExperiment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.int.platform.experimentz.ExperimentzService/SetExperiment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExperimentzServiceServer).SetExperiment(ctx, req.(*SetExperimentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExperimentzService_ArchiveExperiment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArchiveExperimentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExperimentzServiceServer).ArchiveExperiment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.int.platform.experimentz.ExperimentzService/ArchiveExperiment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExperimentzServiceServer).ArchiveExperiment(ctx, req.(*ArchiveExperimentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExperimentzService_GetExperimentHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetExperimentHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExperimentzServiceServer).GetExperimentHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.int.platform.experimentz.ExperimentzService/GetExperimentHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExperimentzServiceServer).GetExperimentHistory(ctx, req.(*GetExperimentHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ExperimentzService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "improbable.int.platform.experimentz.ExperimentzService",
	HandlerType: (*ExperimentzServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListExperiments",
			Handler:    _ExperimentzService_ListExperiments_Handler,
		},
		{
			MethodName: "ListArchivedExperimentNames",
			Handler:    _ExperimentzService_ListArchivedExperimentNames_Handler,
		},
		{
			MethodName: "GetExperiment",
			Handler:    _ExperimentzService_GetExperiment_Handler,
		},
		{
			MethodName: "SetExperiment",
			Handler:    _ExperimentzService_SetExperiment_Handler,
		},
		{
			MethodName: "ArchiveExperiment",
			Handler:    _ExperimentzService_ArchiveExperiment_Handler,
		},
		{
			MethodName: "GetExperimentHistory",
			Handler:    _ExperimentzService_GetExperimentHistory_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "improbable/int/platform/experimentz/experimentz.proto",
}
