// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/int/platform/experimentz/experimentz.proto

package improbable_int_platform_experimentz

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	_ "improbable.io/proto/infra/experimentz"
	math "math"
	regexp "regexp"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *Revision) Validate() error {
	if this.Experiment != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Experiment); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Experiment", err)
		}
	}
	if this.TimeModified != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.TimeModified); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("TimeModified", err)
		}
	}
	return nil
}

var _regex_ListExperimentsRequest_Environment = regexp.MustCompile(`(testing|staging|production)`)

func (this *ListExperimentsRequest) Validate() error {
	if !_regex_ListExperimentsRequest_Environment.MatchString(this.Environment) {
		return github_com_mwitkow_go_proto_validators.FieldError("Environment", fmt.Errorf(`value '%v' must be a string conforming to regex "(testing|staging|production)"`, this.Environment))
	}
	return nil
}
func (this *ListExperimentsResponse) Validate() error {
	for _, item := range this.Experiments {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Experiments", err)
			}
		}
	}
	return nil
}

var _regex_ListArchivedExperimentNamesRequest_Environment = regexp.MustCompile(`(testing|staging|production)`)

func (this *ListArchivedExperimentNamesRequest) Validate() error {
	if !_regex_ListArchivedExperimentNamesRequest_Environment.MatchString(this.Environment) {
		return github_com_mwitkow_go_proto_validators.FieldError("Environment", fmt.Errorf(`value '%v' must be a string conforming to regex "(testing|staging|production)"`, this.Environment))
	}
	return nil
}
func (this *ListArchivedExperimentNamesResponse) Validate() error {
	return nil
}

var _regex_GetExperimentRequest_ExperimentName = regexp.MustCompile(`^[a-zA-Z0-9_]{5,64}$`)
var _regex_GetExperimentRequest_Environment = regexp.MustCompile(`(testing|staging|production)`)

func (this *GetExperimentRequest) Validate() error {
	if !_regex_GetExperimentRequest_ExperimentName.MatchString(this.ExperimentName) {
		return github_com_mwitkow_go_proto_validators.FieldError("ExperimentName", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-zA-Z0-9_]{5,64}$"`, this.ExperimentName))
	}
	if !_regex_GetExperimentRequest_Environment.MatchString(this.Environment) {
		return github_com_mwitkow_go_proto_validators.FieldError("Environment", fmt.Errorf(`value '%v' must be a string conforming to regex "(testing|staging|production)"`, this.Environment))
	}
	return nil
}
func (this *GetExperimentResponse) Validate() error {
	if this.Experiment != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Experiment); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Experiment", err)
		}
	}
	return nil
}

var _regex_SetExperimentRequest_Environment = regexp.MustCompile(`(testing|staging|production)`)

func (this *SetExperimentRequest) Validate() error {
	if nil == this.Experiment {
		return github_com_mwitkow_go_proto_validators.FieldError("Experiment", fmt.Errorf("message must exist"))
	}
	if this.Experiment != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Experiment); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Experiment", err)
		}
	}
	if !_regex_SetExperimentRequest_Environment.MatchString(this.Environment) {
		return github_com_mwitkow_go_proto_validators.FieldError("Environment", fmt.Errorf(`value '%v' must be a string conforming to regex "(testing|staging|production)"`, this.Environment))
	}
	return nil
}
func (this *SetExperimentResponse) Validate() error {
	return nil
}

var _regex_ArchiveExperimentRequest_ExperimentName = regexp.MustCompile(`^[a-zA-Z0-9_]{5,64}$`)
var _regex_ArchiveExperimentRequest_Environment = regexp.MustCompile(`(testing|staging|production)`)

func (this *ArchiveExperimentRequest) Validate() error {
	if !_regex_ArchiveExperimentRequest_ExperimentName.MatchString(this.ExperimentName) {
		return github_com_mwitkow_go_proto_validators.FieldError("ExperimentName", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-zA-Z0-9_]{5,64}$"`, this.ExperimentName))
	}
	if !_regex_ArchiveExperimentRequest_Environment.MatchString(this.Environment) {
		return github_com_mwitkow_go_proto_validators.FieldError("Environment", fmt.Errorf(`value '%v' must be a string conforming to regex "(testing|staging|production)"`, this.Environment))
	}
	return nil
}
func (this *ArchiveExperimentResponse) Validate() error {
	return nil
}

var _regex_GetExperimentHistoryRequest_ExperimentName = regexp.MustCompile(`^[a-zA-Z0-9_]{5,64}$`)
var _regex_GetExperimentHistoryRequest_Environment = regexp.MustCompile(`(testing|staging|production)`)

func (this *GetExperimentHistoryRequest) Validate() error {
	if !_regex_GetExperimentHistoryRequest_ExperimentName.MatchString(this.ExperimentName) {
		return github_com_mwitkow_go_proto_validators.FieldError("ExperimentName", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-zA-Z0-9_]{5,64}$"`, this.ExperimentName))
	}
	if !_regex_GetExperimentHistoryRequest_Environment.MatchString(this.Environment) {
		return github_com_mwitkow_go_proto_validators.FieldError("Environment", fmt.Errorf(`value '%v' must be a string conforming to regex "(testing|staging|production)"`, this.Environment))
	}
	return nil
}
func (this *GetExperimentHistoryResponse) Validate() error {
	for _, item := range this.Revisions {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Revisions", err)
			}
		}
	}
	return nil
}
