// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/int/platform/orchestrator/environment.proto

package improbable_int_platform_orchestrator

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *Environment) Validate() error {
	if this.CreatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CreatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CreatedAt", err)
		}
	}
	return nil
}
func (this *CreateEnvironmentRequest) Validate() error {
	if this.ProjectId == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("ProjectId", fmt.Errorf(`value '%v' must not be an empty string`, this.ProjectId))
	}
	if this.DisplayName == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("DisplayName", fmt.Errorf(`value '%v' must not be an empty string`, this.DisplayName))
	}
	if this.Version == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Version", fmt.Errorf(`value '%v' must not be an empty string`, this.Version))
	}
	return nil
}
func (this *CreateEnvironmentResponse) Validate() error {
	if this.Environment != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Environment); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Environment", err)
		}
	}
	return nil
}
func (this *ListEnvironmentRequest) Validate() error {
	if this.ProjectId == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("ProjectId", fmt.Errorf(`value '%v' must not be an empty string`, this.ProjectId))
	}
	return nil
}
func (this *ListEnvironmentResponse) Validate() error {
	for _, item := range this.Environments {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Environments", err)
			}
		}
	}
	return nil
}
func (this *GetEnvironmentRequest) Validate() error {
	if this.ProjectId == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("ProjectId", fmt.Errorf(`value '%v' must not be an empty string`, this.ProjectId))
	}
	if this.EnvironmentId == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("EnvironmentId", fmt.Errorf(`value '%v' must not be an empty string`, this.EnvironmentId))
	}
	return nil
}
func (this *GetEnvironmentResponse) Validate() error {
	if this.Environment != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Environment); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Environment", err)
		}
	}
	return nil
}
func (this *DeleteEnvironmentRequest) Validate() error {
	if this.ProjectId == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("ProjectId", fmt.Errorf(`value '%v' must not be an empty string`, this.ProjectId))
	}
	if this.EnvironmentId == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("EnvironmentId", fmt.Errorf(`value '%v' must not be an empty string`, this.EnvironmentId))
	}
	return nil
}
func (this *DeleteEnvironmentResponse) Validate() error {
	return nil
}
