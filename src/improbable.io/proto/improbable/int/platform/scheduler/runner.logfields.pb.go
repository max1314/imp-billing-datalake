// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/int/platform/scheduler/runner.proto

package improbable_int_platform_scheduler

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/improbable-io/go-proto-logfields"
	github_com_improbable_io_go_proto_logfields "github.com/improbable-io/go-proto-logfields"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *SubscribeRunnerRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	idFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Id)
	hasInner = hasInner || len(idFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range idFields {
		res[k] = v
	}
	return res
}

func (this *SubscribeRunnerRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Id, dst)
}

func (this *SubscribeRunnerResponse) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	jobIdFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.JobId)
	hasInner = hasInner || len(jobIdFields) > 0
	dockerParametersFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.DockerParameters)
	hasInner = hasInner || len(dockerParametersFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range jobIdFields {
		res[k] = v
	}
	for k, v := range dockerParametersFields {
		res[k] = v
	}
	return res
}

func (this *SubscribeRunnerResponse) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.JobId, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.DockerParameters, dst)
}

func (this *UpdateRunnerAssignedJobRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	runnerIdFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.RunnerId)
	hasInner = hasInner || len(runnerIdFields) > 0
	jobIdFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.JobId)
	hasInner = hasInner || len(jobIdFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{
			"state": fmt.Sprintf("%v", this.State),
		}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range runnerIdFields {
		res[k] = v
	}
	for k, v := range jobIdFields {
		res[k] = v
	}
	res["state"] = fmt.Sprintf("%v", this.State)
	return res
}

func (this *UpdateRunnerAssignedJobRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.RunnerId, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.JobId, dst)
	dst["state"] = this.State
}

func (this *UpdateRunnerAssignedJobResponse) LogFields() map[string]string {
	return map[string]string{}
}

func (this *UpdateRunnerAssignedJobResponse) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *LogRunnerErrorRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	runnerIdFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.RunnerId)
	hasInner = hasInner || len(runnerIdFields) > 0
	jobIdFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.JobId)
	hasInner = hasInner || len(jobIdFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range runnerIdFields {
		res[k] = v
	}
	for k, v := range jobIdFields {
		res[k] = v
	}
	return res
}

func (this *LogRunnerErrorRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.RunnerId, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.JobId, dst)
}

func (this *LogRunnerErrorResponse) LogFields() map[string]string {
	return map[string]string{}
}

func (this *LogRunnerErrorResponse) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *ReportBootMetricsRequest) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	runnerIdFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.RunnerId)
	hasInner = hasInner || len(runnerIdFields) > 0
	osBootTimestampFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.OsBootTimestamp)
	hasInner = hasInner || len(osBootTimestampFields) > 0
	runnerBootTimestampFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.RunnerBootTimestamp)
	hasInner = hasInner || len(runnerBootTimestampFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range runnerIdFields {
		res[k] = v
	}
	for k, v := range osBootTimestampFields {
		res[k] = v
	}
	for k, v := range runnerBootTimestampFields {
		res[k] = v
	}
	return res
}

func (this *ReportBootMetricsRequest) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.RunnerId, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.OsBootTimestamp, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.RunnerBootTimestamp, dst)
}

func (this *ReportBootMetricsResponse) LogFields() map[string]string {
	return map[string]string{}
}

func (this *ReportBootMetricsResponse) ExtractRequestFields(dst map[string]interface{}) {
}
