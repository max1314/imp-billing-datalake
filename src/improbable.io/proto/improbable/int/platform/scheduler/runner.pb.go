// Code generated by protoc-gen-go. DO NOT EDIT.
// source: improbable/int/platform/scheduler/runner.proto

package improbable_int_platform_scheduler

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/improbable-io/go-proto-logfields"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UpdateRunnerAssignedJobRequest_State int32

const (
	UpdateRunnerAssignedJobRequest_UNKNOWN_STATE UpdateRunnerAssignedJobRequest_State = 0
	UpdateRunnerAssignedJobRequest_CLEAR         UpdateRunnerAssignedJobRequest_State = 1
	UpdateRunnerAssignedJobRequest_PULLED        UpdateRunnerAssignedJobRequest_State = 2
	UpdateRunnerAssignedJobRequest_STARTED       UpdateRunnerAssignedJobRequest_State = 3
)

var UpdateRunnerAssignedJobRequest_State_name = map[int32]string{
	0: "UNKNOWN_STATE",
	1: "CLEAR",
	2: "PULLED",
	3: "STARTED",
}

var UpdateRunnerAssignedJobRequest_State_value = map[string]int32{
	"UNKNOWN_STATE": 0,
	"CLEAR":         1,
	"PULLED":        2,
	"STARTED":       3,
}

func (x UpdateRunnerAssignedJobRequest_State) String() string {
	return proto.EnumName(UpdateRunnerAssignedJobRequest_State_name, int32(x))
}

func (UpdateRunnerAssignedJobRequest_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0f849c8f3599db23, []int{2, 0}
}

type SubscribeRunnerRequest struct {
	Id                   *MachineId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SubscribeRunnerRequest) Reset()         { *m = SubscribeRunnerRequest{} }
func (m *SubscribeRunnerRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeRunnerRequest) ProtoMessage()    {}
func (*SubscribeRunnerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f849c8f3599db23, []int{0}
}

func (m *SubscribeRunnerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeRunnerRequest.Unmarshal(m, b)
}
func (m *SubscribeRunnerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeRunnerRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeRunnerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeRunnerRequest.Merge(m, src)
}
func (m *SubscribeRunnerRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeRunnerRequest.Size(m)
}
func (m *SubscribeRunnerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeRunnerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeRunnerRequest proto.InternalMessageInfo

func (m *SubscribeRunnerRequest) GetId() *MachineId {
	if m != nil {
		return m.Id
	}
	return nil
}

type SubscribeRunnerResponse struct {
	JobId                *JobId            `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	DockerImage          string            `protobuf:"bytes,9,opt,name=docker_image,json=dockerImage,proto3" json:"docker_image,omitempty"`                                                     // Deprecated: Do not use.
	DockerArgs           []string          `protobuf:"bytes,10,rep,name=docker_args,json=dockerArgs,proto3" json:"docker_args,omitempty"`                                                       // Deprecated: Do not use.
	Privileged           bool              `protobuf:"varint,11,opt,name=privileged,proto3" json:"privileged,omitempty"`                                                                        // Deprecated: Do not use.
	MountDockerSocket    bool              `protobuf:"varint,12,opt,name=mount_docker_socket,json=mountDockerSocket,proto3" json:"mount_docker_socket,omitempty"`                               // Deprecated: Do not use.
	TargetState          TargetState       `protobuf:"varint,6,opt,name=target_state,json=targetState,proto3,enum=improbable.int.platform.scheduler.TargetState" json:"target_state,omitempty"` // Deprecated: Do not use.
	DockerParameters     *DockerParameters `protobuf:"bytes,13,opt,name=docker_parameters,json=dockerParameters,proto3" json:"docker_parameters,omitempty"`
	WhitelistedIps       []string          `protobuf:"bytes,14,rep,name=whitelisted_ips,json=whitelistedIps,proto3" json:"whitelisted_ips,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SubscribeRunnerResponse) Reset()         { *m = SubscribeRunnerResponse{} }
func (m *SubscribeRunnerResponse) String() string { return proto.CompactTextString(m) }
func (*SubscribeRunnerResponse) ProtoMessage()    {}
func (*SubscribeRunnerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f849c8f3599db23, []int{1}
}

func (m *SubscribeRunnerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeRunnerResponse.Unmarshal(m, b)
}
func (m *SubscribeRunnerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeRunnerResponse.Marshal(b, m, deterministic)
}
func (m *SubscribeRunnerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeRunnerResponse.Merge(m, src)
}
func (m *SubscribeRunnerResponse) XXX_Size() int {
	return xxx_messageInfo_SubscribeRunnerResponse.Size(m)
}
func (m *SubscribeRunnerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeRunnerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeRunnerResponse proto.InternalMessageInfo

func (m *SubscribeRunnerResponse) GetJobId() *JobId {
	if m != nil {
		return m.JobId
	}
	return nil
}

// Deprecated: Do not use.
func (m *SubscribeRunnerResponse) GetDockerImage() string {
	if m != nil {
		return m.DockerImage
	}
	return ""
}

// Deprecated: Do not use.
func (m *SubscribeRunnerResponse) GetDockerArgs() []string {
	if m != nil {
		return m.DockerArgs
	}
	return nil
}

// Deprecated: Do not use.
func (m *SubscribeRunnerResponse) GetPrivileged() bool {
	if m != nil {
		return m.Privileged
	}
	return false
}

// Deprecated: Do not use.
func (m *SubscribeRunnerResponse) GetMountDockerSocket() bool {
	if m != nil {
		return m.MountDockerSocket
	}
	return false
}

// Deprecated: Do not use.
func (m *SubscribeRunnerResponse) GetTargetState() TargetState {
	if m != nil {
		return m.TargetState
	}
	return TargetState_UNKNOWN_TARGET_STATE
}

func (m *SubscribeRunnerResponse) GetDockerParameters() *DockerParameters {
	if m != nil {
		return m.DockerParameters
	}
	return nil
}

func (m *SubscribeRunnerResponse) GetWhitelistedIps() []string {
	if m != nil {
		return m.WhitelistedIps
	}
	return nil
}

type UpdateRunnerAssignedJobRequest struct {
	RunnerId             *MachineId                           `protobuf:"bytes,1,opt,name=runner_id,json=runnerId,proto3" json:"runner_id,omitempty"`
	JobId                *JobId                               `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	State                UpdateRunnerAssignedJobRequest_State `protobuf:"varint,3,opt,name=state,proto3,enum=improbable.int.platform.scheduler.UpdateRunnerAssignedJobRequest_State" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *UpdateRunnerAssignedJobRequest) Reset()         { *m = UpdateRunnerAssignedJobRequest{} }
func (m *UpdateRunnerAssignedJobRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRunnerAssignedJobRequest) ProtoMessage()    {}
func (*UpdateRunnerAssignedJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f849c8f3599db23, []int{2}
}

func (m *UpdateRunnerAssignedJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRunnerAssignedJobRequest.Unmarshal(m, b)
}
func (m *UpdateRunnerAssignedJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRunnerAssignedJobRequest.Marshal(b, m, deterministic)
}
func (m *UpdateRunnerAssignedJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRunnerAssignedJobRequest.Merge(m, src)
}
func (m *UpdateRunnerAssignedJobRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRunnerAssignedJobRequest.Size(m)
}
func (m *UpdateRunnerAssignedJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRunnerAssignedJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRunnerAssignedJobRequest proto.InternalMessageInfo

func (m *UpdateRunnerAssignedJobRequest) GetRunnerId() *MachineId {
	if m != nil {
		return m.RunnerId
	}
	return nil
}

func (m *UpdateRunnerAssignedJobRequest) GetJobId() *JobId {
	if m != nil {
		return m.JobId
	}
	return nil
}

func (m *UpdateRunnerAssignedJobRequest) GetState() UpdateRunnerAssignedJobRequest_State {
	if m != nil {
		return m.State
	}
	return UpdateRunnerAssignedJobRequest_UNKNOWN_STATE
}

type UpdateRunnerAssignedJobResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRunnerAssignedJobResponse) Reset()         { *m = UpdateRunnerAssignedJobResponse{} }
func (m *UpdateRunnerAssignedJobResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateRunnerAssignedJobResponse) ProtoMessage()    {}
func (*UpdateRunnerAssignedJobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f849c8f3599db23, []int{3}
}

func (m *UpdateRunnerAssignedJobResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRunnerAssignedJobResponse.Unmarshal(m, b)
}
func (m *UpdateRunnerAssignedJobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRunnerAssignedJobResponse.Marshal(b, m, deterministic)
}
func (m *UpdateRunnerAssignedJobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRunnerAssignedJobResponse.Merge(m, src)
}
func (m *UpdateRunnerAssignedJobResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateRunnerAssignedJobResponse.Size(m)
}
func (m *UpdateRunnerAssignedJobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRunnerAssignedJobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRunnerAssignedJobResponse proto.InternalMessageInfo

type LogRunnerErrorRequest struct {
	RunnerId             *MachineId `protobuf:"bytes,1,opt,name=runner_id,json=runnerId,proto3" json:"runner_id,omitempty"`
	JobId                *JobId     `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Message              string     `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *LogRunnerErrorRequest) Reset()         { *m = LogRunnerErrorRequest{} }
func (m *LogRunnerErrorRequest) String() string { return proto.CompactTextString(m) }
func (*LogRunnerErrorRequest) ProtoMessage()    {}
func (*LogRunnerErrorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f849c8f3599db23, []int{4}
}

func (m *LogRunnerErrorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogRunnerErrorRequest.Unmarshal(m, b)
}
func (m *LogRunnerErrorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogRunnerErrorRequest.Marshal(b, m, deterministic)
}
func (m *LogRunnerErrorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogRunnerErrorRequest.Merge(m, src)
}
func (m *LogRunnerErrorRequest) XXX_Size() int {
	return xxx_messageInfo_LogRunnerErrorRequest.Size(m)
}
func (m *LogRunnerErrorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LogRunnerErrorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LogRunnerErrorRequest proto.InternalMessageInfo

func (m *LogRunnerErrorRequest) GetRunnerId() *MachineId {
	if m != nil {
		return m.RunnerId
	}
	return nil
}

func (m *LogRunnerErrorRequest) GetJobId() *JobId {
	if m != nil {
		return m.JobId
	}
	return nil
}

func (m *LogRunnerErrorRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type LogRunnerErrorResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogRunnerErrorResponse) Reset()         { *m = LogRunnerErrorResponse{} }
func (m *LogRunnerErrorResponse) String() string { return proto.CompactTextString(m) }
func (*LogRunnerErrorResponse) ProtoMessage()    {}
func (*LogRunnerErrorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f849c8f3599db23, []int{5}
}

func (m *LogRunnerErrorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogRunnerErrorResponse.Unmarshal(m, b)
}
func (m *LogRunnerErrorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogRunnerErrorResponse.Marshal(b, m, deterministic)
}
func (m *LogRunnerErrorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogRunnerErrorResponse.Merge(m, src)
}
func (m *LogRunnerErrorResponse) XXX_Size() int {
	return xxx_messageInfo_LogRunnerErrorResponse.Size(m)
}
func (m *LogRunnerErrorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LogRunnerErrorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LogRunnerErrorResponse proto.InternalMessageInfo

type ReportBootMetricsRequest struct {
	RunnerId             *MachineId           `protobuf:"bytes,1,opt,name=runner_id,json=runnerId,proto3" json:"runner_id,omitempty"`
	OsBootTimestamp      *timestamp.Timestamp `protobuf:"bytes,2,opt,name=os_boot_timestamp,json=osBootTimestamp,proto3" json:"os_boot_timestamp,omitempty"`
	RunnerBootTimestamp  *timestamp.Timestamp `protobuf:"bytes,3,opt,name=runner_boot_timestamp,json=runnerBootTimestamp,proto3" json:"runner_boot_timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ReportBootMetricsRequest) Reset()         { *m = ReportBootMetricsRequest{} }
func (m *ReportBootMetricsRequest) String() string { return proto.CompactTextString(m) }
func (*ReportBootMetricsRequest) ProtoMessage()    {}
func (*ReportBootMetricsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f849c8f3599db23, []int{6}
}

func (m *ReportBootMetricsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportBootMetricsRequest.Unmarshal(m, b)
}
func (m *ReportBootMetricsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportBootMetricsRequest.Marshal(b, m, deterministic)
}
func (m *ReportBootMetricsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportBootMetricsRequest.Merge(m, src)
}
func (m *ReportBootMetricsRequest) XXX_Size() int {
	return xxx_messageInfo_ReportBootMetricsRequest.Size(m)
}
func (m *ReportBootMetricsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportBootMetricsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReportBootMetricsRequest proto.InternalMessageInfo

func (m *ReportBootMetricsRequest) GetRunnerId() *MachineId {
	if m != nil {
		return m.RunnerId
	}
	return nil
}

func (m *ReportBootMetricsRequest) GetOsBootTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.OsBootTimestamp
	}
	return nil
}

func (m *ReportBootMetricsRequest) GetRunnerBootTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.RunnerBootTimestamp
	}
	return nil
}

type ReportBootMetricsResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportBootMetricsResponse) Reset()         { *m = ReportBootMetricsResponse{} }
func (m *ReportBootMetricsResponse) String() string { return proto.CompactTextString(m) }
func (*ReportBootMetricsResponse) ProtoMessage()    {}
func (*ReportBootMetricsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f849c8f3599db23, []int{7}
}

func (m *ReportBootMetricsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportBootMetricsResponse.Unmarshal(m, b)
}
func (m *ReportBootMetricsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportBootMetricsResponse.Marshal(b, m, deterministic)
}
func (m *ReportBootMetricsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportBootMetricsResponse.Merge(m, src)
}
func (m *ReportBootMetricsResponse) XXX_Size() int {
	return xxx_messageInfo_ReportBootMetricsResponse.Size(m)
}
func (m *ReportBootMetricsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportBootMetricsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReportBootMetricsResponse proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("improbable.int.platform.scheduler.UpdateRunnerAssignedJobRequest_State", UpdateRunnerAssignedJobRequest_State_name, UpdateRunnerAssignedJobRequest_State_value)
	proto.RegisterType((*SubscribeRunnerRequest)(nil), "improbable.int.platform.scheduler.SubscribeRunnerRequest")
	proto.RegisterType((*SubscribeRunnerResponse)(nil), "improbable.int.platform.scheduler.SubscribeRunnerResponse")
	proto.RegisterType((*UpdateRunnerAssignedJobRequest)(nil), "improbable.int.platform.scheduler.UpdateRunnerAssignedJobRequest")
	proto.RegisterType((*UpdateRunnerAssignedJobResponse)(nil), "improbable.int.platform.scheduler.UpdateRunnerAssignedJobResponse")
	proto.RegisterType((*LogRunnerErrorRequest)(nil), "improbable.int.platform.scheduler.LogRunnerErrorRequest")
	proto.RegisterType((*LogRunnerErrorResponse)(nil), "improbable.int.platform.scheduler.LogRunnerErrorResponse")
	proto.RegisterType((*ReportBootMetricsRequest)(nil), "improbable.int.platform.scheduler.ReportBootMetricsRequest")
	proto.RegisterType((*ReportBootMetricsResponse)(nil), "improbable.int.platform.scheduler.ReportBootMetricsResponse")
}

func init() {
	proto.RegisterFile("improbable/int/platform/scheduler/runner.proto", fileDescriptor_0f849c8f3599db23)
}

var fileDescriptor_0f849c8f3599db23 = []byte{
	// 789 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x55, 0xdd, 0x8e, 0xdb, 0x44,
	0x14, 0xc6, 0xf9, 0xcf, 0xc9, 0x6e, 0xd6, 0x99, 0xaa, 0xad, 0x09, 0x52, 0x9b, 0x1a, 0x21, 0x72,
	0xc1, 0xda, 0x28, 0xbd, 0xa1, 0xb4, 0x02, 0x65, 0xd9, 0x80, 0x12, 0xd2, 0x50, 0x39, 0x09, 0x5c,
	0x1a, 0xff, 0xcc, 0x3a, 0xb3, 0xd8, 0x1e, 0x33, 0x33, 0x29, 0x4f, 0xc0, 0x0d, 0x17, 0x3c, 0x03,
	0xe2, 0x96, 0x67, 0xe0, 0x3d, 0xfa, 0x1c, 0xdc, 0x23, 0x21, 0x7b, 0x9c, 0x84, 0xa6, 0xbb, 0xac,
	0x95, 0x15, 0x52, 0xaf, 0x26, 0x73, 0xe6, 0x3b, 0x5f, 0xce, 0x77, 0xfe, 0x0c, 0x06, 0x89, 0x12,
	0x46, 0x5d, 0xc7, 0x0d, 0xb1, 0x49, 0x62, 0x61, 0x26, 0xa1, 0x23, 0x2e, 0x28, 0x8b, 0x4c, 0xee,
	0xad, 0xb0, 0xbf, 0x0e, 0x31, 0x33, 0xd9, 0x3a, 0x8e, 0x31, 0x33, 0x12, 0x46, 0x05, 0x45, 0x8f,
	0x76, 0x78, 0x83, 0xc4, 0xc2, 0xd8, 0xe0, 0x8d, 0x2d, 0xbe, 0xfb, 0x34, 0x20, 0x62, 0xb5, 0x76,
	0x0d, 0x8f, 0x46, 0xe6, 0x0e, 0x7d, 0x4a, 0xa8, 0x19, 0xd0, 0xd3, 0x8c, 0xe5, 0x34, 0xa4, 0xc1,
	0x05, 0xc1, 0xa1, 0xcf, 0xcd, 0xed, 0x2f, 0xc9, 0xdf, 0x7d, 0x18, 0x50, 0x1a, 0x84, 0xd8, 0xcc,
	0x6e, 0xee, 0xfa, 0xc2, 0x14, 0x24, 0xc2, 0x5c, 0x38, 0x51, 0x92, 0x03, 0x0a, 0x04, 0xec, 0xd1,
	0x28, 0xa2, 0xb1, 0xc4, 0xeb, 0xdf, 0xc2, 0xbd, 0xf9, 0xda, 0xe5, 0x1e, 0x23, 0x2e, 0xb6, 0x32,
	0x25, 0x16, 0xfe, 0x71, 0x8d, 0xb9, 0x40, 0xcf, 0xa0, 0x44, 0x7c, 0x4d, 0xe9, 0x29, 0xfd, 0xd6,
	0xe0, 0x23, 0xe3, 0x46, 0x5d, 0xc6, 0x73, 0xc7, 0x5b, 0x91, 0x18, 0x8f, 0x7d, 0xab, 0x44, 0x7c,
	0xfd, 0xaf, 0x32, 0xdc, 0x7f, 0x83, 0x98, 0x27, 0x34, 0xe6, 0x18, 0x7d, 0x0e, 0xb5, 0x4b, 0xea,
	0xda, 0xc4, 0xd7, 0x4a, 0x19, 0x7b, 0xbf, 0x00, 0xfb, 0x84, 0xba, 0x63, 0xdf, 0xaa, 0x5e, 0xa6,
	0x07, 0xfa, 0x00, 0x8e, 0x7c, 0xea, 0xfd, 0x80, 0x99, 0x4d, 0x22, 0x27, 0xc0, 0x5a, 0xb3, 0xa7,
	0xf4, 0x9b, 0x67, 0x25, 0x4d, 0xb1, 0x5a, 0xd2, 0x3e, 0x4e, 0xcd, 0xe8, 0x7d, 0xc8, 0xaf, 0xb6,
	0xc3, 0x02, 0xae, 0x41, 0xaf, 0x9c, 0xa3, 0x40, 0x9a, 0x87, 0x2c, 0xe0, 0x48, 0x07, 0x48, 0x18,
	0x79, 0x49, 0x42, 0x1c, 0x60, 0x5f, 0x6b, 0xf5, 0x94, 0x7e, 0x43, 0x62, 0x76, 0x56, 0x34, 0x80,
	0x3b, 0x11, 0x5d, 0xc7, 0xc2, 0xce, 0xe9, 0x78, 0x7a, 0x08, 0xed, 0x68, 0x0b, 0xee, 0x64, 0xcf,
	0xe7, 0xd9, 0xeb, 0x3c, 0x7b, 0x44, 0x4b, 0x38, 0x12, 0x0e, 0x0b, 0xb0, 0xb0, 0xb9, 0x70, 0x04,
	0xd6, 0x6a, 0x3d, 0xa5, 0xdf, 0x1e, 0x18, 0x05, 0xa4, 0x2e, 0x32, 0xb7, 0x79, 0xea, 0x25, 0x35,
	0x89, 0x9d, 0x01, 0x7d, 0x0f, 0x9d, 0x3c, 0x88, 0xc4, 0x61, 0x4e, 0x84, 0x05, 0x66, 0x5c, 0x3b,
	0xce, 0xd2, 0xf8, 0xb8, 0x00, 0xb7, 0x0c, 0xf1, 0xc5, 0xd6, 0xd5, 0x52, 0xfd, 0x3d, 0x0b, 0xfa,
	0x10, 0x4e, 0x7e, 0x5a, 0x11, 0x81, 0x43, 0xc2, 0x05, 0xf6, 0x6d, 0x92, 0x70, 0xad, 0x9d, 0x66,
	0xce, 0x6a, 0xff, 0xcb, 0x3c, 0x4e, 0xf8, 0xa4, 0xd2, 0x50, 0xd4, 0xd2, 0xa4, 0xd2, 0x28, 0xab,
	0xb5, 0x49, 0xa5, 0x51, 0x57, 0x9b, 0xfa, 0xab, 0x12, 0x3c, 0x58, 0x26, 0xbe, 0x23, 0xf2, 0x8a,
	0x0f, 0x39, 0x27, 0x41, 0x8c, 0xfd, 0x09, 0x75, 0x37, 0x5d, 0x35, 0x86, 0xa6, 0x1c, 0x18, 0xfb,
	0xc0, 0xe6, 0x6a, 0x48, 0xf7, 0xb1, 0x7f, 0xfb, 0x36, 0xba, 0x84, 0xaa, 0xac, 0x4d, 0x39, 0xab,
	0xcd, 0x57, 0x05, 0xfc, 0xff, 0x5b, 0x9d, 0x21, 0x8b, 0xd6, 0xfa, 0xfd, 0x8f, 0x07, 0xf5, 0x9c,
	0xdb, 0x92, 0x87, 0xfe, 0x19, 0x54, 0x65, 0x01, 0x3b, 0x70, 0xbc, 0x9c, 0x7d, 0x3d, 0xfb, 0xe6,
	0xbb, 0x99, 0x3d, 0x5f, 0x0c, 0x17, 0x23, 0xf5, 0x1d, 0xd4, 0x84, 0xea, 0x17, 0xd3, 0xd1, 0xd0,
	0x52, 0x15, 0x04, 0x50, 0x7b, 0xb1, 0x9c, 0x4e, 0x47, 0xe7, 0x6a, 0x09, 0xb5, 0xa0, 0x3e, 0x5f,
	0x0c, 0xad, 0xc5, 0xe8, 0x5c, 0x2d, 0xeb, 0x8f, 0xe0, 0xe1, 0xb5, 0xff, 0x2d, 0xc7, 0x4a, 0xff,
	0x53, 0x81, 0xbb, 0x53, 0x1a, 0x48, 0xc0, 0x88, 0x31, 0xca, 0xde, 0xc6, 0xa4, 0x6b, 0x50, 0x8f,
	0x30, 0xe7, 0xe9, 0xd8, 0xa6, 0x69, 0x6f, 0x5a, 0x9b, 0xab, 0xae, 0xc1, 0xbd, 0xfd, 0xf0, 0x73,
	0x65, 0x7f, 0x2b, 0xa0, 0x59, 0x38, 0xa1, 0x4c, 0x9c, 0x51, 0x2a, 0x9e, 0x63, 0xc1, 0x88, 0xc7,
	0xff, 0x07, 0x71, 0x5f, 0x42, 0x87, 0x72, 0xdb, 0xa5, 0x54, 0xd8, 0xdb, 0xbd, 0x9a, 0xeb, 0xec,
	0x1a, 0x72, 0xf3, 0x1a, 0x9b, 0xcd, 0x6b, 0x2c, 0x36, 0x08, 0xeb, 0x84, 0xf2, 0x34, 0xae, 0xad,
	0x01, 0xcd, 0xe0, 0x6e, 0x1e, 0xd2, 0x1e, 0x57, 0xf9, 0x46, 0xae, 0x3b, 0xd2, 0xf1, 0x35, 0x3e,
	0xfd, 0x3d, 0x78, 0xf7, 0x0a, 0xf9, 0x32, 0x39, 0x83, 0x57, 0x15, 0x38, 0x96, 0x49, 0x9b, 0x63,
	0xf6, 0x92, 0x78, 0x18, 0xfd, 0xa2, 0xc0, 0xc9, 0xde, 0xee, 0x45, 0x4f, 0x0a, 0xa4, 0xe4, 0xea,
	0x0f, 0x41, 0xf7, 0xd3, 0x43, 0x5c, 0x65, 0x70, 0x1f, 0x2b, 0xe8, 0x37, 0x05, 0xee, 0x5f, 0xd3,
	0xb9, 0x68, 0x78, 0xeb, 0x89, 0xeb, 0x9e, 0xdd, 0x86, 0x22, 0xff, 0x1e, 0xfd, 0xac, 0x40, 0xfb,
	0xf5, 0xce, 0x43, 0x9f, 0x14, 0xa0, 0xbd, 0x72, 0xd6, 0xba, 0x4f, 0x0e, 0xf0, 0xcc, 0xe3, 0xf8,
	0x55, 0x81, 0xce, 0x1b, 0x75, 0x46, 0x4f, 0x0b, 0x10, 0x5e, 0x37, 0x1c, 0xdd, 0x67, 0x87, 0x39,
	0xcb, 0x80, 0xdc, 0x5a, 0xd6, 0xa0, 0x8f, 0xff, 0x09, 0x00, 0x00, 0xff, 0xff, 0x54, 0x4f, 0x28,
	0x46, 0x06, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RunnerServiceClient is the client API for RunnerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RunnerServiceClient interface {
	SubscribeRunner(ctx context.Context, in *SubscribeRunnerRequest, opts ...grpc.CallOption) (RunnerService_SubscribeRunnerClient, error)
	UpdateRunnerAssignedJob(ctx context.Context, in *UpdateRunnerAssignedJobRequest, opts ...grpc.CallOption) (*UpdateRunnerAssignedJobResponse, error)
	LogRunnerError(ctx context.Context, in *LogRunnerErrorRequest, opts ...grpc.CallOption) (*LogRunnerErrorResponse, error)
	ReportBootMetrics(ctx context.Context, in *ReportBootMetricsRequest, opts ...grpc.CallOption) (*ReportBootMetricsResponse, error)
}

type runnerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRunnerServiceClient(cc grpc.ClientConnInterface) RunnerServiceClient {
	return &runnerServiceClient{cc}
}

func (c *runnerServiceClient) SubscribeRunner(ctx context.Context, in *SubscribeRunnerRequest, opts ...grpc.CallOption) (RunnerService_SubscribeRunnerClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RunnerService_serviceDesc.Streams[0], "/improbable.int.platform.scheduler.RunnerService/SubscribeRunner", opts...)
	if err != nil {
		return nil, err
	}
	x := &runnerServiceSubscribeRunnerClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RunnerService_SubscribeRunnerClient interface {
	Recv() (*SubscribeRunnerResponse, error)
	grpc.ClientStream
}

type runnerServiceSubscribeRunnerClient struct {
	grpc.ClientStream
}

func (x *runnerServiceSubscribeRunnerClient) Recv() (*SubscribeRunnerResponse, error) {
	m := new(SubscribeRunnerResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *runnerServiceClient) UpdateRunnerAssignedJob(ctx context.Context, in *UpdateRunnerAssignedJobRequest, opts ...grpc.CallOption) (*UpdateRunnerAssignedJobResponse, error) {
	out := new(UpdateRunnerAssignedJobResponse)
	err := c.cc.Invoke(ctx, "/improbable.int.platform.scheduler.RunnerService/UpdateRunnerAssignedJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runnerServiceClient) LogRunnerError(ctx context.Context, in *LogRunnerErrorRequest, opts ...grpc.CallOption) (*LogRunnerErrorResponse, error) {
	out := new(LogRunnerErrorResponse)
	err := c.cc.Invoke(ctx, "/improbable.int.platform.scheduler.RunnerService/LogRunnerError", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runnerServiceClient) ReportBootMetrics(ctx context.Context, in *ReportBootMetricsRequest, opts ...grpc.CallOption) (*ReportBootMetricsResponse, error) {
	out := new(ReportBootMetricsResponse)
	err := c.cc.Invoke(ctx, "/improbable.int.platform.scheduler.RunnerService/ReportBootMetrics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RunnerServiceServer is the server API for RunnerService service.
type RunnerServiceServer interface {
	SubscribeRunner(*SubscribeRunnerRequest, RunnerService_SubscribeRunnerServer) error
	UpdateRunnerAssignedJob(context.Context, *UpdateRunnerAssignedJobRequest) (*UpdateRunnerAssignedJobResponse, error)
	LogRunnerError(context.Context, *LogRunnerErrorRequest) (*LogRunnerErrorResponse, error)
	ReportBootMetrics(context.Context, *ReportBootMetricsRequest) (*ReportBootMetricsResponse, error)
}

// UnimplementedRunnerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRunnerServiceServer struct {
}

func (*UnimplementedRunnerServiceServer) SubscribeRunner(req *SubscribeRunnerRequest, srv RunnerService_SubscribeRunnerServer) error {
	return status.Errorf(codes.Unimplemented, "method SubscribeRunner not implemented")
}
func (*UnimplementedRunnerServiceServer) UpdateRunnerAssignedJob(ctx context.Context, req *UpdateRunnerAssignedJobRequest) (*UpdateRunnerAssignedJobResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRunnerAssignedJob not implemented")
}
func (*UnimplementedRunnerServiceServer) LogRunnerError(ctx context.Context, req *LogRunnerErrorRequest) (*LogRunnerErrorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LogRunnerError not implemented")
}
func (*UnimplementedRunnerServiceServer) ReportBootMetrics(ctx context.Context, req *ReportBootMetricsRequest) (*ReportBootMetricsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReportBootMetrics not implemented")
}

func RegisterRunnerServiceServer(s *grpc.Server, srv RunnerServiceServer) {
	s.RegisterService(&_RunnerService_serviceDesc, srv)
}

func _RunnerService_SubscribeRunner_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubscribeRunnerRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RunnerServiceServer).SubscribeRunner(m, &runnerServiceSubscribeRunnerServer{stream})
}

type RunnerService_SubscribeRunnerServer interface {
	Send(*SubscribeRunnerResponse) error
	grpc.ServerStream
}

type runnerServiceSubscribeRunnerServer struct {
	grpc.ServerStream
}

func (x *runnerServiceSubscribeRunnerServer) Send(m *SubscribeRunnerResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _RunnerService_UpdateRunnerAssignedJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRunnerAssignedJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RunnerServiceServer).UpdateRunnerAssignedJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.int.platform.scheduler.RunnerService/UpdateRunnerAssignedJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RunnerServiceServer).UpdateRunnerAssignedJob(ctx, req.(*UpdateRunnerAssignedJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RunnerService_LogRunnerError_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogRunnerErrorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RunnerServiceServer).LogRunnerError(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.int.platform.scheduler.RunnerService/LogRunnerError",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RunnerServiceServer).LogRunnerError(ctx, req.(*LogRunnerErrorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RunnerService_ReportBootMetrics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReportBootMetricsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RunnerServiceServer).ReportBootMetrics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.int.platform.scheduler.RunnerService/ReportBootMetrics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RunnerServiceServer).ReportBootMetrics(ctx, req.(*ReportBootMetricsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RunnerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "improbable.int.platform.scheduler.RunnerService",
	HandlerType: (*RunnerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateRunnerAssignedJob",
			Handler:    _RunnerService_UpdateRunnerAssignedJob_Handler,
		},
		{
			MethodName: "LogRunnerError",
			Handler:    _RunnerService_LogRunnerError_Handler,
		},
		{
			MethodName: "ReportBootMetrics",
			Handler:    _RunnerService_ReportBootMetrics_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SubscribeRunner",
			Handler:       _RunnerService_SubscribeRunner_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "improbable/int/platform/scheduler/runner.proto",
}
