// Code generated by protoc-gen-go. DO NOT EDIT.
// source: improbable/int/platform/scheduler/machines.proto

package improbable_int_platform_scheduler

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MachineState struct {
	Id                   *MachineId        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Size                 string            `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	LeaseId              int64             `protobuf:"varint,3,opt,name=lease_id,json=leaseId,proto3" json:"lease_id,omitempty"`
	Uuid                 string            `protobuf:"bytes,4,opt,name=uuid,proto3" json:"uuid,omitempty"`
	AssignedJob          *JobId            `protobuf:"bytes,5,opt,name=assigned_job,json=assignedJob,proto3" json:"assigned_job,omitempty"`
	Frozen               bool              `protobuf:"varint,6,opt,name=frozen,proto3" json:"frozen,omitempty"`
	Labels               map[string]string `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	InternalIpOnly       bool              `protobuf:"varint,8,opt,name=internal_ip_only,json=internalIpOnly,proto3" json:"internal_ip_only,omitempty"`
	CustomDiskImage      string            `protobuf:"bytes,9,opt,name=custom_disk_image,json=customDiskImage,proto3" json:"custom_disk_image,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MachineState) Reset()         { *m = MachineState{} }
func (m *MachineState) String() string { return proto.CompactTextString(m) }
func (*MachineState) ProtoMessage()    {}
func (*MachineState) Descriptor() ([]byte, []int) {
	return fileDescriptor_c36f7f9352f11252, []int{0}
}

func (m *MachineState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineState.Unmarshal(m, b)
}
func (m *MachineState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineState.Marshal(b, m, deterministic)
}
func (m *MachineState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineState.Merge(m, src)
}
func (m *MachineState) XXX_Size() int {
	return xxx_messageInfo_MachineState.Size(m)
}
func (m *MachineState) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineState.DiscardUnknown(m)
}

var xxx_messageInfo_MachineState proto.InternalMessageInfo

func (m *MachineState) GetId() *MachineId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *MachineState) GetSize() string {
	if m != nil {
		return m.Size
	}
	return ""
}

func (m *MachineState) GetLeaseId() int64 {
	if m != nil {
		return m.LeaseId
	}
	return 0
}

func (m *MachineState) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *MachineState) GetAssignedJob() *JobId {
	if m != nil {
		return m.AssignedJob
	}
	return nil
}

func (m *MachineState) GetFrozen() bool {
	if m != nil {
		return m.Frozen
	}
	return false
}

func (m *MachineState) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *MachineState) GetInternalIpOnly() bool {
	if m != nil {
		return m.InternalIpOnly
	}
	return false
}

func (m *MachineState) GetCustomDiskImage() string {
	if m != nil {
		return m.CustomDiskImage
	}
	return ""
}

type MachineReconcileState struct {
	Id                   *MachineId             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	LastSeenError        *MachineReconcileError `protobuf:"bytes,2,opt,name=lastSeenError,proto3" json:"lastSeenError,omitempty"`
	TimesSeen            int32                  `protobuf:"varint,3,opt,name=TimesSeen,proto3" json:"TimesSeen,omitempty"`
	TimeFirstSeen        int64                  `protobuf:"varint,5,opt,name=TimeFirstSeen,proto3" json:"TimeFirstSeen,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *MachineReconcileState) Reset()         { *m = MachineReconcileState{} }
func (m *MachineReconcileState) String() string { return proto.CompactTextString(m) }
func (*MachineReconcileState) ProtoMessage()    {}
func (*MachineReconcileState) Descriptor() ([]byte, []int) {
	return fileDescriptor_c36f7f9352f11252, []int{1}
}

func (m *MachineReconcileState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineReconcileState.Unmarshal(m, b)
}
func (m *MachineReconcileState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineReconcileState.Marshal(b, m, deterministic)
}
func (m *MachineReconcileState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineReconcileState.Merge(m, src)
}
func (m *MachineReconcileState) XXX_Size() int {
	return xxx_messageInfo_MachineReconcileState.Size(m)
}
func (m *MachineReconcileState) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineReconcileState.DiscardUnknown(m)
}

var xxx_messageInfo_MachineReconcileState proto.InternalMessageInfo

func (m *MachineReconcileState) GetId() *MachineId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *MachineReconcileState) GetLastSeenError() *MachineReconcileError {
	if m != nil {
		return m.LastSeenError
	}
	return nil
}

func (m *MachineReconcileState) GetTimesSeen() int32 {
	if m != nil {
		return m.TimesSeen
	}
	return 0
}

func (m *MachineReconcileState) GetTimeFirstSeen() int64 {
	if m != nil {
		return m.TimeFirstSeen
	}
	return 0
}

type MachineReconcileError struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MachineReconcileError) Reset()         { *m = MachineReconcileError{} }
func (m *MachineReconcileError) String() string { return proto.CompactTextString(m) }
func (*MachineReconcileError) ProtoMessage()    {}
func (*MachineReconcileError) Descriptor() ([]byte, []int) {
	return fileDescriptor_c36f7f9352f11252, []int{2}
}

func (m *MachineReconcileError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineReconcileError.Unmarshal(m, b)
}
func (m *MachineReconcileError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineReconcileError.Marshal(b, m, deterministic)
}
func (m *MachineReconcileError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineReconcileError.Merge(m, src)
}
func (m *MachineReconcileError) XXX_Size() int {
	return xxx_messageInfo_MachineReconcileError.Size(m)
}
func (m *MachineReconcileError) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineReconcileError.DiscardUnknown(m)
}

var xxx_messageInfo_MachineReconcileError proto.InternalMessageInfo

func (m *MachineReconcileError) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *MachineReconcileError) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type GetMachineStateRequest struct {
	Id                   *MachineId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetMachineStateRequest) Reset()         { *m = GetMachineStateRequest{} }
func (m *GetMachineStateRequest) String() string { return proto.CompactTextString(m) }
func (*GetMachineStateRequest) ProtoMessage()    {}
func (*GetMachineStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c36f7f9352f11252, []int{3}
}

func (m *GetMachineStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMachineStateRequest.Unmarshal(m, b)
}
func (m *GetMachineStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMachineStateRequest.Marshal(b, m, deterministic)
}
func (m *GetMachineStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMachineStateRequest.Merge(m, src)
}
func (m *GetMachineStateRequest) XXX_Size() int {
	return xxx_messageInfo_GetMachineStateRequest.Size(m)
}
func (m *GetMachineStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMachineStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMachineStateRequest proto.InternalMessageInfo

func (m *GetMachineStateRequest) GetId() *MachineId {
	if m != nil {
		return m.Id
	}
	return nil
}

type GetMachineStateResponse struct {
	State                *MachineState `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetMachineStateResponse) Reset()         { *m = GetMachineStateResponse{} }
func (m *GetMachineStateResponse) String() string { return proto.CompactTextString(m) }
func (*GetMachineStateResponse) ProtoMessage()    {}
func (*GetMachineStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c36f7f9352f11252, []int{4}
}

func (m *GetMachineStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMachineStateResponse.Unmarshal(m, b)
}
func (m *GetMachineStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMachineStateResponse.Marshal(b, m, deterministic)
}
func (m *GetMachineStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMachineStateResponse.Merge(m, src)
}
func (m *GetMachineStateResponse) XXX_Size() int {
	return xxx_messageInfo_GetMachineStateResponse.Size(m)
}
func (m *GetMachineStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMachineStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMachineStateResponse proto.InternalMessageInfo

func (m *GetMachineStateResponse) GetState() *MachineState {
	if m != nil {
		return m.State
	}
	return nil
}

type MintMachineForJobRequest struct {
	JobId                *JobId   `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MintMachineForJobRequest) Reset()         { *m = MintMachineForJobRequest{} }
func (m *MintMachineForJobRequest) String() string { return proto.CompactTextString(m) }
func (*MintMachineForJobRequest) ProtoMessage()    {}
func (*MintMachineForJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c36f7f9352f11252, []int{5}
}

func (m *MintMachineForJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MintMachineForJobRequest.Unmarshal(m, b)
}
func (m *MintMachineForJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MintMachineForJobRequest.Marshal(b, m, deterministic)
}
func (m *MintMachineForJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MintMachineForJobRequest.Merge(m, src)
}
func (m *MintMachineForJobRequest) XXX_Size() int {
	return xxx_messageInfo_MintMachineForJobRequest.Size(m)
}
func (m *MintMachineForJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MintMachineForJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MintMachineForJobRequest proto.InternalMessageInfo

func (m *MintMachineForJobRequest) GetJobId() *JobId {
	if m != nil {
		return m.JobId
	}
	return nil
}

type MintMachineForJobResponse struct {
	MachineId            *MachineId `protobuf:"bytes,1,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MintMachineForJobResponse) Reset()         { *m = MintMachineForJobResponse{} }
func (m *MintMachineForJobResponse) String() string { return proto.CompactTextString(m) }
func (*MintMachineForJobResponse) ProtoMessage()    {}
func (*MintMachineForJobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c36f7f9352f11252, []int{6}
}

func (m *MintMachineForJobResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MintMachineForJobResponse.Unmarshal(m, b)
}
func (m *MintMachineForJobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MintMachineForJobResponse.Marshal(b, m, deterministic)
}
func (m *MintMachineForJobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MintMachineForJobResponse.Merge(m, src)
}
func (m *MintMachineForJobResponse) XXX_Size() int {
	return xxx_messageInfo_MintMachineForJobResponse.Size(m)
}
func (m *MintMachineForJobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MintMachineForJobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MintMachineForJobResponse proto.InternalMessageInfo

func (m *MintMachineForJobResponse) GetMachineId() *MachineId {
	if m != nil {
		return m.MachineId
	}
	return nil
}

type RevokeMachineRequest struct {
	Id                   *MachineId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RevokeMachineRequest) Reset()         { *m = RevokeMachineRequest{} }
func (m *RevokeMachineRequest) String() string { return proto.CompactTextString(m) }
func (*RevokeMachineRequest) ProtoMessage()    {}
func (*RevokeMachineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c36f7f9352f11252, []int{7}
}

func (m *RevokeMachineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RevokeMachineRequest.Unmarshal(m, b)
}
func (m *RevokeMachineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RevokeMachineRequest.Marshal(b, m, deterministic)
}
func (m *RevokeMachineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RevokeMachineRequest.Merge(m, src)
}
func (m *RevokeMachineRequest) XXX_Size() int {
	return xxx_messageInfo_RevokeMachineRequest.Size(m)
}
func (m *RevokeMachineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RevokeMachineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RevokeMachineRequest proto.InternalMessageInfo

func (m *RevokeMachineRequest) GetId() *MachineId {
	if m != nil {
		return m.Id
	}
	return nil
}

type RevokeMachineResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RevokeMachineResponse) Reset()         { *m = RevokeMachineResponse{} }
func (m *RevokeMachineResponse) String() string { return proto.CompactTextString(m) }
func (*RevokeMachineResponse) ProtoMessage()    {}
func (*RevokeMachineResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c36f7f9352f11252, []int{8}
}

func (m *RevokeMachineResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RevokeMachineResponse.Unmarshal(m, b)
}
func (m *RevokeMachineResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RevokeMachineResponse.Marshal(b, m, deterministic)
}
func (m *RevokeMachineResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RevokeMachineResponse.Merge(m, src)
}
func (m *RevokeMachineResponse) XXX_Size() int {
	return xxx_messageInfo_RevokeMachineResponse.Size(m)
}
func (m *RevokeMachineResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RevokeMachineResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RevokeMachineResponse proto.InternalMessageInfo

type ClearMachineRequest struct {
	Id                   *MachineId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ClearMachineRequest) Reset()         { *m = ClearMachineRequest{} }
func (m *ClearMachineRequest) String() string { return proto.CompactTextString(m) }
func (*ClearMachineRequest) ProtoMessage()    {}
func (*ClearMachineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c36f7f9352f11252, []int{9}
}

func (m *ClearMachineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearMachineRequest.Unmarshal(m, b)
}
func (m *ClearMachineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearMachineRequest.Marshal(b, m, deterministic)
}
func (m *ClearMachineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearMachineRequest.Merge(m, src)
}
func (m *ClearMachineRequest) XXX_Size() int {
	return xxx_messageInfo_ClearMachineRequest.Size(m)
}
func (m *ClearMachineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearMachineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClearMachineRequest proto.InternalMessageInfo

func (m *ClearMachineRequest) GetId() *MachineId {
	if m != nil {
		return m.Id
	}
	return nil
}

type ClearMachineResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClearMachineResponse) Reset()         { *m = ClearMachineResponse{} }
func (m *ClearMachineResponse) String() string { return proto.CompactTextString(m) }
func (*ClearMachineResponse) ProtoMessage()    {}
func (*ClearMachineResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c36f7f9352f11252, []int{10}
}

func (m *ClearMachineResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearMachineResponse.Unmarshal(m, b)
}
func (m *ClearMachineResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearMachineResponse.Marshal(b, m, deterministic)
}
func (m *ClearMachineResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearMachineResponse.Merge(m, src)
}
func (m *ClearMachineResponse) XXX_Size() int {
	return xxx_messageInfo_ClearMachineResponse.Size(m)
}
func (m *ClearMachineResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearMachineResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClearMachineResponse proto.InternalMessageInfo

type WatchAssignedJobRequest struct {
	Id                   *MachineId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *WatchAssignedJobRequest) Reset()         { *m = WatchAssignedJobRequest{} }
func (m *WatchAssignedJobRequest) String() string { return proto.CompactTextString(m) }
func (*WatchAssignedJobRequest) ProtoMessage()    {}
func (*WatchAssignedJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c36f7f9352f11252, []int{11}
}

func (m *WatchAssignedJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchAssignedJobRequest.Unmarshal(m, b)
}
func (m *WatchAssignedJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchAssignedJobRequest.Marshal(b, m, deterministic)
}
func (m *WatchAssignedJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchAssignedJobRequest.Merge(m, src)
}
func (m *WatchAssignedJobRequest) XXX_Size() int {
	return xxx_messageInfo_WatchAssignedJobRequest.Size(m)
}
func (m *WatchAssignedJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchAssignedJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WatchAssignedJobRequest proto.InternalMessageInfo

func (m *WatchAssignedJobRequest) GetId() *MachineId {
	if m != nil {
		return m.Id
	}
	return nil
}

type WatchAssignedJobResponse struct {
	JobId                *JobId             `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Size                 string             `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
	SimulationPlaneId    *SimulationPlaneId `protobuf:"bytes,15,opt,name=simulation_plane_id,json=simulationPlaneId,proto3" json:"simulation_plane_id,omitempty"`
	Labels               map[string]string  `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	State                string             `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	TargetState          string             `protobuf:"bytes,6,opt,name=target_state,json=targetState,proto3" json:"target_state,omitempty"`
	AssignedMachine      *MachineId         `protobuf:"bytes,7,opt,name=assigned_machine,json=assignedMachine,proto3" json:"assigned_machine,omitempty"`
	AssignedIp           string             `protobuf:"bytes,8,opt,name=assigned_ip,json=assignedIp,proto3" json:"assigned_ip,omitempty"`
	AssignedExternalIp   string             `protobuf:"bytes,14,opt,name=assigned_external_ip,json=assignedExternalIp,proto3" json:"assigned_external_ip,omitempty"`
	DockerImage          string             `protobuf:"bytes,9,opt,name=docker_image,json=dockerImage,proto3" json:"docker_image,omitempty"`                       // Deprecated: Do not use.
	DockerArgs           []string           `protobuf:"bytes,10,rep,name=docker_args,json=dockerArgs,proto3" json:"docker_args,omitempty"`                         // Deprecated: Do not use.
	Privileged           bool               `protobuf:"varint,11,opt,name=privileged,proto3" json:"privileged,omitempty"`                                          // Deprecated: Do not use.
	MountDockerSocket    bool               `protobuf:"varint,12,opt,name=mount_docker_socket,json=mountDockerSocket,proto3" json:"mount_docker_socket,omitempty"` // Deprecated: Do not use.
	DockerParameters     *DockerParameters  `protobuf:"bytes,13,opt,name=docker_parameters,json=dockerParameters,proto3" json:"docker_parameters,omitempty"`
	WhitelistedIps       []string           `protobuf:"bytes,16,rep,name=whitelisted_ips,json=whitelistedIps,proto3" json:"whitelisted_ips,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *WatchAssignedJobResponse) Reset()         { *m = WatchAssignedJobResponse{} }
func (m *WatchAssignedJobResponse) String() string { return proto.CompactTextString(m) }
func (*WatchAssignedJobResponse) ProtoMessage()    {}
func (*WatchAssignedJobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c36f7f9352f11252, []int{12}
}

func (m *WatchAssignedJobResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchAssignedJobResponse.Unmarshal(m, b)
}
func (m *WatchAssignedJobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchAssignedJobResponse.Marshal(b, m, deterministic)
}
func (m *WatchAssignedJobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchAssignedJobResponse.Merge(m, src)
}
func (m *WatchAssignedJobResponse) XXX_Size() int {
	return xxx_messageInfo_WatchAssignedJobResponse.Size(m)
}
func (m *WatchAssignedJobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchAssignedJobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WatchAssignedJobResponse proto.InternalMessageInfo

func (m *WatchAssignedJobResponse) GetJobId() *JobId {
	if m != nil {
		return m.JobId
	}
	return nil
}

func (m *WatchAssignedJobResponse) GetSize() string {
	if m != nil {
		return m.Size
	}
	return ""
}

func (m *WatchAssignedJobResponse) GetSimulationPlaneId() *SimulationPlaneId {
	if m != nil {
		return m.SimulationPlaneId
	}
	return nil
}

func (m *WatchAssignedJobResponse) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *WatchAssignedJobResponse) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *WatchAssignedJobResponse) GetTargetState() string {
	if m != nil {
		return m.TargetState
	}
	return ""
}

func (m *WatchAssignedJobResponse) GetAssignedMachine() *MachineId {
	if m != nil {
		return m.AssignedMachine
	}
	return nil
}

func (m *WatchAssignedJobResponse) GetAssignedIp() string {
	if m != nil {
		return m.AssignedIp
	}
	return ""
}

func (m *WatchAssignedJobResponse) GetAssignedExternalIp() string {
	if m != nil {
		return m.AssignedExternalIp
	}
	return ""
}

// Deprecated: Do not use.
func (m *WatchAssignedJobResponse) GetDockerImage() string {
	if m != nil {
		return m.DockerImage
	}
	return ""
}

// Deprecated: Do not use.
func (m *WatchAssignedJobResponse) GetDockerArgs() []string {
	if m != nil {
		return m.DockerArgs
	}
	return nil
}

// Deprecated: Do not use.
func (m *WatchAssignedJobResponse) GetPrivileged() bool {
	if m != nil {
		return m.Privileged
	}
	return false
}

// Deprecated: Do not use.
func (m *WatchAssignedJobResponse) GetMountDockerSocket() bool {
	if m != nil {
		return m.MountDockerSocket
	}
	return false
}

func (m *WatchAssignedJobResponse) GetDockerParameters() *DockerParameters {
	if m != nil {
		return m.DockerParameters
	}
	return nil
}

func (m *WatchAssignedJobResponse) GetWhitelistedIps() []string {
	if m != nil {
		return m.WhitelistedIps
	}
	return nil
}

type ListMachinesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListMachinesRequest) Reset()         { *m = ListMachinesRequest{} }
func (m *ListMachinesRequest) String() string { return proto.CompactTextString(m) }
func (*ListMachinesRequest) ProtoMessage()    {}
func (*ListMachinesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c36f7f9352f11252, []int{13}
}

func (m *ListMachinesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMachinesRequest.Unmarshal(m, b)
}
func (m *ListMachinesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMachinesRequest.Marshal(b, m, deterministic)
}
func (m *ListMachinesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMachinesRequest.Merge(m, src)
}
func (m *ListMachinesRequest) XXX_Size() int {
	return xxx_messageInfo_ListMachinesRequest.Size(m)
}
func (m *ListMachinesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMachinesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListMachinesRequest proto.InternalMessageInfo

type ListMachinesResponse struct {
	Machines             []*MachineState `protobuf:"bytes,1,rep,name=machines,proto3" json:"machines,omitempty"`
	Revision             int64           `protobuf:"varint,2,opt,name=revision,proto3" json:"revision,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListMachinesResponse) Reset()         { *m = ListMachinesResponse{} }
func (m *ListMachinesResponse) String() string { return proto.CompactTextString(m) }
func (*ListMachinesResponse) ProtoMessage()    {}
func (*ListMachinesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c36f7f9352f11252, []int{14}
}

func (m *ListMachinesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMachinesResponse.Unmarshal(m, b)
}
func (m *ListMachinesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMachinesResponse.Marshal(b, m, deterministic)
}
func (m *ListMachinesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMachinesResponse.Merge(m, src)
}
func (m *ListMachinesResponse) XXX_Size() int {
	return xxx_messageInfo_ListMachinesResponse.Size(m)
}
func (m *ListMachinesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMachinesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListMachinesResponse proto.InternalMessageInfo

func (m *ListMachinesResponse) GetMachines() []*MachineState {
	if m != nil {
		return m.Machines
	}
	return nil
}

func (m *ListMachinesResponse) GetRevision() int64 {
	if m != nil {
		return m.Revision
	}
	return 0
}

type FreezeMachineRequest struct {
	Id                   *MachineId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *FreezeMachineRequest) Reset()         { *m = FreezeMachineRequest{} }
func (m *FreezeMachineRequest) String() string { return proto.CompactTextString(m) }
func (*FreezeMachineRequest) ProtoMessage()    {}
func (*FreezeMachineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c36f7f9352f11252, []int{15}
}

func (m *FreezeMachineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FreezeMachineRequest.Unmarshal(m, b)
}
func (m *FreezeMachineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FreezeMachineRequest.Marshal(b, m, deterministic)
}
func (m *FreezeMachineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FreezeMachineRequest.Merge(m, src)
}
func (m *FreezeMachineRequest) XXX_Size() int {
	return xxx_messageInfo_FreezeMachineRequest.Size(m)
}
func (m *FreezeMachineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FreezeMachineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FreezeMachineRequest proto.InternalMessageInfo

func (m *FreezeMachineRequest) GetId() *MachineId {
	if m != nil {
		return m.Id
	}
	return nil
}

type FreezeMachineResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FreezeMachineResponse) Reset()         { *m = FreezeMachineResponse{} }
func (m *FreezeMachineResponse) String() string { return proto.CompactTextString(m) }
func (*FreezeMachineResponse) ProtoMessage()    {}
func (*FreezeMachineResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c36f7f9352f11252, []int{16}
}

func (m *FreezeMachineResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FreezeMachineResponse.Unmarshal(m, b)
}
func (m *FreezeMachineResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FreezeMachineResponse.Marshal(b, m, deterministic)
}
func (m *FreezeMachineResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FreezeMachineResponse.Merge(m, src)
}
func (m *FreezeMachineResponse) XXX_Size() int {
	return xxx_messageInfo_FreezeMachineResponse.Size(m)
}
func (m *FreezeMachineResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FreezeMachineResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FreezeMachineResponse proto.InternalMessageInfo

type UnfreezeMachineRequest struct {
	Id                   *MachineId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UnfreezeMachineRequest) Reset()         { *m = UnfreezeMachineRequest{} }
func (m *UnfreezeMachineRequest) String() string { return proto.CompactTextString(m) }
func (*UnfreezeMachineRequest) ProtoMessage()    {}
func (*UnfreezeMachineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c36f7f9352f11252, []int{17}
}

func (m *UnfreezeMachineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnfreezeMachineRequest.Unmarshal(m, b)
}
func (m *UnfreezeMachineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnfreezeMachineRequest.Marshal(b, m, deterministic)
}
func (m *UnfreezeMachineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnfreezeMachineRequest.Merge(m, src)
}
func (m *UnfreezeMachineRequest) XXX_Size() int {
	return xxx_messageInfo_UnfreezeMachineRequest.Size(m)
}
func (m *UnfreezeMachineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnfreezeMachineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnfreezeMachineRequest proto.InternalMessageInfo

func (m *UnfreezeMachineRequest) GetId() *MachineId {
	if m != nil {
		return m.Id
	}
	return nil
}

type UnfreezeMachineResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnfreezeMachineResponse) Reset()         { *m = UnfreezeMachineResponse{} }
func (m *UnfreezeMachineResponse) String() string { return proto.CompactTextString(m) }
func (*UnfreezeMachineResponse) ProtoMessage()    {}
func (*UnfreezeMachineResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c36f7f9352f11252, []int{18}
}

func (m *UnfreezeMachineResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnfreezeMachineResponse.Unmarshal(m, b)
}
func (m *UnfreezeMachineResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnfreezeMachineResponse.Marshal(b, m, deterministic)
}
func (m *UnfreezeMachineResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnfreezeMachineResponse.Merge(m, src)
}
func (m *UnfreezeMachineResponse) XXX_Size() int {
	return xxx_messageInfo_UnfreezeMachineResponse.Size(m)
}
func (m *UnfreezeMachineResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UnfreezeMachineResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UnfreezeMachineResponse proto.InternalMessageInfo

type UpdateMachineReconcileStateRequest struct {
	Id                   *MachineId             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Error                *MachineReconcileError `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *UpdateMachineReconcileStateRequest) Reset()         { *m = UpdateMachineReconcileStateRequest{} }
func (m *UpdateMachineReconcileStateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateMachineReconcileStateRequest) ProtoMessage()    {}
func (*UpdateMachineReconcileStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c36f7f9352f11252, []int{19}
}

func (m *UpdateMachineReconcileStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateMachineReconcileStateRequest.Unmarshal(m, b)
}
func (m *UpdateMachineReconcileStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateMachineReconcileStateRequest.Marshal(b, m, deterministic)
}
func (m *UpdateMachineReconcileStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateMachineReconcileStateRequest.Merge(m, src)
}
func (m *UpdateMachineReconcileStateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateMachineReconcileStateRequest.Size(m)
}
func (m *UpdateMachineReconcileStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateMachineReconcileStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateMachineReconcileStateRequest proto.InternalMessageInfo

func (m *UpdateMachineReconcileStateRequest) GetId() *MachineId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UpdateMachineReconcileStateRequest) GetError() *MachineReconcileError {
	if m != nil {
		return m.Error
	}
	return nil
}

type UpdateMachineReconcileStateResponse struct {
	State                *MachineReconcileState `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *UpdateMachineReconcileStateResponse) Reset()         { *m = UpdateMachineReconcileStateResponse{} }
func (m *UpdateMachineReconcileStateResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateMachineReconcileStateResponse) ProtoMessage()    {}
func (*UpdateMachineReconcileStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c36f7f9352f11252, []int{20}
}

func (m *UpdateMachineReconcileStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateMachineReconcileStateResponse.Unmarshal(m, b)
}
func (m *UpdateMachineReconcileStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateMachineReconcileStateResponse.Marshal(b, m, deterministic)
}
func (m *UpdateMachineReconcileStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateMachineReconcileStateResponse.Merge(m, src)
}
func (m *UpdateMachineReconcileStateResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateMachineReconcileStateResponse.Size(m)
}
func (m *UpdateMachineReconcileStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateMachineReconcileStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateMachineReconcileStateResponse proto.InternalMessageInfo

func (m *UpdateMachineReconcileStateResponse) GetState() *MachineReconcileState {
	if m != nil {
		return m.State
	}
	return nil
}

type GetMachineReconcileStateRequest struct {
	Id                   *MachineId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetMachineReconcileStateRequest) Reset()         { *m = GetMachineReconcileStateRequest{} }
func (m *GetMachineReconcileStateRequest) String() string { return proto.CompactTextString(m) }
func (*GetMachineReconcileStateRequest) ProtoMessage()    {}
func (*GetMachineReconcileStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c36f7f9352f11252, []int{21}
}

func (m *GetMachineReconcileStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMachineReconcileStateRequest.Unmarshal(m, b)
}
func (m *GetMachineReconcileStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMachineReconcileStateRequest.Marshal(b, m, deterministic)
}
func (m *GetMachineReconcileStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMachineReconcileStateRequest.Merge(m, src)
}
func (m *GetMachineReconcileStateRequest) XXX_Size() int {
	return xxx_messageInfo_GetMachineReconcileStateRequest.Size(m)
}
func (m *GetMachineReconcileStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMachineReconcileStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMachineReconcileStateRequest proto.InternalMessageInfo

func (m *GetMachineReconcileStateRequest) GetId() *MachineId {
	if m != nil {
		return m.Id
	}
	return nil
}

type GetMachineReconcileStateResponse struct {
	State                *MachineReconcileState `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetMachineReconcileStateResponse) Reset()         { *m = GetMachineReconcileStateResponse{} }
func (m *GetMachineReconcileStateResponse) String() string { return proto.CompactTextString(m) }
func (*GetMachineReconcileStateResponse) ProtoMessage()    {}
func (*GetMachineReconcileStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c36f7f9352f11252, []int{22}
}

func (m *GetMachineReconcileStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMachineReconcileStateResponse.Unmarshal(m, b)
}
func (m *GetMachineReconcileStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMachineReconcileStateResponse.Marshal(b, m, deterministic)
}
func (m *GetMachineReconcileStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMachineReconcileStateResponse.Merge(m, src)
}
func (m *GetMachineReconcileStateResponse) XXX_Size() int {
	return xxx_messageInfo_GetMachineReconcileStateResponse.Size(m)
}
func (m *GetMachineReconcileStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMachineReconcileStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMachineReconcileStateResponse proto.InternalMessageInfo

func (m *GetMachineReconcileStateResponse) GetState() *MachineReconcileState {
	if m != nil {
		return m.State
	}
	return nil
}

func init() {
	proto.RegisterType((*MachineState)(nil), "improbable.int.platform.scheduler.MachineState")
	proto.RegisterMapType((map[string]string)(nil), "improbable.int.platform.scheduler.MachineState.LabelsEntry")
	proto.RegisterType((*MachineReconcileState)(nil), "improbable.int.platform.scheduler.MachineReconcileState")
	proto.RegisterType((*MachineReconcileError)(nil), "improbable.int.platform.scheduler.MachineReconcileError")
	proto.RegisterType((*GetMachineStateRequest)(nil), "improbable.int.platform.scheduler.GetMachineStateRequest")
	proto.RegisterType((*GetMachineStateResponse)(nil), "improbable.int.platform.scheduler.GetMachineStateResponse")
	proto.RegisterType((*MintMachineForJobRequest)(nil), "improbable.int.platform.scheduler.MintMachineForJobRequest")
	proto.RegisterType((*MintMachineForJobResponse)(nil), "improbable.int.platform.scheduler.MintMachineForJobResponse")
	proto.RegisterType((*RevokeMachineRequest)(nil), "improbable.int.platform.scheduler.RevokeMachineRequest")
	proto.RegisterType((*RevokeMachineResponse)(nil), "improbable.int.platform.scheduler.RevokeMachineResponse")
	proto.RegisterType((*ClearMachineRequest)(nil), "improbable.int.platform.scheduler.ClearMachineRequest")
	proto.RegisterType((*ClearMachineResponse)(nil), "improbable.int.platform.scheduler.ClearMachineResponse")
	proto.RegisterType((*WatchAssignedJobRequest)(nil), "improbable.int.platform.scheduler.WatchAssignedJobRequest")
	proto.RegisterType((*WatchAssignedJobResponse)(nil), "improbable.int.platform.scheduler.WatchAssignedJobResponse")
	proto.RegisterMapType((map[string]string)(nil), "improbable.int.platform.scheduler.WatchAssignedJobResponse.LabelsEntry")
	proto.RegisterType((*ListMachinesRequest)(nil), "improbable.int.platform.scheduler.ListMachinesRequest")
	proto.RegisterType((*ListMachinesResponse)(nil), "improbable.int.platform.scheduler.ListMachinesResponse")
	proto.RegisterType((*FreezeMachineRequest)(nil), "improbable.int.platform.scheduler.FreezeMachineRequest")
	proto.RegisterType((*FreezeMachineResponse)(nil), "improbable.int.platform.scheduler.FreezeMachineResponse")
	proto.RegisterType((*UnfreezeMachineRequest)(nil), "improbable.int.platform.scheduler.UnfreezeMachineRequest")
	proto.RegisterType((*UnfreezeMachineResponse)(nil), "improbable.int.platform.scheduler.UnfreezeMachineResponse")
	proto.RegisterType((*UpdateMachineReconcileStateRequest)(nil), "improbable.int.platform.scheduler.UpdateMachineReconcileStateRequest")
	proto.RegisterType((*UpdateMachineReconcileStateResponse)(nil), "improbable.int.platform.scheduler.UpdateMachineReconcileStateResponse")
	proto.RegisterType((*GetMachineReconcileStateRequest)(nil), "improbable.int.platform.scheduler.GetMachineReconcileStateRequest")
	proto.RegisterType((*GetMachineReconcileStateResponse)(nil), "improbable.int.platform.scheduler.GetMachineReconcileStateResponse")
}

func init() {
	proto.RegisterFile("improbable/int/platform/scheduler/machines.proto", fileDescriptor_c36f7f9352f11252)
}

var fileDescriptor_c36f7f9352f11252 = []byte{
	// 1259 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0x4b, 0x6f, 0xdb, 0xc6,
	0x13, 0x07, 0xf5, 0xb2, 0x34, 0x92, 0x63, 0x79, 0xad, 0xd8, 0x8c, 0xfe, 0x7f, 0x20, 0x0a, 0xd3,
	0xa2, 0x42, 0x51, 0xc8, 0x81, 0x52, 0x34, 0x4f, 0xa0, 0xc8, 0xc3, 0x0e, 0xa4, 0xc4, 0x69, 0x40,
	0x25, 0xf1, 0xa1, 0x40, 0x59, 0x4a, 0x5c, 0xcb, 0x6b, 0x93, 0x5c, 0x76, 0x97, 0x72, 0x6d, 0x5f,
	0x02, 0x14, 0x28, 0xd0, 0x4b, 0xfb, 0x25, 0x7a, 0xed, 0x29, 0x1f, 0xa7, 0xdf, 0xa4, 0xb7, 0x82,
	0xcb, 0x25, 0xf5, 0x30, 0x1d, 0xd3, 0xb2, 0x7a, 0x12, 0x77, 0x76, 0xe7, 0x37, 0x8f, 0x9d, 0x9d,
	0xdf, 0xd8, 0x70, 0x87, 0x38, 0x1e, 0xa3, 0x7d, 0xb3, 0x6f, 0xe3, 0x4d, 0xe2, 0xfa, 0x9b, 0x9e,
	0x6d, 0xfa, 0x7b, 0x94, 0x39, 0x9b, 0x7c, 0xb0, 0x8f, 0xad, 0x91, 0x8d, 0xd9, 0xa6, 0x63, 0x0e,
	0xf6, 0x89, 0x8b, 0x79, 0xcb, 0x63, 0xd4, 0xa7, 0xe8, 0xd6, 0x58, 0xa3, 0x45, 0x5c, 0xbf, 0x15,
	0x69, 0xb4, 0x62, 0x8d, 0x7a, 0xeb, 0x62, 0xd0, 0x01, 0x75, 0x1c, 0xea, 0x86, 0x90, 0xda, 0xdf,
	0x59, 0xa8, 0xec, 0x84, 0x56, 0x7a, 0xbe, 0xe9, 0x63, 0xf4, 0x18, 0x32, 0xc4, 0x52, 0x95, 0x86,
	0xd2, 0x2c, 0xb7, 0xbf, 0x6a, 0x5d, 0x68, 0xb0, 0x25, 0x95, 0x3b, 0x96, 0x9e, 0x21, 0x16, 0x42,
	0x90, 0xe3, 0xe4, 0x14, 0xab, 0x99, 0x86, 0xd2, 0x2c, 0xe9, 0xe2, 0x1b, 0xdd, 0x80, 0xa2, 0x8d,
	0x4d, 0x8e, 0x0d, 0x62, 0xa9, 0xd9, 0x86, 0xd2, 0xcc, 0xea, 0x4b, 0x62, 0xdd, 0x11, 0xc7, 0x47,
	0x23, 0x62, 0xa9, 0xb9, 0xf0, 0x78, 0xf0, 0x8d, 0x5e, 0x42, 0xc5, 0xe4, 0x9c, 0x0c, 0x5d, 0x6c,
	0x19, 0x07, 0xb4, 0xaf, 0xe6, 0x85, 0x2b, 0xcd, 0x14, 0xae, 0x74, 0x69, 0xbf, 0x63, 0xe9, 0xe5,
	0x48, 0xbb, 0x4b, 0xfb, 0x68, 0x1d, 0x0a, 0x7b, 0x8c, 0x9e, 0x62, 0x57, 0x2d, 0x34, 0x94, 0x66,
	0x51, 0x97, 0x2b, 0xd4, 0x83, 0x82, 0x6d, 0xf6, 0xb1, 0xcd, 0xd5, 0xa5, 0x46, 0xb6, 0x59, 0x6e,
	0x3f, 0x4a, 0x1f, 0xa9, 0x48, 0x53, 0xeb, 0x95, 0xd0, 0xde, 0x72, 0x7d, 0x76, 0xa2, 0x4b, 0x28,
	0xd4, 0x84, 0x2a, 0x71, 0x7d, 0xcc, 0x5c, 0xd3, 0x36, 0x88, 0x67, 0x50, 0xd7, 0x3e, 0x51, 0x8b,
	0xc2, 0xec, 0xb5, 0x48, 0xde, 0xf1, 0xbe, 0x73, 0xed, 0x13, 0xf4, 0x25, 0xac, 0x0e, 0x46, 0xdc,
	0xa7, 0x8e, 0x61, 0x11, 0x7e, 0x68, 0x10, 0xc7, 0x1c, 0x62, 0xb5, 0x24, 0x92, 0xb0, 0x12, 0x6e,
	0x3c, 0x27, 0xfc, 0xb0, 0x13, 0x88, 0xeb, 0x0f, 0xa0, 0x3c, 0x61, 0x0c, 0x55, 0x21, 0x7b, 0x88,
	0x4f, 0xc4, 0x05, 0x95, 0xf4, 0xe0, 0x13, 0xd5, 0x20, 0x7f, 0x64, 0xda, 0xa3, 0x28, 0xe9, 0xe1,
	0xe2, 0x61, 0xe6, 0xbe, 0xa2, 0xfd, 0xa3, 0xc0, 0x75, 0xe9, 0xb5, 0x8e, 0x07, 0xd4, 0x1d, 0x10,
	0x7b, 0x21, 0xb7, 0xfc, 0x03, 0x2c, 0xdb, 0x26, 0xf7, 0x7b, 0x18, 0xbb, 0x5b, 0x8c, 0x51, 0x26,
	0x2c, 0x97, 0xdb, 0xf7, 0xd3, 0x03, 0xc5, 0xee, 0x08, 0x7d, 0x7d, 0x1a, 0x0e, 0xfd, 0x1f, 0x4a,
	0x6f, 0x89, 0x83, 0x79, 0x20, 0x11, 0x25, 0x93, 0xd7, 0xc7, 0x02, 0xf4, 0x19, 0x2c, 0x07, 0x8b,
	0x6d, 0xc2, 0x42, 0x1d, 0x51, 0x21, 0x59, 0x7d, 0x5a, 0xa8, 0xed, 0x9c, 0x0d, 0x3d, 0x04, 0x47,
	0x90, 0x1b, 0x50, 0x0b, 0x8b, 0xe0, 0xf3, 0xba, 0xf8, 0x46, 0x0d, 0x28, 0x5b, 0x98, 0x0f, 0x18,
	0xf1, 0x7c, 0x42, 0x5d, 0x99, 0xc8, 0x49, 0x91, 0xf6, 0x1e, 0xd6, 0x5f, 0x60, 0x7f, 0xb2, 0x04,
	0x74, 0xfc, 0xd3, 0x08, 0x73, 0xff, 0x6a, 0xa9, 0xd4, 0x8e, 0x61, 0xe3, 0x0c, 0x2e, 0xf7, 0xa8,
	0xcb, 0x31, 0xda, 0x82, 0x3c, 0x0f, 0x04, 0xa2, 0x74, 0xcb, 0xed, 0xcd, 0x4b, 0x96, 0xa8, 0x1e,
	0x6a, 0x77, 0x73, 0x45, 0xa5, 0x9a, 0xe9, 0xe6, 0x8a, 0x99, 0x6a, 0xb6, 0x9b, 0x2b, 0x66, 0xab,
	0xb9, 0x6e, 0xae, 0x98, 0xaf, 0x16, 0xb4, 0xef, 0x41, 0xdd, 0x21, 0x6e, 0x64, 0x7a, 0x9b, 0xb2,
	0x2e, 0xed, 0x47, 0x31, 0x7d, 0x0b, 0x85, 0x03, 0xda, 0x37, 0xe2, 0xb8, 0xd2, 0xbf, 0xbe, 0xfc,
	0x41, 0xf0, 0xa3, 0xed, 0xc3, 0x8d, 0x04, 0x70, 0x19, 0xd8, 0x4b, 0x00, 0xd9, 0xd8, 0x8c, 0x39,
	0x33, 0x57, 0x72, 0xa2, 0x4f, 0xed, 0x2d, 0xd4, 0x74, 0x7c, 0x44, 0x0f, 0x71, 0x7c, 0xdb, 0x8b,
	0xb8, 0x96, 0x0d, 0xb8, 0x3e, 0x83, 0x1a, 0xfa, 0xae, 0xf5, 0x60, 0xed, 0x99, 0x8d, 0x4d, 0xb6,
	0x50, 0x6b, 0xeb, 0x50, 0x9b, 0x06, 0x95, 0xc6, 0x76, 0x61, 0x63, 0xd7, 0xf4, 0x07, 0xfb, 0x4f,
	0xc6, 0x1d, 0x6d, 0x31, 0x06, 0x7f, 0x5d, 0x02, 0xf5, 0x2c, 0xb2, 0xbc, 0x9e, 0xf1, 0xe5, 0x67,
	0xe6, 0xba, 0xfc, 0x98, 0x04, 0xb2, 0x13, 0x24, 0x60, 0xc1, 0x1a, 0x27, 0xce, 0xc8, 0x36, 0x83,
	0xd7, 0x64, 0x78, 0xb6, 0x19, 0x5e, 0xfe, 0x8a, 0xb0, 0xf0, 0x75, 0x0a, 0x0b, 0xbd, 0x58, 0xfb,
	0x4d, 0xa0, 0xdc, 0xb1, 0xf4, 0x55, 0x3e, 0x2b, 0x42, 0x46, 0xdc, 0xd6, 0x73, 0xa2, 0xad, 0xbf,
	0x48, 0x01, 0x7c, 0x5e, 0x1e, 0x12, 0x5b, 0x7c, 0x2d, 0x7a, 0x93, 0xf9, 0xb0, 0xd7, 0x8a, 0x05,
	0xba, 0x05, 0x15, 0xdf, 0x64, 0x43, 0xec, 0x1b, 0xe3, 0x07, 0x5b, 0xd2, 0xcb, 0xa1, 0x2c, 0x6c,
	0xb8, 0xbb, 0x50, 0x8d, 0x59, 0x4d, 0x16, 0xaf, 0xba, 0x34, 0xc7, 0xed, 0xad, 0x44, 0x28, 0x52,
	0x84, 0x6e, 0x42, 0x4c, 0x78, 0x06, 0xf1, 0x04, 0xdf, 0x94, 0x74, 0x88, 0x44, 0x1d, 0x0f, 0xdd,
	0x81, 0x5a, 0x7c, 0x00, 0x1f, 0xc7, 0xf4, 0xa4, 0x5e, 0x13, 0x27, 0x51, 0xb4, 0xb7, 0x75, 0x1c,
	0x31, 0x14, 0xfa, 0x1c, 0x2a, 0x16, 0x1d, 0x1c, 0x62, 0x36, 0x49, 0x4c, 0x4f, 0x33, 0xaa, 0xa2,
	0x97, 0x43, 0xb9, 0x20, 0x26, 0x74, 0x1b, 0xe4, 0xd2, 0x30, 0xd9, 0x90, 0xab, 0xd0, 0xc8, 0xca,
	0x53, 0x10, 0x8a, 0x9f, 0xb0, 0x21, 0x47, 0x1a, 0x80, 0xc7, 0xc8, 0x11, 0xb1, 0xf1, 0x10, 0x5b,
	0x6a, 0x39, 0x60, 0xc3, 0xf0, 0xcc, 0x58, 0x8a, 0xda, 0xb0, 0xe6, 0xd0, 0x91, 0xeb, 0x1b, 0x12,
	0x8e, 0x07, 0x3f, 0xbe, 0x5a, 0x89, 0x0f, 0xaf, 0x8a, 0xed, 0xe7, 0x62, 0xb7, 0x27, 0x36, 0xd1,
	0x8f, 0xb0, 0x2a, 0x4f, 0x7b, 0x26, 0x33, 0x1d, 0xec, 0x63, 0xc6, 0xd5, 0x65, 0x91, 0xd0, 0xbb,
	0x29, 0x12, 0x1a, 0x62, 0xbd, 0x89, 0x55, 0xf5, 0xaa, 0x35, 0x23, 0x41, 0x5f, 0xc0, 0xca, 0xcf,
	0xfb, 0xc4, 0xc7, 0x36, 0xe1, 0xbe, 0xc8, 0x2d, 0x57, 0xab, 0x41, 0x88, 0xfa, 0xb5, 0x09, 0x71,
	0xc7, 0xe3, 0x57, 0x21, 0xe8, 0xeb, 0xb0, 0xf6, 0x8a, 0xf0, 0xa8, 0x4d, 0x72, 0xf9, 0xb8, 0xb5,
	0x0f, 0x50, 0x9b, 0x16, 0xc7, 0x8d, 0xb3, 0x18, 0x4d, 0x84, 0xaa, 0x22, 0x0a, 0xfc, 0xd2, 0xa4,
	0x10, 0x03, 0xa0, 0x3a, 0x14, 0x19, 0x3e, 0x22, 0x3c, 0x22, 0xbc, 0xac, 0x1e, 0xaf, 0x83, 0xa6,
	0xba, 0xcd, 0x30, 0x3e, 0x5d, 0x78, 0x53, 0x9d, 0x41, 0x95, 0x7d, 0xee, 0x3d, 0xac, 0xbf, 0x73,
	0xf7, 0x16, 0x6f, 0xf0, 0x06, 0x6c, 0x9c, 0xc1, 0x95, 0x26, 0x3f, 0x2a, 0xa0, 0xbd, 0xf3, 0x2c,
	0xd3, 0xc7, 0x89, 0x03, 0xd2, 0x42, 0xec, 0xa3, 0xd7, 0x90, 0xc7, 0x0b, 0x99, 0x8f, 0x42, 0x18,
	0x6d, 0x04, 0xb7, 0x3f, 0xe9, 0xb3, 0x2c, 0x93, 0xd7, 0x51, 0x93, 0x52, 0xe6, 0x36, 0x3b, 0x39,
	0x41, 0x68, 0x06, 0xdc, 0x1c, 0xcf, 0x28, 0xff, 0x41, 0x9e, 0x34, 0x06, 0x8d, 0xf3, 0x0d, 0xcc,
	0x06, 0x95, 0x59, 0x48, 0x50, 0xed, 0x8f, 0x65, 0x50, 0x7b, 0xd1, 0xd1, 0xe8, 0xa5, 0xf5, 0x30,
	0x3b, 0x22, 0x03, 0x8c, 0x7e, 0x53, 0x60, 0x65, 0x66, 0x2c, 0x43, 0x0f, 0x52, 0x58, 0x4c, 0x1e,
	0x11, 0xeb, 0x0f, 0xe7, 0x51, 0x95, 0x71, 0xff, 0xa1, 0xc0, 0xea, 0x99, 0x51, 0x0a, 0xa5, 0xfa,
	0x7b, 0xe5, 0x9c, 0xe9, 0xae, 0xfe, 0x78, 0x3e, 0x65, 0xe9, 0xd0, 0x2f, 0x0a, 0x2c, 0x4f, 0xcd,
	0x46, 0xe8, 0x5e, 0x0a, 0xbc, 0xa4, 0x19, 0xad, 0x7e, 0xff, 0xf2, 0x8a, 0xd2, 0x89, 0x0f, 0x50,
	0x99, 0x9c, 0x98, 0xd0, 0x37, 0x29, 0x90, 0x12, 0xe6, 0xb6, 0xfa, 0xbd, 0x4b, 0xeb, 0x49, 0x07,
	0x7e, 0x57, 0xa0, 0x3a, 0x3b, 0x39, 0xa0, 0x87, 0x73, 0x8d, 0x1b, 0xa1, 0x27, 0x8f, 0xae, 0x30,
	0xaa, 0xdc, 0x51, 0x82, 0x84, 0x4c, 0x52, 0x46, 0xaa, 0x84, 0x24, 0x50, 0x4f, 0xaa, 0x84, 0x24,
	0x72, 0x53, 0x50, 0x16, 0x53, 0xdd, 0x3d, 0x55, 0x59, 0x24, 0xb1, 0x4c, 0xaa, 0xb2, 0x48, 0x24,
	0x12, 0xf1, 0x6e, 0x67, 0x3a, 0x7e, 0xaa, 0x77, 0x9b, 0xcc, 0x3e, 0xa9, 0xde, 0xed, 0x39, 0x04,
	0x83, 0xfe, 0x52, 0xe0, 0x7f, 0x9f, 0x68, 0xd6, 0x68, 0x2b, 0x0d, 0xf6, 0x85, 0x04, 0x55, 0xdf,
	0xbe, 0x2a, 0x8c, 0x74, 0xf7, 0x4f, 0x05, 0xd4, 0xf3, 0x7a, 0x30, 0x7a, 0x7a, 0xa9, 0xfe, 0x95,
	0xec, 0xe8, 0xb3, 0x2b, 0x61, 0x84, 0x5e, 0xf6, 0x0b, 0xe2, 0x9f, 0x56, 0x77, 0xff, 0x0d, 0x00,
	0x00, 0xff, 0xff, 0x67, 0x78, 0x06, 0x8f, 0x3b, 0x13, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SchedulerMachinesServiceClient is the client API for SchedulerMachinesService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SchedulerMachinesServiceClient interface {
	GetMachineState(ctx context.Context, in *GetMachineStateRequest, opts ...grpc.CallOption) (*GetMachineStateResponse, error)
	MintMachineForJob(ctx context.Context, in *MintMachineForJobRequest, opts ...grpc.CallOption) (*MintMachineForJobResponse, error)
	RevokeMachine(ctx context.Context, in *RevokeMachineRequest, opts ...grpc.CallOption) (*RevokeMachineResponse, error)
	ClearMachine(ctx context.Context, in *ClearMachineRequest, opts ...grpc.CallOption) (*ClearMachineResponse, error)
	WatchAssignedJob(ctx context.Context, in *WatchAssignedJobRequest, opts ...grpc.CallOption) (SchedulerMachinesService_WatchAssignedJobClient, error)
	ListMachines(ctx context.Context, in *ListMachinesRequest, opts ...grpc.CallOption) (*ListMachinesResponse, error)
	FreezeMachine(ctx context.Context, in *FreezeMachineRequest, opts ...grpc.CallOption) (*FreezeMachineResponse, error)
	UnfreezeMachine(ctx context.Context, in *UnfreezeMachineRequest, opts ...grpc.CallOption) (*UnfreezeMachineResponse, error)
	UpdateMachineReconcileState(ctx context.Context, in *UpdateMachineReconcileStateRequest, opts ...grpc.CallOption) (*UpdateMachineReconcileStateResponse, error)
	GetMachineReconcileState(ctx context.Context, in *GetMachineReconcileStateRequest, opts ...grpc.CallOption) (*GetMachineReconcileStateResponse, error)
}

type schedulerMachinesServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSchedulerMachinesServiceClient(cc grpc.ClientConnInterface) SchedulerMachinesServiceClient {
	return &schedulerMachinesServiceClient{cc}
}

func (c *schedulerMachinesServiceClient) GetMachineState(ctx context.Context, in *GetMachineStateRequest, opts ...grpc.CallOption) (*GetMachineStateResponse, error) {
	out := new(GetMachineStateResponse)
	err := c.cc.Invoke(ctx, "/improbable.int.platform.scheduler.SchedulerMachinesService/GetMachineState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *schedulerMachinesServiceClient) MintMachineForJob(ctx context.Context, in *MintMachineForJobRequest, opts ...grpc.CallOption) (*MintMachineForJobResponse, error) {
	out := new(MintMachineForJobResponse)
	err := c.cc.Invoke(ctx, "/improbable.int.platform.scheduler.SchedulerMachinesService/MintMachineForJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *schedulerMachinesServiceClient) RevokeMachine(ctx context.Context, in *RevokeMachineRequest, opts ...grpc.CallOption) (*RevokeMachineResponse, error) {
	out := new(RevokeMachineResponse)
	err := c.cc.Invoke(ctx, "/improbable.int.platform.scheduler.SchedulerMachinesService/RevokeMachine", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *schedulerMachinesServiceClient) ClearMachine(ctx context.Context, in *ClearMachineRequest, opts ...grpc.CallOption) (*ClearMachineResponse, error) {
	out := new(ClearMachineResponse)
	err := c.cc.Invoke(ctx, "/improbable.int.platform.scheduler.SchedulerMachinesService/ClearMachine", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *schedulerMachinesServiceClient) WatchAssignedJob(ctx context.Context, in *WatchAssignedJobRequest, opts ...grpc.CallOption) (SchedulerMachinesService_WatchAssignedJobClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SchedulerMachinesService_serviceDesc.Streams[0], "/improbable.int.platform.scheduler.SchedulerMachinesService/WatchAssignedJob", opts...)
	if err != nil {
		return nil, err
	}
	x := &schedulerMachinesServiceWatchAssignedJobClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SchedulerMachinesService_WatchAssignedJobClient interface {
	Recv() (*WatchAssignedJobResponse, error)
	grpc.ClientStream
}

type schedulerMachinesServiceWatchAssignedJobClient struct {
	grpc.ClientStream
}

func (x *schedulerMachinesServiceWatchAssignedJobClient) Recv() (*WatchAssignedJobResponse, error) {
	m := new(WatchAssignedJobResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *schedulerMachinesServiceClient) ListMachines(ctx context.Context, in *ListMachinesRequest, opts ...grpc.CallOption) (*ListMachinesResponse, error) {
	out := new(ListMachinesResponse)
	err := c.cc.Invoke(ctx, "/improbable.int.platform.scheduler.SchedulerMachinesService/ListMachines", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *schedulerMachinesServiceClient) FreezeMachine(ctx context.Context, in *FreezeMachineRequest, opts ...grpc.CallOption) (*FreezeMachineResponse, error) {
	out := new(FreezeMachineResponse)
	err := c.cc.Invoke(ctx, "/improbable.int.platform.scheduler.SchedulerMachinesService/FreezeMachine", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *schedulerMachinesServiceClient) UnfreezeMachine(ctx context.Context, in *UnfreezeMachineRequest, opts ...grpc.CallOption) (*UnfreezeMachineResponse, error) {
	out := new(UnfreezeMachineResponse)
	err := c.cc.Invoke(ctx, "/improbable.int.platform.scheduler.SchedulerMachinesService/UnfreezeMachine", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *schedulerMachinesServiceClient) UpdateMachineReconcileState(ctx context.Context, in *UpdateMachineReconcileStateRequest, opts ...grpc.CallOption) (*UpdateMachineReconcileStateResponse, error) {
	out := new(UpdateMachineReconcileStateResponse)
	err := c.cc.Invoke(ctx, "/improbable.int.platform.scheduler.SchedulerMachinesService/UpdateMachineReconcileState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *schedulerMachinesServiceClient) GetMachineReconcileState(ctx context.Context, in *GetMachineReconcileStateRequest, opts ...grpc.CallOption) (*GetMachineReconcileStateResponse, error) {
	out := new(GetMachineReconcileStateResponse)
	err := c.cc.Invoke(ctx, "/improbable.int.platform.scheduler.SchedulerMachinesService/GetMachineReconcileState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SchedulerMachinesServiceServer is the server API for SchedulerMachinesService service.
type SchedulerMachinesServiceServer interface {
	GetMachineState(context.Context, *GetMachineStateRequest) (*GetMachineStateResponse, error)
	MintMachineForJob(context.Context, *MintMachineForJobRequest) (*MintMachineForJobResponse, error)
	RevokeMachine(context.Context, *RevokeMachineRequest) (*RevokeMachineResponse, error)
	ClearMachine(context.Context, *ClearMachineRequest) (*ClearMachineResponse, error)
	WatchAssignedJob(*WatchAssignedJobRequest, SchedulerMachinesService_WatchAssignedJobServer) error
	ListMachines(context.Context, *ListMachinesRequest) (*ListMachinesResponse, error)
	FreezeMachine(context.Context, *FreezeMachineRequest) (*FreezeMachineResponse, error)
	UnfreezeMachine(context.Context, *UnfreezeMachineRequest) (*UnfreezeMachineResponse, error)
	UpdateMachineReconcileState(context.Context, *UpdateMachineReconcileStateRequest) (*UpdateMachineReconcileStateResponse, error)
	GetMachineReconcileState(context.Context, *GetMachineReconcileStateRequest) (*GetMachineReconcileStateResponse, error)
}

// UnimplementedSchedulerMachinesServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSchedulerMachinesServiceServer struct {
}

func (*UnimplementedSchedulerMachinesServiceServer) GetMachineState(ctx context.Context, req *GetMachineStateRequest) (*GetMachineStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMachineState not implemented")
}
func (*UnimplementedSchedulerMachinesServiceServer) MintMachineForJob(ctx context.Context, req *MintMachineForJobRequest) (*MintMachineForJobResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MintMachineForJob not implemented")
}
func (*UnimplementedSchedulerMachinesServiceServer) RevokeMachine(ctx context.Context, req *RevokeMachineRequest) (*RevokeMachineResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RevokeMachine not implemented")
}
func (*UnimplementedSchedulerMachinesServiceServer) ClearMachine(ctx context.Context, req *ClearMachineRequest) (*ClearMachineResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClearMachine not implemented")
}
func (*UnimplementedSchedulerMachinesServiceServer) WatchAssignedJob(req *WatchAssignedJobRequest, srv SchedulerMachinesService_WatchAssignedJobServer) error {
	return status.Errorf(codes.Unimplemented, "method WatchAssignedJob not implemented")
}
func (*UnimplementedSchedulerMachinesServiceServer) ListMachines(ctx context.Context, req *ListMachinesRequest) (*ListMachinesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListMachines not implemented")
}
func (*UnimplementedSchedulerMachinesServiceServer) FreezeMachine(ctx context.Context, req *FreezeMachineRequest) (*FreezeMachineResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FreezeMachine not implemented")
}
func (*UnimplementedSchedulerMachinesServiceServer) UnfreezeMachine(ctx context.Context, req *UnfreezeMachineRequest) (*UnfreezeMachineResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnfreezeMachine not implemented")
}
func (*UnimplementedSchedulerMachinesServiceServer) UpdateMachineReconcileState(ctx context.Context, req *UpdateMachineReconcileStateRequest) (*UpdateMachineReconcileStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMachineReconcileState not implemented")
}
func (*UnimplementedSchedulerMachinesServiceServer) GetMachineReconcileState(ctx context.Context, req *GetMachineReconcileStateRequest) (*GetMachineReconcileStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMachineReconcileState not implemented")
}

func RegisterSchedulerMachinesServiceServer(s *grpc.Server, srv SchedulerMachinesServiceServer) {
	s.RegisterService(&_SchedulerMachinesService_serviceDesc, srv)
}

func _SchedulerMachinesService_GetMachineState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMachineStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulerMachinesServiceServer).GetMachineState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.int.platform.scheduler.SchedulerMachinesService/GetMachineState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulerMachinesServiceServer).GetMachineState(ctx, req.(*GetMachineStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SchedulerMachinesService_MintMachineForJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MintMachineForJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulerMachinesServiceServer).MintMachineForJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.int.platform.scheduler.SchedulerMachinesService/MintMachineForJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulerMachinesServiceServer).MintMachineForJob(ctx, req.(*MintMachineForJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SchedulerMachinesService_RevokeMachine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RevokeMachineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulerMachinesServiceServer).RevokeMachine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.int.platform.scheduler.SchedulerMachinesService/RevokeMachine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulerMachinesServiceServer).RevokeMachine(ctx, req.(*RevokeMachineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SchedulerMachinesService_ClearMachine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClearMachineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulerMachinesServiceServer).ClearMachine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.int.platform.scheduler.SchedulerMachinesService/ClearMachine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulerMachinesServiceServer).ClearMachine(ctx, req.(*ClearMachineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SchedulerMachinesService_WatchAssignedJob_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchAssignedJobRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SchedulerMachinesServiceServer).WatchAssignedJob(m, &schedulerMachinesServiceWatchAssignedJobServer{stream})
}

type SchedulerMachinesService_WatchAssignedJobServer interface {
	Send(*WatchAssignedJobResponse) error
	grpc.ServerStream
}

type schedulerMachinesServiceWatchAssignedJobServer struct {
	grpc.ServerStream
}

func (x *schedulerMachinesServiceWatchAssignedJobServer) Send(m *WatchAssignedJobResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _SchedulerMachinesService_ListMachines_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListMachinesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulerMachinesServiceServer).ListMachines(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.int.platform.scheduler.SchedulerMachinesService/ListMachines",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulerMachinesServiceServer).ListMachines(ctx, req.(*ListMachinesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SchedulerMachinesService_FreezeMachine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FreezeMachineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulerMachinesServiceServer).FreezeMachine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.int.platform.scheduler.SchedulerMachinesService/FreezeMachine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulerMachinesServiceServer).FreezeMachine(ctx, req.(*FreezeMachineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SchedulerMachinesService_UnfreezeMachine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnfreezeMachineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulerMachinesServiceServer).UnfreezeMachine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.int.platform.scheduler.SchedulerMachinesService/UnfreezeMachine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulerMachinesServiceServer).UnfreezeMachine(ctx, req.(*UnfreezeMachineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SchedulerMachinesService_UpdateMachineReconcileState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateMachineReconcileStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulerMachinesServiceServer).UpdateMachineReconcileState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.int.platform.scheduler.SchedulerMachinesService/UpdateMachineReconcileState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulerMachinesServiceServer).UpdateMachineReconcileState(ctx, req.(*UpdateMachineReconcileStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SchedulerMachinesService_GetMachineReconcileState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMachineReconcileStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulerMachinesServiceServer).GetMachineReconcileState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.int.platform.scheduler.SchedulerMachinesService/GetMachineReconcileState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulerMachinesServiceServer).GetMachineReconcileState(ctx, req.(*GetMachineReconcileStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SchedulerMachinesService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "improbable.int.platform.scheduler.SchedulerMachinesService",
	HandlerType: (*SchedulerMachinesServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMachineState",
			Handler:    _SchedulerMachinesService_GetMachineState_Handler,
		},
		{
			MethodName: "MintMachineForJob",
			Handler:    _SchedulerMachinesService_MintMachineForJob_Handler,
		},
		{
			MethodName: "RevokeMachine",
			Handler:    _SchedulerMachinesService_RevokeMachine_Handler,
		},
		{
			MethodName: "ClearMachine",
			Handler:    _SchedulerMachinesService_ClearMachine_Handler,
		},
		{
			MethodName: "ListMachines",
			Handler:    _SchedulerMachinesService_ListMachines_Handler,
		},
		{
			MethodName: "FreezeMachine",
			Handler:    _SchedulerMachinesService_FreezeMachine_Handler,
		},
		{
			MethodName: "UnfreezeMachine",
			Handler:    _SchedulerMachinesService_UnfreezeMachine_Handler,
		},
		{
			MethodName: "UpdateMachineReconcileState",
			Handler:    _SchedulerMachinesService_UpdateMachineReconcileState_Handler,
		},
		{
			MethodName: "GetMachineReconcileState",
			Handler:    _SchedulerMachinesService_GetMachineReconcileState_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WatchAssignedJob",
			Handler:       _SchedulerMachinesService_WatchAssignedJob_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "improbable/int/platform/scheduler/machines.proto",
}
