// Code generated by protoc-gen-go. DO NOT EDIT.
// source: improbable/int/platform/compute_qualifier/compute_qualifier.proto

package improbable_int_platform_compute_qualifier

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Error struct {
	Code                 int64    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_17438f29581f8c03, []int{0}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type QualifyResult struct {
	Cluster              string   `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	QualificationError   *Error   `protobuf:"bytes,2,opt,name=qualification_error,json=qualificationError,proto3" json:"qualification_error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QualifyResult) Reset()         { *m = QualifyResult{} }
func (m *QualifyResult) String() string { return proto.CompactTextString(m) }
func (*QualifyResult) ProtoMessage()    {}
func (*QualifyResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_17438f29581f8c03, []int{1}
}

func (m *QualifyResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QualifyResult.Unmarshal(m, b)
}
func (m *QualifyResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QualifyResult.Marshal(b, m, deterministic)
}
func (m *QualifyResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QualifyResult.Merge(m, src)
}
func (m *QualifyResult) XXX_Size() int {
	return xxx_messageInfo_QualifyResult.Size(m)
}
func (m *QualifyResult) XXX_DiscardUnknown() {
	xxx_messageInfo_QualifyResult.DiscardUnknown(m)
}

var xxx_messageInfo_QualifyResult proto.InternalMessageInfo

func (m *QualifyResult) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *QualifyResult) GetQualificationError() *Error {
	if m != nil {
		return m.QualificationError
	}
	return nil
}

type QualifyControlPlaneRequest struct {
	ControlPlane         string   `protobuf:"bytes,1,opt,name=control_plane,json=controlPlane,proto3" json:"control_plane,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QualifyControlPlaneRequest) Reset()         { *m = QualifyControlPlaneRequest{} }
func (m *QualifyControlPlaneRequest) String() string { return proto.CompactTextString(m) }
func (*QualifyControlPlaneRequest) ProtoMessage()    {}
func (*QualifyControlPlaneRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_17438f29581f8c03, []int{2}
}

func (m *QualifyControlPlaneRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QualifyControlPlaneRequest.Unmarshal(m, b)
}
func (m *QualifyControlPlaneRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QualifyControlPlaneRequest.Marshal(b, m, deterministic)
}
func (m *QualifyControlPlaneRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QualifyControlPlaneRequest.Merge(m, src)
}
func (m *QualifyControlPlaneRequest) XXX_Size() int {
	return xxx_messageInfo_QualifyControlPlaneRequest.Size(m)
}
func (m *QualifyControlPlaneRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QualifyControlPlaneRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QualifyControlPlaneRequest proto.InternalMessageInfo

func (m *QualifyControlPlaneRequest) GetControlPlane() string {
	if m != nil {
		return m.ControlPlane
	}
	return ""
}

type QualifyControlPlaneResponse struct {
	ControlPlaneResult   *QualifyResult   `protobuf:"bytes,1,opt,name=control_plane_result,json=controlPlaneResult,proto3" json:"control_plane_result,omitempty"`
	SimPlaneResults      []*QualifyResult `protobuf:"bytes,2,rep,name=sim_plane_results,json=simPlaneResults,proto3" json:"sim_plane_results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *QualifyControlPlaneResponse) Reset()         { *m = QualifyControlPlaneResponse{} }
func (m *QualifyControlPlaneResponse) String() string { return proto.CompactTextString(m) }
func (*QualifyControlPlaneResponse) ProtoMessage()    {}
func (*QualifyControlPlaneResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_17438f29581f8c03, []int{3}
}

func (m *QualifyControlPlaneResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QualifyControlPlaneResponse.Unmarshal(m, b)
}
func (m *QualifyControlPlaneResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QualifyControlPlaneResponse.Marshal(b, m, deterministic)
}
func (m *QualifyControlPlaneResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QualifyControlPlaneResponse.Merge(m, src)
}
func (m *QualifyControlPlaneResponse) XXX_Size() int {
	return xxx_messageInfo_QualifyControlPlaneResponse.Size(m)
}
func (m *QualifyControlPlaneResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QualifyControlPlaneResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QualifyControlPlaneResponse proto.InternalMessageInfo

func (m *QualifyControlPlaneResponse) GetControlPlaneResult() *QualifyResult {
	if m != nil {
		return m.ControlPlaneResult
	}
	return nil
}

func (m *QualifyControlPlaneResponse) GetSimPlaneResults() []*QualifyResult {
	if m != nil {
		return m.SimPlaneResults
	}
	return nil
}

type QualifyRuntimeVersionsRequest struct {
	ControlPlane         string   `protobuf:"bytes,1,opt,name=control_plane,json=controlPlane,proto3" json:"control_plane,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QualifyRuntimeVersionsRequest) Reset()         { *m = QualifyRuntimeVersionsRequest{} }
func (m *QualifyRuntimeVersionsRequest) String() string { return proto.CompactTextString(m) }
func (*QualifyRuntimeVersionsRequest) ProtoMessage()    {}
func (*QualifyRuntimeVersionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_17438f29581f8c03, []int{4}
}

func (m *QualifyRuntimeVersionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QualifyRuntimeVersionsRequest.Unmarshal(m, b)
}
func (m *QualifyRuntimeVersionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QualifyRuntimeVersionsRequest.Marshal(b, m, deterministic)
}
func (m *QualifyRuntimeVersionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QualifyRuntimeVersionsRequest.Merge(m, src)
}
func (m *QualifyRuntimeVersionsRequest) XXX_Size() int {
	return xxx_messageInfo_QualifyRuntimeVersionsRequest.Size(m)
}
func (m *QualifyRuntimeVersionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QualifyRuntimeVersionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QualifyRuntimeVersionsRequest proto.InternalMessageInfo

func (m *QualifyRuntimeVersionsRequest) GetControlPlane() string {
	if m != nil {
		return m.ControlPlane
	}
	return ""
}

type QualifyRuntimeVersionsResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QualifyRuntimeVersionsResponse) Reset()         { *m = QualifyRuntimeVersionsResponse{} }
func (m *QualifyRuntimeVersionsResponse) String() string { return proto.CompactTextString(m) }
func (*QualifyRuntimeVersionsResponse) ProtoMessage()    {}
func (*QualifyRuntimeVersionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_17438f29581f8c03, []int{5}
}

func (m *QualifyRuntimeVersionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QualifyRuntimeVersionsResponse.Unmarshal(m, b)
}
func (m *QualifyRuntimeVersionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QualifyRuntimeVersionsResponse.Marshal(b, m, deterministic)
}
func (m *QualifyRuntimeVersionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QualifyRuntimeVersionsResponse.Merge(m, src)
}
func (m *QualifyRuntimeVersionsResponse) XXX_Size() int {
	return xxx_messageInfo_QualifyRuntimeVersionsResponse.Size(m)
}
func (m *QualifyRuntimeVersionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QualifyRuntimeVersionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QualifyRuntimeVersionsResponse proto.InternalMessageInfo

type TriggerQualifyClusterRequest struct {
	Cluster              string   `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TriggerQualifyClusterRequest) Reset()         { *m = TriggerQualifyClusterRequest{} }
func (m *TriggerQualifyClusterRequest) String() string { return proto.CompactTextString(m) }
func (*TriggerQualifyClusterRequest) ProtoMessage()    {}
func (*TriggerQualifyClusterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_17438f29581f8c03, []int{6}
}

func (m *TriggerQualifyClusterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TriggerQualifyClusterRequest.Unmarshal(m, b)
}
func (m *TriggerQualifyClusterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TriggerQualifyClusterRequest.Marshal(b, m, deterministic)
}
func (m *TriggerQualifyClusterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TriggerQualifyClusterRequest.Merge(m, src)
}
func (m *TriggerQualifyClusterRequest) XXX_Size() int {
	return xxx_messageInfo_TriggerQualifyClusterRequest.Size(m)
}
func (m *TriggerQualifyClusterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TriggerQualifyClusterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TriggerQualifyClusterRequest proto.InternalMessageInfo

func (m *TriggerQualifyClusterRequest) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func init() {
	proto.RegisterType((*Error)(nil), "improbable.int.platform.compute_qualifier.Error")
	proto.RegisterType((*QualifyResult)(nil), "improbable.int.platform.compute_qualifier.QualifyResult")
	proto.RegisterType((*QualifyControlPlaneRequest)(nil), "improbable.int.platform.compute_qualifier.QualifyControlPlaneRequest")
	proto.RegisterType((*QualifyControlPlaneResponse)(nil), "improbable.int.platform.compute_qualifier.QualifyControlPlaneResponse")
	proto.RegisterType((*QualifyRuntimeVersionsRequest)(nil), "improbable.int.platform.compute_qualifier.QualifyRuntimeVersionsRequest")
	proto.RegisterType((*QualifyRuntimeVersionsResponse)(nil), "improbable.int.platform.compute_qualifier.QualifyRuntimeVersionsResponse")
	proto.RegisterType((*TriggerQualifyClusterRequest)(nil), "improbable.int.platform.compute_qualifier.TriggerQualifyClusterRequest")
}

func init() {
	proto.RegisterFile("improbable/int/platform/compute_qualifier/compute_qualifier.proto", fileDescriptor_17438f29581f8c03)
}

var fileDescriptor_17438f29581f8c03 = []byte{
	// 487 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0xcf, 0x6e, 0xd4, 0x30,
	0x10, 0xc6, 0xe5, 0x6d, 0x01, 0x75, 0x96, 0x0a, 0x70, 0x61, 0x59, 0xa5, 0x05, 0xad, 0xc2, 0xa5,
	0x70, 0x70, 0x60, 0x11, 0x52, 0xc5, 0xad, 0x2a, 0xcb, 0x9f, 0x1b, 0x0d, 0x88, 0xeb, 0xca, 0x9b,
	0xce, 0x46, 0x46, 0x89, 0x9d, 0xda, 0x4e, 0xa5, 0xbd, 0xc2, 0x95, 0x03, 0x12, 0xaf, 0xc0, 0x95,
	0xa7, 0xe1, 0x15, 0xb8, 0xf3, 0x0a, 0x28, 0x4e, 0x2c, 0x1a, 0x35, 0x45, 0x84, 0x72, 0x8b, 0xc7,
	0x93, 0xdf, 0x37, 0xf3, 0xcd, 0xc8, 0xb0, 0x2f, 0xf2, 0x42, 0xab, 0x05, 0x5f, 0x64, 0x18, 0x09,
	0x69, 0xa3, 0x22, 0xe3, 0x76, 0xa9, 0x74, 0x1e, 0x25, 0x2a, 0x2f, 0x4a, 0x8b, 0xf3, 0xe3, 0x92,
	0x67, 0x62, 0x29, 0x50, 0x9f, 0x8d, 0xb0, 0x42, 0x2b, 0xab, 0xe8, 0xfd, 0xdf, 0x08, 0x26, 0xa4,
	0x65, 0x1e, 0xc1, 0xce, 0xfc, 0x10, 0xec, 0xa4, 0x4a, 0xa5, 0x19, 0x46, 0xbc, 0x10, 0x11, 0x97,
	0x52, 0x59, 0x6e, 0x85, 0x92, 0xa6, 0x06, 0x05, 0xdb, 0xcd, 0xad, 0x3b, 0x2d, 0xca, 0x65, 0x84,
	0x79, 0x61, 0x57, 0xf5, 0x65, 0xf8, 0x04, 0x2e, 0xcd, 0xb4, 0x56, 0x9a, 0x52, 0x58, 0x4f, 0xd4,
	0x11, 0x8e, 0xc9, 0x84, 0xec, 0xae, 0xc5, 0xee, 0x9b, 0x8e, 0xe1, 0x4a, 0x8e, 0xc6, 0xf0, 0x14,
	0xc7, 0x83, 0x09, 0xd9, 0xdd, 0x88, 0xfd, 0x31, 0xfc, 0x44, 0x60, 0xf3, 0xd0, 0xe9, 0xaf, 0x62,
	0x34, 0x65, 0x66, 0xab, 0xdc, 0x24, 0x2b, 0x8d, 0x45, 0xed, 0x10, 0x1b, 0xb1, 0x3f, 0x52, 0x0e,
	0x5b, 0x4d, 0xa9, 0x89, 0xab, 0x6b, 0x8e, 0x95, 0xa0, 0x23, 0x0e, 0xa7, 0x0f, 0xd9, 0x5f, 0xb7,
	0xc9, 0x5c, 0xa1, 0x31, 0x6d, 0xc1, 0x5c, 0x2c, 0xdc, 0x87, 0xa0, 0xa9, 0xe6, 0x40, 0x49, 0xab,
	0x55, 0xf6, 0x3a, 0xe3, 0x12, 0x63, 0x3c, 0x2e, 0xd1, 0x58, 0x7a, 0x0f, 0x36, 0x93, 0x3a, 0x3c,
	0x2f, 0xaa, 0x78, 0x53, 0xe0, 0xd5, 0xe4, 0x54, 0x6e, 0xf8, 0x93, 0xc0, 0x76, 0x27, 0xc3, 0x14,
	0x4a, 0x1a, 0xa4, 0xef, 0xe1, 0x66, 0x0b, 0x32, 0xd7, 0xae, 0x6f, 0xc7, 0x1a, 0x4e, 0xf7, 0x7a,
	0xb4, 0xd1, 0xf2, 0x2d, 0xa6, 0x49, 0x5b, 0xad, 0xf2, 0xf2, 0x08, 0x6e, 0x18, 0x91, 0xb7, 0x74,
	0xcc, 0x78, 0x30, 0x59, 0xbb, 0x90, 0xd0, 0x35, 0x23, 0xf2, 0x53, 0x22, 0x26, 0x7c, 0x06, 0x77,
	0x7c, 0x46, 0x29, 0xad, 0xc8, 0xf1, 0x1d, 0x6a, 0x53, 0xed, 0x4d, 0x2f, 0xdf, 0x26, 0x70, 0xf7,
	0x3c, 0x4a, 0xed, 0x5c, 0xb8, 0x07, 0x3b, 0x6f, 0xb5, 0x48, 0x53, 0xd4, 0xde, 0xdf, 0x7a, 0x31,
	0xbc, 0xcc, 0xb9, 0x9b, 0x33, 0xfd, 0xb8, 0x0e, 0xb7, 0x0f, 0xea, 0xb6, 0x0e, 0x7d, 0x57, 0x6f,
	0x50, 0x9f, 0x88, 0x04, 0xe9, 0x57, 0x02, 0x5b, 0x1d, 0xf3, 0xa2, 0xb3, 0xfe, 0x06, 0x75, 0xec,
	0x4c, 0xf0, 0xfc, 0xa2, 0x98, 0x66, 0x6d, 0xbe, 0x11, 0x18, 0x75, 0xfb, 0x43, 0x5f, 0xfe, 0xc3,
	0x28, 0x3b, 0x07, 0x15, 0xbc, 0xfa, 0x0f, 0xa4, 0xa6, 0xde, 0xcf, 0x04, 0x6e, 0x75, 0x4e, 0x8b,
	0xbe, 0xe8, 0x21, 0xf2, 0xa7, 0x79, 0x07, 0x23, 0x56, 0x3f, 0x48, 0xcc, 0x3f, 0x48, 0x6c, 0x56,
	0x3d, 0x48, 0xe1, 0xe8, 0xc3, 0xf7, 0x1f, 0x5f, 0x06, 0xd7, 0xc3, 0x61, 0x74, 0xf2, 0x28, 0xaa,
	0x59, 0xab, 0xa7, 0xe4, 0xc1, 0xe2, 0xb2, 0xcb, 0x7b, 0xfc, 0x2b, 0x00, 0x00, 0xff, 0xff, 0xcc,
	0xe6, 0xce, 0x05, 0x54, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ComputeQualifierServiceClient is the client API for ComputeQualifierService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ComputeQualifierServiceClient interface {
	QualifyControlPlane(ctx context.Context, in *QualifyControlPlaneRequest, opts ...grpc.CallOption) (*QualifyControlPlaneResponse, error)
	QualifyRuntimeVersions(ctx context.Context, in *QualifyRuntimeVersionsRequest, opts ...grpc.CallOption) (*QualifyRuntimeVersionsResponse, error)
	TriggerQualifyCluster(ctx context.Context, in *TriggerQualifyClusterRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type computeQualifierServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewComputeQualifierServiceClient(cc grpc.ClientConnInterface) ComputeQualifierServiceClient {
	return &computeQualifierServiceClient{cc}
}

func (c *computeQualifierServiceClient) QualifyControlPlane(ctx context.Context, in *QualifyControlPlaneRequest, opts ...grpc.CallOption) (*QualifyControlPlaneResponse, error) {
	out := new(QualifyControlPlaneResponse)
	err := c.cc.Invoke(ctx, "/improbable.int.platform.compute_qualifier.ComputeQualifierService/QualifyControlPlane", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *computeQualifierServiceClient) QualifyRuntimeVersions(ctx context.Context, in *QualifyRuntimeVersionsRequest, opts ...grpc.CallOption) (*QualifyRuntimeVersionsResponse, error) {
	out := new(QualifyRuntimeVersionsResponse)
	err := c.cc.Invoke(ctx, "/improbable.int.platform.compute_qualifier.ComputeQualifierService/QualifyRuntimeVersions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *computeQualifierServiceClient) TriggerQualifyCluster(ctx context.Context, in *TriggerQualifyClusterRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/improbable.int.platform.compute_qualifier.ComputeQualifierService/TriggerQualifyCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ComputeQualifierServiceServer is the server API for ComputeQualifierService service.
type ComputeQualifierServiceServer interface {
	QualifyControlPlane(context.Context, *QualifyControlPlaneRequest) (*QualifyControlPlaneResponse, error)
	QualifyRuntimeVersions(context.Context, *QualifyRuntimeVersionsRequest) (*QualifyRuntimeVersionsResponse, error)
	TriggerQualifyCluster(context.Context, *TriggerQualifyClusterRequest) (*empty.Empty, error)
}

// UnimplementedComputeQualifierServiceServer can be embedded to have forward compatible implementations.
type UnimplementedComputeQualifierServiceServer struct {
}

func (*UnimplementedComputeQualifierServiceServer) QualifyControlPlane(ctx context.Context, req *QualifyControlPlaneRequest) (*QualifyControlPlaneResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QualifyControlPlane not implemented")
}
func (*UnimplementedComputeQualifierServiceServer) QualifyRuntimeVersions(ctx context.Context, req *QualifyRuntimeVersionsRequest) (*QualifyRuntimeVersionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QualifyRuntimeVersions not implemented")
}
func (*UnimplementedComputeQualifierServiceServer) TriggerQualifyCluster(ctx context.Context, req *TriggerQualifyClusterRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TriggerQualifyCluster not implemented")
}

func RegisterComputeQualifierServiceServer(s *grpc.Server, srv ComputeQualifierServiceServer) {
	s.RegisterService(&_ComputeQualifierService_serviceDesc, srv)
}

func _ComputeQualifierService_QualifyControlPlane_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QualifyControlPlaneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ComputeQualifierServiceServer).QualifyControlPlane(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.int.platform.compute_qualifier.ComputeQualifierService/QualifyControlPlane",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ComputeQualifierServiceServer).QualifyControlPlane(ctx, req.(*QualifyControlPlaneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ComputeQualifierService_QualifyRuntimeVersions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QualifyRuntimeVersionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ComputeQualifierServiceServer).QualifyRuntimeVersions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.int.platform.compute_qualifier.ComputeQualifierService/QualifyRuntimeVersions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ComputeQualifierServiceServer).QualifyRuntimeVersions(ctx, req.(*QualifyRuntimeVersionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ComputeQualifierService_TriggerQualifyCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TriggerQualifyClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ComputeQualifierServiceServer).TriggerQualifyCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.int.platform.compute_qualifier.ComputeQualifierService/TriggerQualifyCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ComputeQualifierServiceServer).TriggerQualifyCluster(ctx, req.(*TriggerQualifyClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ComputeQualifierService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "improbable.int.platform.compute_qualifier.ComputeQualifierService",
	HandlerType: (*ComputeQualifierServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "QualifyControlPlane",
			Handler:    _ComputeQualifierService_QualifyControlPlane_Handler,
		},
		{
			MethodName: "QualifyRuntimeVersions",
			Handler:    _ComputeQualifierService_QualifyRuntimeVersions_Handler,
		},
		{
			MethodName: "TriggerQualifyCluster",
			Handler:    _ComputeQualifierService_TriggerQualifyCluster_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "improbable/int/platform/compute_qualifier/compute_qualifier.proto",
}
