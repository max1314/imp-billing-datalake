// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/int/platform/compute_qualifier/compute_qualifier.proto

package improbable_int_platform_compute_qualifier

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/empty"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *Error) Validate() error {
	return nil
}
func (this *QualifyResult) Validate() error {
	if this.QualificationError != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.QualificationError); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("QualificationError", err)
		}
	}
	return nil
}
func (this *QualifyControlPlaneRequest) Validate() error {
	return nil
}
func (this *QualifyControlPlaneResponse) Validate() error {
	if this.ControlPlaneResult != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ControlPlaneResult); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ControlPlaneResult", err)
		}
	}
	for _, item := range this.SimPlaneResults {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("SimPlaneResults", err)
			}
		}
	}
	return nil
}
func (this *QualifyRuntimeVersionsRequest) Validate() error {
	return nil
}
func (this *QualifyRuntimeVersionsResponse) Validate() error {
	return nil
}
func (this *TriggerQualifyClusterRequest) Validate() error {
	return nil
}
