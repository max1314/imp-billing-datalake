// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/int/platform/imp_billing/report.proto

package improbable_int_platform_imp_billing

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *Money) Validate() error {
	return nil
}
func (this *Group) Validate() error {
	if this.TotalPrice != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.TotalPrice); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("TotalPrice", err)
		}
	}
	return nil
}
func (this *Report) Validate() error {
	if this.BeginTime != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.BeginTime); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("BeginTime", err)
		}
	}
	if this.EndTime != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.EndTime); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("EndTime", err)
		}
	}
	if this.TotalPrice != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.TotalPrice); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("TotalPrice", err)
		}
	}
	for _, item := range this.Groups {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Groups", err)
			}
		}
	}
	return nil
}
func (this *ListReportsRequest) Validate() error {
	if this.BeginTime != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.BeginTime); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("BeginTime", err)
		}
	}
	if this.EndTime != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.EndTime); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("EndTime", err)
		}
	}
	return nil
}
func (this *ListReportsResponse) Validate() error {
	for _, item := range this.Reports {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Reports", err)
			}
		}
	}
	return nil
}
