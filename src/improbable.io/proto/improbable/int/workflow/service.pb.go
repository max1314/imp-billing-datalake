// Code generated by protoc-gen-go. DO NOT EDIT.
// source: improbable/int/workflow/service.proto

package improbable_int_workflow

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FlowId struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FlowId) Reset()         { *m = FlowId{} }
func (m *FlowId) String() string { return proto.CompactTextString(m) }
func (*FlowId) ProtoMessage()    {}
func (*FlowId) Descriptor() ([]byte, []int) {
	return fileDescriptor_72da89633bbf9bce, []int{0}
}

func (m *FlowId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlowId.Unmarshal(m, b)
}
func (m *FlowId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlowId.Marshal(b, m, deterministic)
}
func (m *FlowId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlowId.Merge(m, src)
}
func (m *FlowId) XXX_Size() int {
	return xxx_messageInfo_FlowId.Size(m)
}
func (m *FlowId) XXX_DiscardUnknown() {
	xxx_messageInfo_FlowId.DiscardUnknown(m)
}

var xxx_messageInfo_FlowId proto.InternalMessageInfo

func (m *FlowId) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type SubmitFlowRequest struct {
	Name                 string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description          string               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Metadata             *any.Any             `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	RescheduleTime       *timestamp.Timestamp `protobuf:"bytes,4,opt,name=reschedule_time,json=rescheduleTime,proto3" json:"reschedule_time,omitempty"`
	ExpiryTime           *timestamp.Timestamp `protobuf:"bytes,5,opt,name=expiry_time,json=expiryTime,proto3" json:"expiry_time,omitempty"`
	DeploymentId         int64                `protobuf:"varint,6,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SubmitFlowRequest) Reset()         { *m = SubmitFlowRequest{} }
func (m *SubmitFlowRequest) String() string { return proto.CompactTextString(m) }
func (*SubmitFlowRequest) ProtoMessage()    {}
func (*SubmitFlowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_72da89633bbf9bce, []int{1}
}

func (m *SubmitFlowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitFlowRequest.Unmarshal(m, b)
}
func (m *SubmitFlowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitFlowRequest.Marshal(b, m, deterministic)
}
func (m *SubmitFlowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitFlowRequest.Merge(m, src)
}
func (m *SubmitFlowRequest) XXX_Size() int {
	return xxx_messageInfo_SubmitFlowRequest.Size(m)
}
func (m *SubmitFlowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitFlowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitFlowRequest proto.InternalMessageInfo

func (m *SubmitFlowRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SubmitFlowRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *SubmitFlowRequest) GetMetadata() *any.Any {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *SubmitFlowRequest) GetRescheduleTime() *timestamp.Timestamp {
	if m != nil {
		return m.RescheduleTime
	}
	return nil
}

func (m *SubmitFlowRequest) GetExpiryTime() *timestamp.Timestamp {
	if m != nil {
		return m.ExpiryTime
	}
	return nil
}

func (m *SubmitFlowRequest) GetDeploymentId() int64 {
	if m != nil {
		return m.DeploymentId
	}
	return 0
}

type SubmitFlowResponse struct {
	Id                   *FlowId  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmitFlowResponse) Reset()         { *m = SubmitFlowResponse{} }
func (m *SubmitFlowResponse) String() string { return proto.CompactTextString(m) }
func (*SubmitFlowResponse) ProtoMessage()    {}
func (*SubmitFlowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_72da89633bbf9bce, []int{2}
}

func (m *SubmitFlowResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitFlowResponse.Unmarshal(m, b)
}
func (m *SubmitFlowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitFlowResponse.Marshal(b, m, deterministic)
}
func (m *SubmitFlowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitFlowResponse.Merge(m, src)
}
func (m *SubmitFlowResponse) XXX_Size() int {
	return xxx_messageInfo_SubmitFlowResponse.Size(m)
}
func (m *SubmitFlowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitFlowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitFlowResponse proto.InternalMessageInfo

func (m *SubmitFlowResponse) GetId() *FlowId {
	if m != nil {
		return m.Id
	}
	return nil
}

type StartFlowRequest struct {
	Id                   *FlowId  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartFlowRequest) Reset()         { *m = StartFlowRequest{} }
func (m *StartFlowRequest) String() string { return proto.CompactTextString(m) }
func (*StartFlowRequest) ProtoMessage()    {}
func (*StartFlowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_72da89633bbf9bce, []int{3}
}

func (m *StartFlowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartFlowRequest.Unmarshal(m, b)
}
func (m *StartFlowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartFlowRequest.Marshal(b, m, deterministic)
}
func (m *StartFlowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartFlowRequest.Merge(m, src)
}
func (m *StartFlowRequest) XXX_Size() int {
	return xxx_messageInfo_StartFlowRequest.Size(m)
}
func (m *StartFlowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartFlowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartFlowRequest proto.InternalMessageInfo

func (m *StartFlowRequest) GetId() *FlowId {
	if m != nil {
		return m.Id
	}
	return nil
}

type StartFlowResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartFlowResponse) Reset()         { *m = StartFlowResponse{} }
func (m *StartFlowResponse) String() string { return proto.CompactTextString(m) }
func (*StartFlowResponse) ProtoMessage()    {}
func (*StartFlowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_72da89633bbf9bce, []int{4}
}

func (m *StartFlowResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartFlowResponse.Unmarshal(m, b)
}
func (m *StartFlowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartFlowResponse.Marshal(b, m, deterministic)
}
func (m *StartFlowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartFlowResponse.Merge(m, src)
}
func (m *StartFlowResponse) XXX_Size() int {
	return xxx_messageInfo_StartFlowResponse.Size(m)
}
func (m *StartFlowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartFlowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartFlowResponse proto.InternalMessageInfo

type GetFlowRequest struct {
	Id                   *FlowId  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFlowRequest) Reset()         { *m = GetFlowRequest{} }
func (m *GetFlowRequest) String() string { return proto.CompactTextString(m) }
func (*GetFlowRequest) ProtoMessage()    {}
func (*GetFlowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_72da89633bbf9bce, []int{5}
}

func (m *GetFlowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFlowRequest.Unmarshal(m, b)
}
func (m *GetFlowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFlowRequest.Marshal(b, m, deterministic)
}
func (m *GetFlowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFlowRequest.Merge(m, src)
}
func (m *GetFlowRequest) XXX_Size() int {
	return xxx_messageInfo_GetFlowRequest.Size(m)
}
func (m *GetFlowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFlowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetFlowRequest proto.InternalMessageInfo

func (m *GetFlowRequest) GetId() *FlowId {
	if m != nil {
		return m.Id
	}
	return nil
}

type GetFlowResponse struct {
	Id                   *FlowId     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status               *FlowStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Config               *FlowConfig `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetFlowResponse) Reset()         { *m = GetFlowResponse{} }
func (m *GetFlowResponse) String() string { return proto.CompactTextString(m) }
func (*GetFlowResponse) ProtoMessage()    {}
func (*GetFlowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_72da89633bbf9bce, []int{6}
}

func (m *GetFlowResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFlowResponse.Unmarshal(m, b)
}
func (m *GetFlowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFlowResponse.Marshal(b, m, deterministic)
}
func (m *GetFlowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFlowResponse.Merge(m, src)
}
func (m *GetFlowResponse) XXX_Size() int {
	return xxx_messageInfo_GetFlowResponse.Size(m)
}
func (m *GetFlowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFlowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetFlowResponse proto.InternalMessageInfo

func (m *GetFlowResponse) GetId() *FlowId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *GetFlowResponse) GetStatus() *FlowStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetFlowResponse) GetConfig() *FlowConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type ListFlowsRequest struct {
	IncludeCompleted     bool                 `protobuf:"varint,1,opt,name=includeCompleted,proto3" json:"includeCompleted,omitempty"`
	StartTime            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              *timestamp.Timestamp `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ListFlowsRequest) Reset()         { *m = ListFlowsRequest{} }
func (m *ListFlowsRequest) String() string { return proto.CompactTextString(m) }
func (*ListFlowsRequest) ProtoMessage()    {}
func (*ListFlowsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_72da89633bbf9bce, []int{7}
}

func (m *ListFlowsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListFlowsRequest.Unmarshal(m, b)
}
func (m *ListFlowsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListFlowsRequest.Marshal(b, m, deterministic)
}
func (m *ListFlowsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListFlowsRequest.Merge(m, src)
}
func (m *ListFlowsRequest) XXX_Size() int {
	return xxx_messageInfo_ListFlowsRequest.Size(m)
}
func (m *ListFlowsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListFlowsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListFlowsRequest proto.InternalMessageInfo

func (m *ListFlowsRequest) GetIncludeCompleted() bool {
	if m != nil {
		return m.IncludeCompleted
	}
	return false
}

func (m *ListFlowsRequest) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *ListFlowsRequest) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

type ListFlowsResponse struct {
	Flows                []*GetFlowResponse `protobuf:"bytes,1,rep,name=flows,proto3" json:"flows,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ListFlowsResponse) Reset()         { *m = ListFlowsResponse{} }
func (m *ListFlowsResponse) String() string { return proto.CompactTextString(m) }
func (*ListFlowsResponse) ProtoMessage()    {}
func (*ListFlowsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_72da89633bbf9bce, []int{8}
}

func (m *ListFlowsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListFlowsResponse.Unmarshal(m, b)
}
func (m *ListFlowsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListFlowsResponse.Marshal(b, m, deterministic)
}
func (m *ListFlowsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListFlowsResponse.Merge(m, src)
}
func (m *ListFlowsResponse) XXX_Size() int {
	return xxx_messageInfo_ListFlowsResponse.Size(m)
}
func (m *ListFlowsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListFlowsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListFlowsResponse proto.InternalMessageInfo

func (m *ListFlowsResponse) GetFlows() []*GetFlowResponse {
	if m != nil {
		return m.Flows
	}
	return nil
}

type CancelFlowRequest struct {
	Id                   *FlowId  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelFlowRequest) Reset()         { *m = CancelFlowRequest{} }
func (m *CancelFlowRequest) String() string { return proto.CompactTextString(m) }
func (*CancelFlowRequest) ProtoMessage()    {}
func (*CancelFlowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_72da89633bbf9bce, []int{9}
}

func (m *CancelFlowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelFlowRequest.Unmarshal(m, b)
}
func (m *CancelFlowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelFlowRequest.Marshal(b, m, deterministic)
}
func (m *CancelFlowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelFlowRequest.Merge(m, src)
}
func (m *CancelFlowRequest) XXX_Size() int {
	return xxx_messageInfo_CancelFlowRequest.Size(m)
}
func (m *CancelFlowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelFlowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CancelFlowRequest proto.InternalMessageInfo

func (m *CancelFlowRequest) GetId() *FlowId {
	if m != nil {
		return m.Id
	}
	return nil
}

type CancelFlowResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelFlowResponse) Reset()         { *m = CancelFlowResponse{} }
func (m *CancelFlowResponse) String() string { return proto.CompactTextString(m) }
func (*CancelFlowResponse) ProtoMessage()    {}
func (*CancelFlowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_72da89633bbf9bce, []int{10}
}

func (m *CancelFlowResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelFlowResponse.Unmarshal(m, b)
}
func (m *CancelFlowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelFlowResponse.Marshal(b, m, deterministic)
}
func (m *CancelFlowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelFlowResponse.Merge(m, src)
}
func (m *CancelFlowResponse) XXX_Size() int {
	return xxx_messageInfo_CancelFlowResponse.Size(m)
}
func (m *CancelFlowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelFlowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CancelFlowResponse proto.InternalMessageInfo

type CancelRunningFlowByDeploymentIdRequest struct {
	DeploymentId         int64    `protobuf:"varint,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelRunningFlowByDeploymentIdRequest) Reset() {
	*m = CancelRunningFlowByDeploymentIdRequest{}
}
func (m *CancelRunningFlowByDeploymentIdRequest) String() string { return proto.CompactTextString(m) }
func (*CancelRunningFlowByDeploymentIdRequest) ProtoMessage()    {}
func (*CancelRunningFlowByDeploymentIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_72da89633bbf9bce, []int{11}
}

func (m *CancelRunningFlowByDeploymentIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelRunningFlowByDeploymentIdRequest.Unmarshal(m, b)
}
func (m *CancelRunningFlowByDeploymentIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelRunningFlowByDeploymentIdRequest.Marshal(b, m, deterministic)
}
func (m *CancelRunningFlowByDeploymentIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelRunningFlowByDeploymentIdRequest.Merge(m, src)
}
func (m *CancelRunningFlowByDeploymentIdRequest) XXX_Size() int {
	return xxx_messageInfo_CancelRunningFlowByDeploymentIdRequest.Size(m)
}
func (m *CancelRunningFlowByDeploymentIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelRunningFlowByDeploymentIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CancelRunningFlowByDeploymentIdRequest proto.InternalMessageInfo

func (m *CancelRunningFlowByDeploymentIdRequest) GetDeploymentId() int64 {
	if m != nil {
		return m.DeploymentId
	}
	return 0
}

type CancelRunningFlowByDeploymentIdResponse struct {
	Id                   *FlowId  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelRunningFlowByDeploymentIdResponse) Reset() {
	*m = CancelRunningFlowByDeploymentIdResponse{}
}
func (m *CancelRunningFlowByDeploymentIdResponse) String() string { return proto.CompactTextString(m) }
func (*CancelRunningFlowByDeploymentIdResponse) ProtoMessage()    {}
func (*CancelRunningFlowByDeploymentIdResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_72da89633bbf9bce, []int{12}
}

func (m *CancelRunningFlowByDeploymentIdResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelRunningFlowByDeploymentIdResponse.Unmarshal(m, b)
}
func (m *CancelRunningFlowByDeploymentIdResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelRunningFlowByDeploymentIdResponse.Marshal(b, m, deterministic)
}
func (m *CancelRunningFlowByDeploymentIdResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelRunningFlowByDeploymentIdResponse.Merge(m, src)
}
func (m *CancelRunningFlowByDeploymentIdResponse) XXX_Size() int {
	return xxx_messageInfo_CancelRunningFlowByDeploymentIdResponse.Size(m)
}
func (m *CancelRunningFlowByDeploymentIdResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelRunningFlowByDeploymentIdResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CancelRunningFlowByDeploymentIdResponse proto.InternalMessageInfo

func (m *CancelRunningFlowByDeploymentIdResponse) GetId() *FlowId {
	if m != nil {
		return m.Id
	}
	return nil
}

type GetRunningFlowByDeploymentIdRequest struct {
	DeploymentId         int64    `protobuf:"varint,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRunningFlowByDeploymentIdRequest) Reset()         { *m = GetRunningFlowByDeploymentIdRequest{} }
func (m *GetRunningFlowByDeploymentIdRequest) String() string { return proto.CompactTextString(m) }
func (*GetRunningFlowByDeploymentIdRequest) ProtoMessage()    {}
func (*GetRunningFlowByDeploymentIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_72da89633bbf9bce, []int{13}
}

func (m *GetRunningFlowByDeploymentIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRunningFlowByDeploymentIdRequest.Unmarshal(m, b)
}
func (m *GetRunningFlowByDeploymentIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRunningFlowByDeploymentIdRequest.Marshal(b, m, deterministic)
}
func (m *GetRunningFlowByDeploymentIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRunningFlowByDeploymentIdRequest.Merge(m, src)
}
func (m *GetRunningFlowByDeploymentIdRequest) XXX_Size() int {
	return xxx_messageInfo_GetRunningFlowByDeploymentIdRequest.Size(m)
}
func (m *GetRunningFlowByDeploymentIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRunningFlowByDeploymentIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRunningFlowByDeploymentIdRequest proto.InternalMessageInfo

func (m *GetRunningFlowByDeploymentIdRequest) GetDeploymentId() int64 {
	if m != nil {
		return m.DeploymentId
	}
	return 0
}

type GetRunningFlowByDeploymentIdResponse struct {
	Id                   *FlowId     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status               *FlowStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Config               *FlowConfig `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetRunningFlowByDeploymentIdResponse) Reset()         { *m = GetRunningFlowByDeploymentIdResponse{} }
func (m *GetRunningFlowByDeploymentIdResponse) String() string { return proto.CompactTextString(m) }
func (*GetRunningFlowByDeploymentIdResponse) ProtoMessage()    {}
func (*GetRunningFlowByDeploymentIdResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_72da89633bbf9bce, []int{14}
}

func (m *GetRunningFlowByDeploymentIdResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRunningFlowByDeploymentIdResponse.Unmarshal(m, b)
}
func (m *GetRunningFlowByDeploymentIdResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRunningFlowByDeploymentIdResponse.Marshal(b, m, deterministic)
}
func (m *GetRunningFlowByDeploymentIdResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRunningFlowByDeploymentIdResponse.Merge(m, src)
}
func (m *GetRunningFlowByDeploymentIdResponse) XXX_Size() int {
	return xxx_messageInfo_GetRunningFlowByDeploymentIdResponse.Size(m)
}
func (m *GetRunningFlowByDeploymentIdResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRunningFlowByDeploymentIdResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRunningFlowByDeploymentIdResponse proto.InternalMessageInfo

func (m *GetRunningFlowByDeploymentIdResponse) GetId() *FlowId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *GetRunningFlowByDeploymentIdResponse) GetStatus() *FlowStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetRunningFlowByDeploymentIdResponse) GetConfig() *FlowConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func init() {
	proto.RegisterType((*FlowId)(nil), "improbable.int.workflow.FlowId")
	proto.RegisterType((*SubmitFlowRequest)(nil), "improbable.int.workflow.SubmitFlowRequest")
	proto.RegisterType((*SubmitFlowResponse)(nil), "improbable.int.workflow.SubmitFlowResponse")
	proto.RegisterType((*StartFlowRequest)(nil), "improbable.int.workflow.StartFlowRequest")
	proto.RegisterType((*StartFlowResponse)(nil), "improbable.int.workflow.StartFlowResponse")
	proto.RegisterType((*GetFlowRequest)(nil), "improbable.int.workflow.GetFlowRequest")
	proto.RegisterType((*GetFlowResponse)(nil), "improbable.int.workflow.GetFlowResponse")
	proto.RegisterType((*ListFlowsRequest)(nil), "improbable.int.workflow.ListFlowsRequest")
	proto.RegisterType((*ListFlowsResponse)(nil), "improbable.int.workflow.ListFlowsResponse")
	proto.RegisterType((*CancelFlowRequest)(nil), "improbable.int.workflow.CancelFlowRequest")
	proto.RegisterType((*CancelFlowResponse)(nil), "improbable.int.workflow.CancelFlowResponse")
	proto.RegisterType((*CancelRunningFlowByDeploymentIdRequest)(nil), "improbable.int.workflow.CancelRunningFlowByDeploymentIdRequest")
	proto.RegisterType((*CancelRunningFlowByDeploymentIdResponse)(nil), "improbable.int.workflow.CancelRunningFlowByDeploymentIdResponse")
	proto.RegisterType((*GetRunningFlowByDeploymentIdRequest)(nil), "improbable.int.workflow.GetRunningFlowByDeploymentIdRequest")
	proto.RegisterType((*GetRunningFlowByDeploymentIdResponse)(nil), "improbable.int.workflow.GetRunningFlowByDeploymentIdResponse")
}

func init() {
	proto.RegisterFile("improbable/int/workflow/service.proto", fileDescriptor_72da89633bbf9bce)
}

var fileDescriptor_72da89633bbf9bce = []byte{
	// 697 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x56, 0xcb, 0x6e, 0xd3, 0x40,
	0x14, 0x95, 0x93, 0x36, 0x6d, 0xaf, 0xa1, 0x6d, 0x86, 0x4a, 0x98, 0x08, 0xa9, 0x91, 0x0b, 0x34,
	0x14, 0xc9, 0x41, 0x41, 0x2c, 0x50, 0x79, 0x95, 0x14, 0xaa, 0x22, 0xd8, 0x38, 0xac, 0x10, 0x52,
	0xe5, 0xc4, 0xb7, 0x61, 0x54, 0x7b, 0x6c, 0x3c, 0x63, 0x4a, 0xbe, 0x85, 0x1d, 0xe2, 0x03, 0xf8,
	0x00, 0xfe, 0x01, 0xf1, 0x47, 0xc8, 0x33, 0xce, 0x83, 0x98, 0xd8, 0x21, 0x65, 0xc3, 0x26, 0x4a,
	0xc6, 0xe7, 0x9c, 0xb9, 0x73, 0x7c, 0xcf, 0x9d, 0xc0, 0x4d, 0xea, 0x87, 0x51, 0xd0, 0x75, 0xba,
	0x1e, 0x36, 0x29, 0x13, 0xcd, 0xf3, 0x20, 0x3a, 0x3b, 0xf5, 0x82, 0xf3, 0x26, 0xc7, 0xe8, 0x23,
	0xed, 0xa1, 0x15, 0x46, 0x81, 0x08, 0xc8, 0xd5, 0x31, 0xcc, 0xa2, 0x4c, 0x58, 0x43, 0x58, 0xed,
	0x5a, 0x3f, 0x08, 0xfa, 0x1e, 0x36, 0x25, 0xac, 0x1b, 0x9f, 0x36, 0x1d, 0x36, 0x50, 0x9c, 0xda,
	0xf6, 0xf4, 0x23, 0x41, 0x7d, 0xe4, 0xc2, 0xf1, 0xc3, 0x14, 0x60, 0xce, 0xda, 0x3b, 0xf9, 0x50,
	0x18, 0xd3, 0x80, 0xca, 0x0b, 0x2f, 0x38, 0x3f, 0x76, 0xc9, 0x3a, 0x94, 0xa8, 0x6b, 0x68, 0x75,
	0xad, 0x51, 0xb6, 0x4b, 0xd4, 0x35, 0xbf, 0x94, 0xa0, 0xda, 0x89, 0xbb, 0x3e, 0x15, 0x09, 0xc0,
	0xc6, 0x0f, 0x31, 0x72, 0x41, 0x08, 0x2c, 0x31, 0xc7, 0x47, 0x89, 0x5b, 0xb3, 0xe5, 0x77, 0x52,
	0x07, 0xdd, 0x45, 0xde, 0x8b, 0x68, 0x28, 0x68, 0xc0, 0x8c, 0x92, 0x7c, 0x34, 0xb9, 0x44, 0xee,
	0xc2, 0xaa, 0x8f, 0xc2, 0x71, 0x1d, 0xe1, 0x18, 0xe5, 0xba, 0xd6, 0xd0, 0x5b, 0x5b, 0x96, 0xaa,
	0xde, 0x1a, 0x56, 0x6f, 0x1d, 0xb0, 0x81, 0x3d, 0x42, 0x91, 0x36, 0x6c, 0x44, 0xc8, 0x7b, 0xef,
	0xd1, 0x8d, 0x3d, 0x3c, 0x49, 0x4e, 0x66, 0x2c, 0x49, 0x62, 0x2d, 0x43, 0x7c, 0x33, 0x3c, 0xb6,
	0xbd, 0x3e, 0xa6, 0x24, 0x8b, 0x64, 0x1f, 0x74, 0xfc, 0x14, 0xd2, 0x68, 0xa0, 0x04, 0x96, 0x0b,
	0x05, 0x40, 0xc1, 0x25, 0x79, 0x07, 0x2e, 0xbb, 0x18, 0x7a, 0xc1, 0xc0, 0x47, 0x26, 0x4e, 0xa8,
	0x6b, 0x54, 0xa4, 0x35, 0x97, 0xc6, 0x8b, 0xc7, 0xae, 0xf9, 0x1c, 0xc8, 0xa4, 0x47, 0x3c, 0x0c,
	0x18, 0x47, 0xd2, 0x1c, 0x59, 0xa9, 0xb7, 0xb6, 0xad, 0x19, 0xaf, 0xd6, 0x52, 0xbe, 0x4b, 0xaf,
	0xdb, 0xb0, 0xd9, 0x11, 0x4e, 0xf4, 0x9b, 0xd3, 0x7f, 0x2d, 0x72, 0x05, 0xaa, 0x13, 0x22, 0xaa,
	0x14, 0xf3, 0x00, 0xd6, 0x8f, 0xf0, 0x62, 0xba, 0xdf, 0x35, 0xd8, 0x18, 0x69, 0x2c, 0x78, 0x42,
	0xb2, 0x0f, 0x15, 0x2e, 0x1c, 0x11, 0x73, 0xd9, 0x1e, 0x7a, 0x6b, 0x27, 0x97, 0xd4, 0x91, 0x50,
	0x3b, 0xa5, 0x24, 0xe4, 0x5e, 0xc0, 0x4e, 0x69, 0x3f, 0x6d, 0x9e, 0x7c, 0x72, 0x5b, 0x42, 0xed,
	0x94, 0x62, 0x7e, 0xd3, 0x60, 0xf3, 0x15, 0xe5, 0xb2, 0x7e, 0x3e, 0x34, 0x61, 0x0f, 0x36, 0x29,
	0xeb, 0x79, 0xb1, 0x8b, 0xed, 0xc0, 0x0f, 0x3d, 0x14, 0xa8, 0x4e, 0xb3, 0x6a, 0x67, 0xd6, 0xc9,
	0x03, 0x00, 0x9e, 0xf8, 0xaa, 0x9a, 0xa8, 0x54, 0xd8, 0x44, 0x6b, 0x12, 0x2d, 0x7b, 0xe8, 0x3e,
	0xac, 0x22, 0x73, 0x15, 0xb1, 0x5c, 0x48, 0x5c, 0x41, 0xe6, 0x26, 0xbf, 0xcc, 0x0e, 0x54, 0x27,
	0x2a, 0x4e, 0x2d, 0x7f, 0x0c, 0xcb, 0xc9, 0x11, 0xb9, 0xa1, 0xd5, 0xcb, 0x0d, 0xbd, 0xd5, 0x98,
	0xe9, 0xc1, 0xd4, 0xbb, 0xb2, 0x15, 0xcd, 0x3c, 0x84, 0x6a, 0xdb, 0x61, 0x3d, 0xf4, 0x2e, 0xd4,
	0x0c, 0x5b, 0x40, 0x26, 0x55, 0xd2, 0x2e, 0x7b, 0x0d, 0xb7, 0xd4, 0xaa, 0x1d, 0x33, 0x46, 0x59,
	0x3f, 0x79, 0xf8, 0x6c, 0x70, 0x38, 0x91, 0x94, 0xe1, 0x86, 0x99, 0x54, 0x69, 0x7f, 0x48, 0xd5,
	0x5b, 0xd8, 0x2d, 0x94, 0x5b, 0x34, 0x6a, 0x2f, 0x61, 0xe7, 0x08, 0xc5, 0xbf, 0xa9, 0xf3, 0xa7,
	0x06, 0x37, 0xf2, 0xc5, 0xfe, 0xbb, 0xb8, 0xb4, 0x7e, 0x54, 0x40, 0x97, 0x9a, 0xea, 0x7e, 0x22,
	0x08, 0x30, 0x9e, 0x70, 0x64, 0x6f, 0xa6, 0x54, 0xe6, 0xaa, 0xa8, 0xdd, 0x99, 0x0b, 0x9b, 0x3a,
	0xd4, 0x85, 0xb5, 0xd1, 0xf0, 0x22, 0xb7, 0x67, 0x33, 0xa7, 0xa6, 0x64, 0x6d, 0x6f, 0x1e, 0x68,
	0xba, 0xc7, 0x3b, 0x58, 0x49, 0xb3, 0x41, 0x76, 0x8b, 0xd3, 0xa3, 0xf4, 0xe7, 0x8e, 0x59, 0x62,
	0xd4, 0x38, 0x19, 0x39, 0x46, 0x65, 0x42, 0x98, 0x63, 0x54, 0x36, 0x6a, 0xe4, 0xab, 0x06, 0xdb,
	0x05, 0xe1, 0x20, 0x4f, 0x0a, 0x04, 0x8b, 0xba, 0xbf, 0xf6, 0x74, 0x71, 0x81, 0xb4, 0xcc, 0xcf,
	0x1a, 0x5c, 0xcf, 0x8b, 0x06, 0x79, 0x98, 0x67, 0x6c, 0x61, 0x81, 0x8f, 0x16, 0x64, 0xa7, 0xd5,
	0x9d, 0x01, 0x49, 0x06, 0x6c, 0x27, 0xfd, 0xb3, 0xe0, 0xca, 0x49, 0x9b, 0xd3, 0x76, 0xd3, 0xf7,
	0x47, 0x4e, 0xdb, 0x65, 0x06, 0x77, 0xb7, 0x22, 0x47, 0xfd, 0xbd, 0x5f, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x02, 0x91, 0x07, 0xa4, 0x0b, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FlowServiceClient is the client API for FlowService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FlowServiceClient interface {
	SubmitFlow(ctx context.Context, in *SubmitFlowRequest, opts ...grpc.CallOption) (*SubmitFlowResponse, error)
	StartFlow(ctx context.Context, in *StartFlowRequest, opts ...grpc.CallOption) (*StartFlowResponse, error)
	GetFlow(ctx context.Context, in *GetFlowRequest, opts ...grpc.CallOption) (*GetFlowResponse, error)
	CancelFlow(ctx context.Context, in *CancelFlowRequest, opts ...grpc.CallOption) (*CancelFlowResponse, error)
	CancelRunningFlowByDeploymentId(ctx context.Context, in *CancelRunningFlowByDeploymentIdRequest, opts ...grpc.CallOption) (*CancelRunningFlowByDeploymentIdResponse, error)
	GetRunningFlowByDeploymentId(ctx context.Context, in *GetRunningFlowByDeploymentIdRequest, opts ...grpc.CallOption) (*GetRunningFlowByDeploymentIdResponse, error)
	ListScheduledFlows(ctx context.Context, in *ListFlowsRequest, opts ...grpc.CallOption) (*ListFlowsResponse, error)
}

type flowServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFlowServiceClient(cc grpc.ClientConnInterface) FlowServiceClient {
	return &flowServiceClient{cc}
}

func (c *flowServiceClient) SubmitFlow(ctx context.Context, in *SubmitFlowRequest, opts ...grpc.CallOption) (*SubmitFlowResponse, error) {
	out := new(SubmitFlowResponse)
	err := c.cc.Invoke(ctx, "/improbable.int.workflow.FlowService/SubmitFlow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *flowServiceClient) StartFlow(ctx context.Context, in *StartFlowRequest, opts ...grpc.CallOption) (*StartFlowResponse, error) {
	out := new(StartFlowResponse)
	err := c.cc.Invoke(ctx, "/improbable.int.workflow.FlowService/StartFlow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *flowServiceClient) GetFlow(ctx context.Context, in *GetFlowRequest, opts ...grpc.CallOption) (*GetFlowResponse, error) {
	out := new(GetFlowResponse)
	err := c.cc.Invoke(ctx, "/improbable.int.workflow.FlowService/GetFlow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *flowServiceClient) CancelFlow(ctx context.Context, in *CancelFlowRequest, opts ...grpc.CallOption) (*CancelFlowResponse, error) {
	out := new(CancelFlowResponse)
	err := c.cc.Invoke(ctx, "/improbable.int.workflow.FlowService/CancelFlow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *flowServiceClient) CancelRunningFlowByDeploymentId(ctx context.Context, in *CancelRunningFlowByDeploymentIdRequest, opts ...grpc.CallOption) (*CancelRunningFlowByDeploymentIdResponse, error) {
	out := new(CancelRunningFlowByDeploymentIdResponse)
	err := c.cc.Invoke(ctx, "/improbable.int.workflow.FlowService/CancelRunningFlowByDeploymentId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *flowServiceClient) GetRunningFlowByDeploymentId(ctx context.Context, in *GetRunningFlowByDeploymentIdRequest, opts ...grpc.CallOption) (*GetRunningFlowByDeploymentIdResponse, error) {
	out := new(GetRunningFlowByDeploymentIdResponse)
	err := c.cc.Invoke(ctx, "/improbable.int.workflow.FlowService/GetRunningFlowByDeploymentId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *flowServiceClient) ListScheduledFlows(ctx context.Context, in *ListFlowsRequest, opts ...grpc.CallOption) (*ListFlowsResponse, error) {
	out := new(ListFlowsResponse)
	err := c.cc.Invoke(ctx, "/improbable.int.workflow.FlowService/ListScheduledFlows", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FlowServiceServer is the server API for FlowService service.
type FlowServiceServer interface {
	SubmitFlow(context.Context, *SubmitFlowRequest) (*SubmitFlowResponse, error)
	StartFlow(context.Context, *StartFlowRequest) (*StartFlowResponse, error)
	GetFlow(context.Context, *GetFlowRequest) (*GetFlowResponse, error)
	CancelFlow(context.Context, *CancelFlowRequest) (*CancelFlowResponse, error)
	CancelRunningFlowByDeploymentId(context.Context, *CancelRunningFlowByDeploymentIdRequest) (*CancelRunningFlowByDeploymentIdResponse, error)
	GetRunningFlowByDeploymentId(context.Context, *GetRunningFlowByDeploymentIdRequest) (*GetRunningFlowByDeploymentIdResponse, error)
	ListScheduledFlows(context.Context, *ListFlowsRequest) (*ListFlowsResponse, error)
}

// UnimplementedFlowServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFlowServiceServer struct {
}

func (*UnimplementedFlowServiceServer) SubmitFlow(ctx context.Context, req *SubmitFlowRequest) (*SubmitFlowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitFlow not implemented")
}
func (*UnimplementedFlowServiceServer) StartFlow(ctx context.Context, req *StartFlowRequest) (*StartFlowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartFlow not implemented")
}
func (*UnimplementedFlowServiceServer) GetFlow(ctx context.Context, req *GetFlowRequest) (*GetFlowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFlow not implemented")
}
func (*UnimplementedFlowServiceServer) CancelFlow(ctx context.Context, req *CancelFlowRequest) (*CancelFlowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelFlow not implemented")
}
func (*UnimplementedFlowServiceServer) CancelRunningFlowByDeploymentId(ctx context.Context, req *CancelRunningFlowByDeploymentIdRequest) (*CancelRunningFlowByDeploymentIdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelRunningFlowByDeploymentId not implemented")
}
func (*UnimplementedFlowServiceServer) GetRunningFlowByDeploymentId(ctx context.Context, req *GetRunningFlowByDeploymentIdRequest) (*GetRunningFlowByDeploymentIdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRunningFlowByDeploymentId not implemented")
}
func (*UnimplementedFlowServiceServer) ListScheduledFlows(ctx context.Context, req *ListFlowsRequest) (*ListFlowsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListScheduledFlows not implemented")
}

func RegisterFlowServiceServer(s *grpc.Server, srv FlowServiceServer) {
	s.RegisterService(&_FlowService_serviceDesc, srv)
}

func _FlowService_SubmitFlow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmitFlowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FlowServiceServer).SubmitFlow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.int.workflow.FlowService/SubmitFlow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FlowServiceServer).SubmitFlow(ctx, req.(*SubmitFlowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FlowService_StartFlow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartFlowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FlowServiceServer).StartFlow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.int.workflow.FlowService/StartFlow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FlowServiceServer).StartFlow(ctx, req.(*StartFlowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FlowService_GetFlow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFlowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FlowServiceServer).GetFlow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.int.workflow.FlowService/GetFlow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FlowServiceServer).GetFlow(ctx, req.(*GetFlowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FlowService_CancelFlow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelFlowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FlowServiceServer).CancelFlow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.int.workflow.FlowService/CancelFlow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FlowServiceServer).CancelFlow(ctx, req.(*CancelFlowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FlowService_CancelRunningFlowByDeploymentId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelRunningFlowByDeploymentIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FlowServiceServer).CancelRunningFlowByDeploymentId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.int.workflow.FlowService/CancelRunningFlowByDeploymentId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FlowServiceServer).CancelRunningFlowByDeploymentId(ctx, req.(*CancelRunningFlowByDeploymentIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FlowService_GetRunningFlowByDeploymentId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRunningFlowByDeploymentIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FlowServiceServer).GetRunningFlowByDeploymentId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.int.workflow.FlowService/GetRunningFlowByDeploymentId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FlowServiceServer).GetRunningFlowByDeploymentId(ctx, req.(*GetRunningFlowByDeploymentIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FlowService_ListScheduledFlows_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFlowsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FlowServiceServer).ListScheduledFlows(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/improbable.int.workflow.FlowService/ListScheduledFlows",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FlowServiceServer).ListScheduledFlows(ctx, req.(*ListFlowsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FlowService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "improbable.int.workflow.FlowService",
	HandlerType: (*FlowServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SubmitFlow",
			Handler:    _FlowService_SubmitFlow_Handler,
		},
		{
			MethodName: "StartFlow",
			Handler:    _FlowService_StartFlow_Handler,
		},
		{
			MethodName: "GetFlow",
			Handler:    _FlowService_GetFlow_Handler,
		},
		{
			MethodName: "CancelFlow",
			Handler:    _FlowService_CancelFlow_Handler,
		},
		{
			MethodName: "CancelRunningFlowByDeploymentId",
			Handler:    _FlowService_CancelRunningFlowByDeploymentId_Handler,
		},
		{
			MethodName: "GetRunningFlowByDeploymentId",
			Handler:    _FlowService_GetRunningFlowByDeploymentId_Handler,
		},
		{
			MethodName: "ListScheduledFlows",
			Handler:    _FlowService_ListScheduledFlows_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "improbable/int/workflow/service.proto",
}
