// Code generated by protoc-gen-go. DO NOT EDIT.
// source: improbable/int/workflow/flow.proto

package improbable_int_workflow

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	accounts "improbable.io/proto/infra/accounts"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FlowConfig struct {
	Name                 string                   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description          string                   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	ServiceAccount       *accounts.ServiceAccount `protobuf:"bytes,3,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
	Metadata             *any.Any                 `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	CreationTime         *timestamp.Timestamp     `protobuf:"bytes,5,opt,name=creation_time,json=creationTime,proto3" json:"creation_time,omitempty"`
	ExpiryTime           *timestamp.Timestamp     `protobuf:"bytes,6,opt,name=expiry_time,json=expiryTime,proto3" json:"expiry_time,omitempty"`
	InitiatingUserId     int64                    `protobuf:"varint,7,opt,name=initiating_user_id,json=initiatingUserId,proto3" json:"initiating_user_id,omitempty"`
	ExperimentzSet       string                   `protobuf:"bytes,9,opt,name=experimentz_set,json=experimentzSet,proto3" json:"experimentz_set,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *FlowConfig) Reset()         { *m = FlowConfig{} }
func (m *FlowConfig) String() string { return proto.CompactTextString(m) }
func (*FlowConfig) ProtoMessage()    {}
func (*FlowConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_103cab93a7aab3ee, []int{0}
}

func (m *FlowConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlowConfig.Unmarshal(m, b)
}
func (m *FlowConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlowConfig.Marshal(b, m, deterministic)
}
func (m *FlowConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlowConfig.Merge(m, src)
}
func (m *FlowConfig) XXX_Size() int {
	return xxx_messageInfo_FlowConfig.Size(m)
}
func (m *FlowConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_FlowConfig.DiscardUnknown(m)
}

var xxx_messageInfo_FlowConfig proto.InternalMessageInfo

func (m *FlowConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FlowConfig) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *FlowConfig) GetServiceAccount() *accounts.ServiceAccount {
	if m != nil {
		return m.ServiceAccount
	}
	return nil
}

func (m *FlowConfig) GetMetadata() *any.Any {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *FlowConfig) GetCreationTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreationTime
	}
	return nil
}

func (m *FlowConfig) GetExpiryTime() *timestamp.Timestamp {
	if m != nil {
		return m.ExpiryTime
	}
	return nil
}

func (m *FlowConfig) GetInitiatingUserId() int64 {
	if m != nil {
		return m.InitiatingUserId
	}
	return 0
}

func (m *FlowConfig) GetExperimentzSet() string {
	if m != nil {
		return m.ExperimentzSet
	}
	return ""
}

type FlowStatus struct {
	Completed            bool                 `protobuf:"varint,1,opt,name=completed,proto3" json:"completed,omitempty"`
	Description          string               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	State                *any.Any             `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	Error                *Error               `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	LastStepError        *Error               `protobuf:"bytes,7,opt,name=last_step_error,json=lastStepError,proto3" json:"last_step_error,omitempty"`
	RescheduleTime       *timestamp.Timestamp `protobuf:"bytes,5,opt,name=reschedule_time,json=rescheduleTime,proto3" json:"reschedule_time,omitempty"`
	Cancelled            bool                 `protobuf:"varint,6,opt,name=cancelled,proto3" json:"cancelled,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *FlowStatus) Reset()         { *m = FlowStatus{} }
func (m *FlowStatus) String() string { return proto.CompactTextString(m) }
func (*FlowStatus) ProtoMessage()    {}
func (*FlowStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_103cab93a7aab3ee, []int{1}
}

func (m *FlowStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlowStatus.Unmarshal(m, b)
}
func (m *FlowStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlowStatus.Marshal(b, m, deterministic)
}
func (m *FlowStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlowStatus.Merge(m, src)
}
func (m *FlowStatus) XXX_Size() int {
	return xxx_messageInfo_FlowStatus.Size(m)
}
func (m *FlowStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_FlowStatus.DiscardUnknown(m)
}

var xxx_messageInfo_FlowStatus proto.InternalMessageInfo

func (m *FlowStatus) GetCompleted() bool {
	if m != nil {
		return m.Completed
	}
	return false
}

func (m *FlowStatus) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *FlowStatus) GetState() *any.Any {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *FlowStatus) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *FlowStatus) GetLastStepError() *Error {
	if m != nil {
		return m.LastStepError
	}
	return nil
}

func (m *FlowStatus) GetRescheduleTime() *timestamp.Timestamp {
	if m != nil {
		return m.RescheduleTime
	}
	return nil
}

func (m *FlowStatus) GetCancelled() bool {
	if m != nil {
		return m.Cancelled
	}
	return false
}

type Error struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_103cab93a7aab3ee, []int{2}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Error) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func init() {
	proto.RegisterType((*FlowConfig)(nil), "improbable.int.workflow.FlowConfig")
	proto.RegisterType((*FlowStatus)(nil), "improbable.int.workflow.FlowStatus")
	proto.RegisterType((*Error)(nil), "improbable.int.workflow.Error")
}

func init() {
	proto.RegisterFile("improbable/int/workflow/flow.proto", fileDescriptor_103cab93a7aab3ee)
}

var fileDescriptor_103cab93a7aab3ee = []byte{
	// 481 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0x51, 0x8b, 0x13, 0x3d,
	0x14, 0xa5, 0xdb, 0x76, 0xb7, 0xbd, 0xfd, 0xda, 0x2e, 0xe1, 0x03, 0xc7, 0x22, 0x5a, 0xaa, 0x60,
	0x11, 0xc9, 0x88, 0xfa, 0x26, 0x22, 0xcb, 0xe2, 0x82, 0xe2, 0xd3, 0x54, 0x9f, 0x87, 0x74, 0xe6,
	0xb6, 0x06, 0x67, 0x92, 0x90, 0xdc, 0xb1, 0x5b, 0xff, 0x8b, 0x3f, 0xcc, 0x7f, 0x23, 0x93, 0x74,
	0x6c, 0x5d, 0x95, 0xed, 0xcb, 0x90, 0x7b, 0xee, 0x39, 0x99, 0x7b, 0xcf, 0x09, 0xcc, 0x64, 0x69,
	0xac, 0x5e, 0x8a, 0x65, 0x81, 0xb1, 0x54, 0x14, 0x6f, 0xb4, 0xfd, 0xb2, 0x2a, 0xf4, 0x26, 0xae,
	0x3f, 0xdc, 0x58, 0x4d, 0x9a, 0xdd, 0xd9, 0x73, 0xb8, 0x54, 0xc4, 0x1b, 0xce, 0xe4, 0xee, 0x5a,
	0xeb, 0x75, 0x81, 0xb1, 0xa7, 0x2d, 0xab, 0x55, 0x2c, 0xd4, 0x36, 0x68, 0x26, 0x0f, 0x6e, 0xb6,
	0x48, 0x96, 0xe8, 0x48, 0x94, 0x66, 0x47, 0x78, 0x24, 0xd5, 0xca, 0x8a, 0x58, 0x64, 0x99, 0xae,
	0x14, 0xb9, 0xd8, 0xa1, 0xfd, 0x2a, 0x33, 0x4c, 0x77, 0x40, 0x60, 0xcd, 0xbe, 0xb7, 0x01, 0xae,
	0x0a, 0xbd, 0xb9, 0xd4, 0x6a, 0x25, 0xd7, 0x8c, 0x41, 0x47, 0x89, 0x12, 0xa3, 0xd6, 0xb4, 0x35,
	0xef, 0x27, 0xfe, 0xcc, 0xa6, 0x30, 0xc8, 0xd1, 0x65, 0x56, 0x1a, 0x92, 0x5a, 0x45, 0x27, 0xbe,
	0x75, 0x08, 0xb1, 0x0f, 0x30, 0xbe, 0x71, 0x7b, 0xd4, 0x9e, 0xb6, 0xe6, 0x83, 0xe7, 0x0f, 0xf9,
	0xc1, 0x66, 0xcd, 0x24, 0x7c, 0x11, 0xb8, 0x17, 0xa1, 0x4e, 0x46, 0xee, 0xb7, 0x9a, 0x3d, 0x83,
	0x5e, 0x89, 0x24, 0x72, 0x41, 0x22, 0xea, 0xf8, 0x6b, 0xfe, 0xe7, 0x61, 0x59, 0xde, 0x2c, 0xcb,
	0x2f, 0xd4, 0x36, 0xf9, 0xc5, 0x62, 0x6f, 0x60, 0x98, 0x59, 0x14, 0xf5, 0x2c, 0x69, 0x6d, 0x43,
	0xd4, 0xf5, 0xb2, 0xc9, 0x1f, 0xb2, 0x8f, 0x8d, 0x47, 0xc9, 0x7f, 0x8d, 0xa0, 0x86, 0xd8, 0x2b,
	0x18, 0xe0, 0xb5, 0x91, 0x76, 0x1b, 0xe4, 0xa7, 0xb7, 0xca, 0x21, 0xd0, 0xbd, 0xf8, 0x29, 0x30,
	0xa9, 0x24, 0x49, 0x41, 0x52, 0xad, 0xd3, 0xca, 0xa1, 0x4d, 0x65, 0x1e, 0x9d, 0x4d, 0x5b, 0xf3,
	0x76, 0x72, 0xbe, 0xef, 0x7c, 0x72, 0x68, 0xdf, 0xe5, 0xec, 0x31, 0x8c, 0xf1, 0xda, 0xa0, 0x95,
	0x25, 0x2a, 0xfa, 0x96, 0x3a, 0xa4, 0xa8, 0xef, 0x1d, 0x1d, 0x1d, 0xc0, 0x0b, 0xa4, 0xf7, 0x9d,
	0x5e, 0xef, 0xbc, 0x3f, 0xfb, 0x71, 0x12, 0xf2, 0x59, 0x90, 0xa0, 0xca, 0xb1, 0x7b, 0xd0, 0xcf,
	0x74, 0x69, 0x0a, 0x24, 0xcc, 0x7d, 0x48, 0xbd, 0x64, 0x0f, 0x1c, 0x91, 0xd4, 0x13, 0xe8, 0x3a,
	0x12, 0x84, 0xbb, 0x7c, 0xfe, 0x6e, 0x6c, 0xa0, 0xb0, 0x97, 0xd0, 0x45, 0x6b, 0xb5, 0xdd, 0x85,
	0x70, 0x9f, 0xff, 0xe3, 0x95, 0xf2, 0xb7, 0x35, 0x2b, 0x09, 0x64, 0x76, 0x05, 0xe3, 0x42, 0x38,
	0x4a, 0x1d, 0xa1, 0x49, 0x83, 0xfe, 0xec, 0x28, 0xfd, 0xb0, 0x96, 0x2d, 0x08, 0x8d, 0x2f, 0xd9,
	0x25, 0x8c, 0x2d, 0xba, 0xec, 0x33, 0xe6, 0x55, 0x81, 0xc7, 0xa6, 0x3a, 0xda, 0x4b, 0x7c, 0x34,
	0xb5, 0x5d, 0x42, 0x65, 0x58, 0x14, 0x98, 0xfb, 0x54, 0x6b, 0xbb, 0x1a, 0x60, 0xf6, 0x1a, 0xba,
	0xe1, 0x5f, 0x0c, 0x3a, 0x99, 0xce, 0xc3, 0xab, 0x1f, 0x26, 0xfe, 0x7c, 0xbb, 0x97, 0xcb, 0x53,
	0x3f, 0xc0, 0x8b, 0x9f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x3b, 0x52, 0x9b, 0xe8, 0xe2, 0x03, 0x00,
	0x00,
}
