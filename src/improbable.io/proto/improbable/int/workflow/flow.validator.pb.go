// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/int/workflow/flow.proto

package improbable_int_workflow

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/any"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	_ "improbable.io/proto/infra/accounts"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *FlowConfig) Validate() error {
	if this.ServiceAccount != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ServiceAccount); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ServiceAccount", err)
		}
	}
	if this.Metadata != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Metadata); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Metadata", err)
		}
	}
	if this.CreationTime != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CreationTime); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CreationTime", err)
		}
	}
	if this.ExpiryTime != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ExpiryTime); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ExpiryTime", err)
		}
	}
	return nil
}
func (this *FlowStatus) Validate() error {
	if this.State != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.State); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("State", err)
		}
	}
	if this.Error != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Error); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Error", err)
		}
	}
	if this.LastStepError != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.LastStepError); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("LastStepError", err)
		}
	}
	if this.RescheduleTime != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.RescheduleTime); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("RescheduleTime", err)
		}
	}
	return nil
}
func (this *Error) Validate() error {
	return nil
}
