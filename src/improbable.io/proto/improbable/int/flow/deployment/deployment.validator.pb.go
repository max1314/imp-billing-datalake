// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/int/flow/deployment/deployment.proto

package improbable_int_flow_deployment

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/improbable-io/go-proto-logfields"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	_ "improbable.io/proto/improbable/int/flow"
	_ "improbable.io/proto/improbable/platform/assembly"
	_ "improbable.io/proto/improbable/platform/deployment"
	math "math"
	regexp "regexp"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

var _regex_DeploymentCreate_DeprecatedDeploymentUuid = regexp.MustCompile(`^[A-Za-z0-9-]{2,40}$`)

func (this *DeploymentCreate) Validate() error {
	if nil == this.DeploymentId {
		return github_com_mwitkow_go_proto_validators.FieldError("DeploymentId", fmt.Errorf("message must exist"))
	}
	if this.DeploymentId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.DeploymentId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("DeploymentId", err)
		}
	}
	if this.ClusterId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ClusterId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ClusterId", err)
		}
	}
	if this.SimulationPlaneId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.SimulationPlaneId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("SimulationPlaneId", err)
		}
	}
	if this.ControlPlaneId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ControlPlaneId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ControlPlaneId", err)
		}
	}
	if nil == this.DeploymentConfiguration {
		return github_com_mwitkow_go_proto_validators.FieldError("DeploymentConfiguration", fmt.Errorf("message must exist"))
	}
	if this.DeploymentConfiguration != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.DeploymentConfiguration); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("DeploymentConfiguration", err)
		}
	}
	if nil == this.AssemblyId {
		return github_com_mwitkow_go_proto_validators.FieldError("AssemblyId", fmt.Errorf("message must exist"))
	}
	if this.AssemblyId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.AssemblyId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("AssemblyId", err)
		}
	}
	if nil == this.ServiceAccount {
		return github_com_mwitkow_go_proto_validators.FieldError("ServiceAccount", fmt.Errorf("message must exist"))
	}
	if this.ServiceAccount != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ServiceAccount); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ServiceAccount", err)
		}
	}
	if !_regex_DeploymentCreate_DeprecatedDeploymentUuid.MatchString(this.DeprecatedDeploymentUuid) {
		return github_com_mwitkow_go_proto_validators.FieldError("DeprecatedDeploymentUuid", fmt.Errorf(`value '%v' must be a string conforming to regex "^[A-Za-z0-9-]{2,40}$"`, this.DeprecatedDeploymentUuid))
	}
	return nil
}
func (this *DeploymentDelete) Validate() error {
	if nil == this.DeploymentId {
		return github_com_mwitkow_go_proto_validators.FieldError("DeploymentId", fmt.Errorf("message must exist"))
	}
	if this.DeploymentId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.DeploymentId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("DeploymentId", err)
		}
	}
	if nil == this.ClusterId {
		return github_com_mwitkow_go_proto_validators.FieldError("ClusterId", fmt.Errorf("message must exist"))
	}
	if this.ClusterId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ClusterId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ClusterId", err)
		}
	}
	if this.SimulationPlaneId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.SimulationPlaneId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("SimulationPlaneId", err)
		}
	}
	if this.ControlPlaneId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ControlPlaneId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ControlPlaneId", err)
		}
	}
	if this.DeploymentUuid == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("DeploymentUuid", fmt.Errorf(`value '%v' must not be an empty string`, this.DeploymentUuid))
	}
	if this.TerminatorSub == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("TerminatorSub", fmt.Errorf(`value '%v' must not be an empty string`, this.TerminatorSub))
	}
	return nil
}
func (this *DeploymentRestart) Validate() error {
	if nil == this.DeploymentId {
		return github_com_mwitkow_go_proto_validators.FieldError("DeploymentId", fmt.Errorf("message must exist"))
	}
	if this.DeploymentId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.DeploymentId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("DeploymentId", err)
		}
	}
	if this.SimulationPlaneId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.SimulationPlaneId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("SimulationPlaneId", err)
		}
	}
	if this.ControlPlaneId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ControlPlaneId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ControlPlaneId", err)
		}
	}
	return nil
}
func (this *DeploymentDeleteFlowState) Validate() error {
	return nil
}
