// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/int/toolbelt/wrapper/plugin_import/plugin_import.proto

package improbable_toolbelt_wrapper_plugin_import

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *PluginImportRequest) Validate() error {
	if this.RootCommand != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.RootCommand); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("RootCommand", err)
		}
	}
	return nil
}
func (this *PluginImportResponse) Validate() error {
	return nil
}
func (this *Command) Validate() error {
	for _, item := range this.Flags {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Flags", err)
			}
		}
	}
	for _, item := range this.SubCommands {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("SubCommands", err)
			}
		}
	}
	return nil
}
func (this *Flag) Validate() error {
	return nil
}
