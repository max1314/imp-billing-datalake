// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/schema/schema_bundle.proto

package improbable_schema

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	github_com_improbable_io_go_proto_logfields "github.com/improbable-io/go-proto-logfields"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *Identifier) LogFields() map[string]string {
	return map[string]string{}
}

func (this *Identifier) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *EnumReference) LogFields() map[string]string {
	return map[string]string{}
}

func (this *EnumReference) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *EnumDefinition) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	identifierFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Identifier)
	hasInner = hasInner || len(identifierFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range identifierFields {
		res[k] = v
	}
	return res
}

func (this *EnumDefinition) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Identifier, dst)
}

func (this *EnumDefinition_ValueDefinition) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	identifierFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Identifier)
	hasInner = hasInner || len(identifierFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range identifierFields {
		res[k] = v
	}
	return res
}

func (this *EnumDefinition_ValueDefinition) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Identifier, dst)
}

func (this *ValueTypeReference) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	var valueTypeFields map[string]string
	switch f := this.ValueType.(type) {
	case *ValueTypeReference_Enum:
		valueTypeFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.Enum)
	case *ValueTypeReference_Type:
		valueTypeFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.Type)
	default:
		valueTypeFields = map[string]string{}
	}
	hasInner = hasInner || len(valueTypeFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range valueTypeFields {
		res[k] = v
	}
	return res
}

func (this *ValueTypeReference) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	if f, ok := this.ValueType.(*ValueTypeReference_Enum); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.Enum, dst)
	}
	if f, ok := this.ValueType.(*ValueTypeReference_Type); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.Type, dst)
	}
}

func (this *TypeReference) LogFields() map[string]string {
	return map[string]string{}
}

func (this *TypeReference) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *TypeDefinition) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	identifierFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Identifier)
	hasInner = hasInner || len(identifierFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range identifierFields {
		res[k] = v
	}
	return res
}

func (this *TypeDefinition) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Identifier, dst)
}

func (this *TypeDefinition_FieldDefinition) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	var typeFields map[string]string
	switch f := this.Type.(type) {
	case *TypeDefinition_FieldDefinition_SingularType_:
		typeFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.SingularType)
	case *TypeDefinition_FieldDefinition_OptionType_:
		typeFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.OptionType)
	case *TypeDefinition_FieldDefinition_ListType_:
		typeFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.ListType)
	case *TypeDefinition_FieldDefinition_MapType_:
		typeFields = github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(f.MapType)
	default:
		typeFields = map[string]string{}
	}
	hasInner = hasInner || len(typeFields) > 0
	identifierFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Identifier)
	hasInner = hasInner || len(identifierFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range identifierFields {
		res[k] = v
	}
	for k, v := range typeFields {
		res[k] = v
	}
	return res
}

func (this *TypeDefinition_FieldDefinition) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Identifier, dst)
	if f, ok := this.Type.(*TypeDefinition_FieldDefinition_SingularType_); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.SingularType, dst)
	}
	if f, ok := this.Type.(*TypeDefinition_FieldDefinition_OptionType_); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.OptionType, dst)
	}
	if f, ok := this.Type.(*TypeDefinition_FieldDefinition_ListType_); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.ListType, dst)
	}
	if f, ok := this.Type.(*TypeDefinition_FieldDefinition_MapType_); ok {
		github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(f.MapType, dst)
	}
}

func (this *TypeDefinition_FieldDefinition_SingularType) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	typeFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Type)
	hasInner = hasInner || len(typeFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range typeFields {
		res[k] = v
	}
	return res
}

func (this *TypeDefinition_FieldDefinition_SingularType) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Type, dst)
}

func (this *TypeDefinition_FieldDefinition_OptionType) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	innerTypeFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.InnerType)
	hasInner = hasInner || len(innerTypeFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range innerTypeFields {
		res[k] = v
	}
	return res
}

func (this *TypeDefinition_FieldDefinition_OptionType) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.InnerType, dst)
}

func (this *TypeDefinition_FieldDefinition_ListType) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	innerTypeFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.InnerType)
	hasInner = hasInner || len(innerTypeFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range innerTypeFields {
		res[k] = v
	}
	return res
}

func (this *TypeDefinition_FieldDefinition_ListType) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.InnerType, dst)
}

func (this *TypeDefinition_FieldDefinition_MapType) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	keyTypeFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.KeyType)
	hasInner = hasInner || len(keyTypeFields) > 0
	valueTypeFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.ValueType)
	hasInner = hasInner || len(valueTypeFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range keyTypeFields {
		res[k] = v
	}
	for k, v := range valueTypeFields {
		res[k] = v
	}
	return res
}

func (this *TypeDefinition_FieldDefinition_MapType) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.KeyType, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.ValueType, dst)
}

func (this *ComponentDefinition) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	identifierFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Identifier)
	hasInner = hasInner || len(identifierFields) > 0
	dataDefinitionFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.DataDefinition)
	hasInner = hasInner || len(dataDefinitionFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range identifierFields {
		res[k] = v
	}
	for k, v := range dataDefinitionFields {
		res[k] = v
	}
	return res
}

func (this *ComponentDefinition) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Identifier, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.DataDefinition, dst)
}

func (this *ComponentDefinition_EventDefinition) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	identifierFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Identifier)
	hasInner = hasInner || len(identifierFields) > 0
	typeFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Type)
	hasInner = hasInner || len(typeFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range identifierFields {
		res[k] = v
	}
	for k, v := range typeFields {
		res[k] = v
	}
	return res
}

func (this *ComponentDefinition_EventDefinition) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Identifier, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Type, dst)
}

func (this *ComponentDefinition_CommandDefinition) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	identifierFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.Identifier)
	hasInner = hasInner || len(identifierFields) > 0
	requestTypeFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.RequestType)
	hasInner = hasInner || len(requestTypeFields) > 0
	responseTypeFields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.ResponseType)
	hasInner = hasInner || len(responseTypeFields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range identifierFields {
		res[k] = v
	}
	for k, v := range requestTypeFields {
		res[k] = v
	}
	for k, v := range responseTypeFields {
		res[k] = v
	}
	return res
}

func (this *ComponentDefinition_CommandDefinition) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.Identifier, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.RequestType, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.ResponseType, dst)
}

func (this *SchemaBundleV1) LogFields() map[string]string {
	return map[string]string{}
}

func (this *SchemaBundleV1) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *SourceReference) LogFields() map[string]string {
	return map[string]string{}
}

func (this *SourceReference) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *SchemaSourceMapV1) LogFields() map[string]string {
	return map[string]string{}
}

func (this *SchemaSourceMapV1) ExtractRequestFields(dst map[string]interface{}) {
}

func (this *SchemaBundle) LogFields() map[string]string {
	// Handle being called on nil message.
	if this == nil {
		return map[string]string{}
	}
	// Gather fields from oneofs and child messages.
	var hasInner bool
	v1Fields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.V1)
	hasInner = hasInner || len(v1Fields) > 0
	sourceMapV1Fields := github_com_improbable_io_go_proto_logfields.ExtractLogFieldsFromMessage(this.SourceMapV1)
	hasInner = hasInner || len(sourceMapV1Fields) > 0
	if !hasInner {
		// If no inner messages added any fields, avoid merging maps.
		return map[string]string{}
	}
	// Merge all the field maps.
	res := map[string]string{}
	for k, v := range v1Fields {
		res[k] = v
	}
	for k, v := range sourceMapV1Fields {
		res[k] = v
	}
	return res
}

func (this *SchemaBundle) ExtractRequestFields(dst map[string]interface{}) {
	// Handle being called on nil message.
	if this == nil {
		return
	}

	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.V1, dst)
	github_com_improbable_io_go_proto_logfields.ExtractRequestFieldsFromMessage(this.SourceMapV1, dst)
}
