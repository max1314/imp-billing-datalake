// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: improbable/schema/schema_bundle.proto

package improbable_schema

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *Identifier) Validate() error {
	return nil
}
func (this *EnumReference) Validate() error {
	return nil
}
func (this *EnumDefinition) Validate() error {
	if this.Identifier != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Identifier); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Identifier", err)
		}
	}
	for _, item := range this.ValueDefinitions {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("ValueDefinitions", err)
			}
		}
	}
	return nil
}
func (this *EnumDefinition_ValueDefinition) Validate() error {
	if this.Identifier != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Identifier); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Identifier", err)
		}
	}
	return nil
}
func (this *ValueTypeReference) Validate() error {
	if oneOfNester, ok := this.GetValueType().(*ValueTypeReference_Enum); ok {
		if oneOfNester.Enum != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.Enum); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Enum", err)
			}
		}
	}
	if oneOfNester, ok := this.GetValueType().(*ValueTypeReference_Type); ok {
		if oneOfNester.Type != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.Type); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Type", err)
			}
		}
	}
	return nil
}
func (this *TypeReference) Validate() error {
	return nil
}
func (this *TypeDefinition) Validate() error {
	if this.Identifier != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Identifier); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Identifier", err)
		}
	}
	for _, item := range this.FieldDefinitions {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("FieldDefinitions", err)
			}
		}
	}
	return nil
}
func (this *TypeDefinition_FieldDefinition) Validate() error {
	if this.Identifier != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Identifier); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Identifier", err)
		}
	}
	if oneOfNester, ok := this.GetType().(*TypeDefinition_FieldDefinition_SingularType_); ok {
		if oneOfNester.SingularType != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.SingularType); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("SingularType", err)
			}
		}
	}
	if oneOfNester, ok := this.GetType().(*TypeDefinition_FieldDefinition_OptionType_); ok {
		if oneOfNester.OptionType != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.OptionType); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("OptionType", err)
			}
		}
	}
	if oneOfNester, ok := this.GetType().(*TypeDefinition_FieldDefinition_ListType_); ok {
		if oneOfNester.ListType != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.ListType); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("ListType", err)
			}
		}
	}
	if oneOfNester, ok := this.GetType().(*TypeDefinition_FieldDefinition_MapType_); ok {
		if oneOfNester.MapType != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.MapType); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("MapType", err)
			}
		}
	}
	return nil
}
func (this *TypeDefinition_FieldDefinition_SingularType) Validate() error {
	if this.Type != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Type); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Type", err)
		}
	}
	return nil
}
func (this *TypeDefinition_FieldDefinition_OptionType) Validate() error {
	if this.InnerType != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.InnerType); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("InnerType", err)
		}
	}
	return nil
}
func (this *TypeDefinition_FieldDefinition_ListType) Validate() error {
	if this.InnerType != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.InnerType); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("InnerType", err)
		}
	}
	return nil
}
func (this *TypeDefinition_FieldDefinition_MapType) Validate() error {
	if this.KeyType != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.KeyType); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("KeyType", err)
		}
	}
	if this.ValueType != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ValueType); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ValueType", err)
		}
	}
	return nil
}
func (this *ComponentDefinition) Validate() error {
	if this.Identifier != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Identifier); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Identifier", err)
		}
	}
	if this.DataDefinition != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.DataDefinition); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("DataDefinition", err)
		}
	}
	for _, item := range this.EventDefinitions {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("EventDefinitions", err)
			}
		}
	}
	for _, item := range this.CommandDefinitions {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("CommandDefinitions", err)
			}
		}
	}
	return nil
}
func (this *ComponentDefinition_EventDefinition) Validate() error {
	if this.Identifier != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Identifier); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Identifier", err)
		}
	}
	if this.Type != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Type); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Type", err)
		}
	}
	return nil
}
func (this *ComponentDefinition_CommandDefinition) Validate() error {
	if this.Identifier != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Identifier); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Identifier", err)
		}
	}
	if this.RequestType != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.RequestType); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("RequestType", err)
		}
	}
	if this.ResponseType != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ResponseType); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ResponseType", err)
		}
	}
	return nil
}
func (this *SchemaBundleV1) Validate() error {
	for _, item := range this.EnumDefinitions {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("EnumDefinitions", err)
			}
		}
	}
	for _, item := range this.TypeDefinitions {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("TypeDefinitions", err)
			}
		}
	}
	for _, item := range this.ComponentDefinitions {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("ComponentDefinitions", err)
			}
		}
	}
	return nil
}
func (this *SourceReference) Validate() error {
	return nil
}
func (this *SchemaSourceMapV1) Validate() error {
	// Validation of proto3 map<> fields is unsupported.
	return nil
}
func (this *SchemaBundle) Validate() error {
	if this.V1 != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.V1); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("V1", err)
		}
	}
	if this.SourceMapV1 != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.SourceMapV1); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("SourceMapV1", err)
		}
	}
	return nil
}
